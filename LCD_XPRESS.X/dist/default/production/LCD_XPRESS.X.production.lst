

Microchip Technology PIC PRO Macro Assembler V1.41 build -162212810 
                                                                                               Tue Dec 13 17:00:33 2022

Microchip Technology Omniscient Code Generator v1.41 (PRO mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	pa_nodes0,global,class=CODE,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 1.41
    11                           ; Generated 25/01/2017 GMT
    12                           ; 
    13                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F18855 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  001C                     	;# 
    67  001C                     	;# 
    68  001D                     	;# 
    69  001D                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  008C                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  008E                     	;# 
    77  008F                     	;# 
    78  0090                     	;# 
    79  0090                     	;# 
    80  0091                     	;# 
    81  0093                     	;# 
    82  0094                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  010E                     	;# 
    97  010F                     	;# 
    98  0110                     	;# 
    99  0110                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0114                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0119                     	;# 
   111  0119                     	;# 
   112  0119                     	;# 
   113  011A                     	;# 
   114  011A                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011B                     	;# 
   118  011B                     	;# 
   119  011B                     	;# 
   120  011B                     	;# 
   121  011C                     	;# 
   122  011C                     	;# 
   123  011C                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  011E                     	;# 
   129  011E                     	;# 
   130  011F                     	;# 
   131  011F                     	;# 
   132  011F                     	;# 
   133  011F                     	;# 
   134  011F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  018E                     	;# 
   138  018F                     	;# 
   139  0190                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0196                     	;# 
   143  0197                     	;# 
   144  0198                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  020C                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  020E                     	;# 
   153  020F                     	;# 
   154  020F                     	;# 
   155  0210                     	;# 
   156  0210                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0218                     	;# 
   170  0218                     	;# 
   171  0219                     	;# 
   172  021A                     	;# 
   173  021B                     	;# 
   174  021B                     	;# 
   175  021C                     	;# 
   176  021C                     	;# 
   177  021D                     	;# 
   178  021D                     	;# 
   179  021E                     	;# 
   180  021F                     	;# 
   181  028C                     	;# 
   182  028C                     	;# 
   183  028D                     	;# 
   184  028D                     	;# 
   185  028E                     	;# 
   186  028F                     	;# 
   187  0290                     	;# 
   188  0290                     	;# 
   189  0291                     	;# 
   190  0292                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0293                     	;# 
   194  0294                     	;# 
   195  0295                     	;# 
   196  0296                     	;# 
   197  0296                     	;# 
   198  0297                     	;# 
   199  0298                     	;# 
   200  0298                     	;# 
   201  0299                     	;# 
   202  0299                     	;# 
   203  029A                     	;# 
   204  029B                     	;# 
   205  029C                     	;# 
   206  029C                     	;# 
   207  029D                     	;# 
   208  030C                     	;# 
   209  030C                     	;# 
   210  030D                     	;# 
   211  030E                     	;# 
   212  030F                     	;# 
   213  0310                     	;# 
   214  0310                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0314                     	;# 
   219  0314                     	;# 
   220  0315                     	;# 
   221  0316                     	;# 
   222  0317                     	;# 
   223  0318                     	;# 
   224  0318                     	;# 
   225  0319                     	;# 
   226  031A                     	;# 
   227  031B                     	;# 
   228  031C                     	;# 
   229  031C                     	;# 
   230  031D                     	;# 
   231  031E                     	;# 
   232  031F                     	;# 
   233  038C                     	;# 
   234  038D                     	;# 
   235  038E                     	;# 
   236  0390                     	;# 
   237  0391                     	;# 
   238  0392                     	;# 
   239  040C                     	;# 
   240  040D                     	;# 
   241  040E                     	;# 
   242  040F                     	;# 
   243  0410                     	;# 
   244  0411                     	;# 
   245  0416                     	;# 
   246  0416                     	;# 
   247  0417                     	;# 
   248  0418                     	;# 
   249  0418                     	;# 
   250  0419                     	;# 
   251  041A                     	;# 
   252  041A                     	;# 
   253  041B                     	;# 
   254  041C                     	;# 
   255  041C                     	;# 
   256  041D                     	;# 
   257  041E                     	;# 
   258  041F                     	;# 
   259  048C                     	;# 
   260  048C                     	;# 
   261  048D                     	;# 
   262  048E                     	;# 
   263  048F                     	;# 
   264  048F                     	;# 
   265  0490                     	;# 
   266  0491                     	;# 
   267  0492                     	;# 
   268  0492                     	;# 
   269  0493                     	;# 
   270  0494                     	;# 
   271  0495                     	;# 
   272  0495                     	;# 
   273  0496                     	;# 
   274  0497                     	;# 
   275  0498                     	;# 
   276  0499                     	;# 
   277  049A                     	;# 
   278  049B                     	;# 
   279  049C                     	;# 
   280  049D                     	;# 
   281  050C                     	;# 
   282  050C                     	;# 
   283  050D                     	;# 
   284  050E                     	;# 
   285  050F                     	;# 
   286  050F                     	;# 
   287  0510                     	;# 
   288  0511                     	;# 
   289  0512                     	;# 
   290  0512                     	;# 
   291  0513                     	;# 
   292  0514                     	;# 
   293  0515                     	;# 
   294  0515                     	;# 
   295  0516                     	;# 
   296  0517                     	;# 
   297  0518                     	;# 
   298  0519                     	;# 
   299  051A                     	;# 
   300  051B                     	;# 
   301  051C                     	;# 
   302  051D                     	;# 
   303  058C                     	;# 
   304  058C                     	;# 
   305  058D                     	;# 
   306  058E                     	;# 
   307  058F                     	;# 
   308  058F                     	;# 
   309  0590                     	;# 
   310  0591                     	;# 
   311  0592                     	;# 
   312  0593                     	;# 
   313  060C                     	;# 
   314  060D                     	;# 
   315  060E                     	;# 
   316  060F                     	;# 
   317  0610                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0614                     	;# 
   322  0616                     	;# 
   323  0617                     	;# 
   324  0618                     	;# 
   325  0619                     	;# 
   326  061A                     	;# 
   327  061B                     	;# 
   328  061C                     	;# 
   329  061D                     	;# 
   330  061E                     	;# 
   331  068C                     	;# 
   332  068D                     	;# 
   333  068E                     	;# 
   334  068F                     	;# 
   335  0690                     	;# 
   336  0691                     	;# 
   337  0692                     	;# 
   338  0693                     	;# 
   339  0694                     	;# 
   340  070C                     	;# 
   341  070D                     	;# 
   342  070E                     	;# 
   343  070F                     	;# 
   344  0710                     	;# 
   345  0711                     	;# 
   346  0712                     	;# 
   347  0713                     	;# 
   348  0714                     	;# 
   349  0716                     	;# 
   350  0717                     	;# 
   351  0718                     	;# 
   352  0719                     	;# 
   353  071A                     	;# 
   354  071B                     	;# 
   355  071C                     	;# 
   356  071D                     	;# 
   357  071E                     	;# 
   358  0796                     	;# 
   359  0797                     	;# 
   360  0798                     	;# 
   361  0799                     	;# 
   362  079A                     	;# 
   363  079B                     	;# 
   364  080C                     	;# 
   365  080D                     	;# 
   366  080E                     	;# 
   367  080F                     	;# 
   368  0810                     	;# 
   369  0811                     	;# 
   370  0812                     	;# 
   371  0813                     	;# 
   372  0814                     	;# 
   373  081A                     	;# 
   374  081B                     	;# 
   375  081C                     	;# 
   376  081D                     	;# 
   377  081E                     	;# 
   378  081F                     	;# 
   379  088C                     	;# 
   380  088D                     	;# 
   381  088E                     	;# 
   382  088F                     	;# 
   383  0890                     	;# 
   384  0891                     	;# 
   385  0892                     	;# 
   386  0893                     	;# 
   387  0895                     	;# 
   388  0896                     	;# 
   389  0897                     	;# 
   390  0898                     	;# 
   391  0899                     	;# 
   392  089A                     	;# 
   393  089B                     	;# 
   394  090C                     	;# 
   395  090E                     	;# 
   396  090F                     	;# 
   397  091F                     	;# 
   398  091F                     	;# 
   399  098F                     	;# 
   400  098F                     	;# 
   401  0990                     	;# 
   402  0991                     	;# 
   403  0992                     	;# 
   404  0993                     	;# 
   405  0994                     	;# 
   406  0995                     	;# 
   407  0996                     	;# 
   408  0997                     	;# 
   409  0E0F                     	;# 
   410  0E10                     	;# 
   411  0E11                     	;# 
   412  0E12                     	;# 
   413  0E13                     	;# 
   414  0E14                     	;# 
   415  0E15                     	;# 
   416  0E16                     	;# 
   417  0E17                     	;# 
   418  0E18                     	;# 
   419  0E19                     	;# 
   420  0E1A                     	;# 
   421  0E1B                     	;# 
   422  0E1C                     	;# 
   423  0E1D                     	;# 
   424  0E1E                     	;# 
   425  0E1F                     	;# 
   426  0E20                     	;# 
   427  0E21                     	;# 
   428  0E22                     	;# 
   429  0E23                     	;# 
   430  0E24                     	;# 
   431  0E25                     	;# 
   432  0E26                     	;# 
   433  0E27                     	;# 
   434  0E28                     	;# 
   435  0E29                     	;# 
   436  0E2A                     	;# 
   437  0E2B                     	;# 
   438  0E2C                     	;# 
   439  0E2D                     	;# 
   440  0E2E                     	;# 
   441  0E2F                     	;# 
   442  0E30                     	;# 
   443  0E31                     	;# 
   444  0E32                     	;# 
   445  0E33                     	;# 
   446  0E34                     	;# 
   447  0E35                     	;# 
   448  0E36                     	;# 
   449  0E37                     	;# 
   450  0E8F                     	;# 
   451  0E90                     	;# 
   452  0E91                     	;# 
   453  0E92                     	;# 
   454  0E93                     	;# 
   455  0E94                     	;# 
   456  0E95                     	;# 
   457  0E96                     	;# 
   458  0E97                     	;# 
   459  0E9C                     	;# 
   460  0E9D                     	;# 
   461  0E9E                     	;# 
   462  0EA1                     	;# 
   463  0EA2                     	;# 
   464  0EA3                     	;# 
   465  0EA4                     	;# 
   466  0EA5                     	;# 
   467  0EA9                     	;# 
   468  0EAA                     	;# 
   469  0EAB                     	;# 
   470  0EAC                     	;# 
   471  0EB1                     	;# 
   472  0EB2                     	;# 
   473  0EB3                     	;# 
   474  0EB8                     	;# 
   475  0EB9                     	;# 
   476  0EBA                     	;# 
   477  0EBB                     	;# 
   478  0EBC                     	;# 
   479  0EBD                     	;# 
   480  0EBE                     	;# 
   481  0EC3                     	;# 
   482  0EC5                     	;# 
   483  0EC6                     	;# 
   484  0EC7                     	;# 
   485  0EC8                     	;# 
   486  0EC9                     	;# 
   487  0ECA                     	;# 
   488  0ECB                     	;# 
   489  0ECC                     	;# 
   490  0F10                     	;# 
   491  0F11                     	;# 
   492  0F12                     	;# 
   493  0F13                     	;# 
   494  0F14                     	;# 
   495  0F15                     	;# 
   496  0F16                     	;# 
   497  0F17                     	;# 
   498  0F18                     	;# 
   499  0F19                     	;# 
   500  0F1A                     	;# 
   501  0F1B                     	;# 
   502  0F1C                     	;# 
   503  0F1D                     	;# 
   504  0F1E                     	;# 
   505  0F1F                     	;# 
   506  0F20                     	;# 
   507  0F21                     	;# 
   508  0F22                     	;# 
   509  0F23                     	;# 
   510  0F24                     	;# 
   511  0F25                     	;# 
   512  0F26                     	;# 
   513  0F27                     	;# 
   514  0F38                     	;# 
   515  0F39                     	;# 
   516  0F3A                     	;# 
   517  0F3B                     	;# 
   518  0F3C                     	;# 
   519  0F3D                     	;# 
   520  0F3E                     	;# 
   521  0F3F                     	;# 
   522  0F40                     	;# 
   523  0F41                     	;# 
   524  0F43                     	;# 
   525  0F44                     	;# 
   526  0F45                     	;# 
   527  0F46                     	;# 
   528  0F47                     	;# 
   529  0F48                     	;# 
   530  0F49                     	;# 
   531  0F4A                     	;# 
   532  0F4B                     	;# 
   533  0F4C                     	;# 
   534  0F4E                     	;# 
   535  0F4F                     	;# 
   536  0F50                     	;# 
   537  0F51                     	;# 
   538  0F52                     	;# 
   539  0F53                     	;# 
   540  0F54                     	;# 
   541  0F55                     	;# 
   542  0F56                     	;# 
   543  0F57                     	;# 
   544  0F65                     	;# 
   545  0F68                     	;# 
   546  0F69                     	;# 
   547  0F6A                     	;# 
   548  0F6B                     	;# 
   549  0FE4                     	;# 
   550  0FE5                     	;# 
   551  0FE6                     	;# 
   552  0FE7                     	;# 
   553  0FE8                     	;# 
   554  0FE9                     	;# 
   555  0FEA                     	;# 
   556  0FEB                     	;# 
   557  0FED                     	;# 
   558  0FEE                     	;# 
   559  0FEF                     	;# 
   560  0012                     _TRISB	set	18
   561  0017                     _LATBbits	set	23
   562  0F43                     _ANSELB	set	3907
   563                           
   564                           	psect	stringtext
   565  0800                     __pstringtext:	
   566  0800                     STR_1:	
   567  0800  3450               	retlw	80	;'P'
   568  0801  3472               	retlw	114	;'r'
   569  0802  3475               	retlw	117	;'u'
   570  0803  3465               	retlw	101	;'e'
   571  0804  3462               	retlw	98	;'b'
   572  0805  3461               	retlw	97	;'a'
   573  0806  3420               	retlw	32	;' '
   574  0807  344C               	retlw	76	;'L'
   575  0808  3443               	retlw	67	;'C'
   576  0809  3444               	retlw	68	;'D'
   577  080A  3400               	retlw	0
   578  080B                     STR_2:	
   579  080B  344C               	retlw	76	;'L'
   580  080C  3469               	retlw	105	;'i'
   581  080D  346E               	retlw	110	;'n'
   582  080E  3465               	retlw	101	;'e'
   583  080F  3461               	retlw	97	;'a'
   584  0810  3420               	retlw	32	;' '
   585  0811  3432               	retlw	50	;'2'
   586  0812  3400               	retlw	0
   587                           
   588                           ; #config settings
   589  0000                     
   590                           	psect	cinit
   591  06F5                     start_initialization:	
   592  06F5                     __initialization:	
   593  06F5                     end_of_initialization:	
   594                           ;End of C runtime variable initialization code
   595                           
   596  06F5                     __end_of__initialization:	
   597  06F5  0020               	movlb	0
   598  06F6  2F16               	ljmp	_main	;jump to C main() function
   599  06F7                     __ptext2:	
   600 ;; *************** function _Lcd_Write_Char *****************
   601 ;; Defined at:
   602 ;;		line 97 in file "lcd.h"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  a               1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  a               1    3[COMMON] unsigned char 
   607 ;;  y               1    2[COMMON] unsigned char 
   608 ;;  temp            1    1[COMMON] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 1F/0
   615 ;;		On exit  : 1F/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   621 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   622 ;;Total ram usage:        3 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		_Lcd_Port
   627 ;; This function is called by:
   628 ;;		_Lcd_Write_String
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _Lcd_Write_Char
   634  06F7                     _Lcd_Write_Char:	
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   638                           ;Lcd_Write_Char@a stored from wreg
   639  06F7  00F3               	movwf	Lcd_Write_Char@a
   640                           
   641                           ;lcd.h: 99: char temp,y;
   642                           ;lcd.h: 100: temp = a&0x0F;
   643  06F8  00F1               	movwf	Lcd_Write_Char@temp
   644  06F9  300F               	movlw	15
   645  06FA  05F1               	andwf	Lcd_Write_Char@temp,f
   646                           
   647                           ;lcd.h: 101: y = a&0xF0;
   648  06FB  0873               	movf	Lcd_Write_Char@a,w
   649  06FC  00F2               	movwf	Lcd_Write_Char@y
   650  06FD  30F0               	movlw	240
   651  06FE  05F2               	andwf	Lcd_Write_Char@y,f
   652                           
   653                           ;lcd.h: 102: LATBbits.LATB0 = 1;
   654  06FF  1417               	bsf	23,0	;volatile
   655                           
   656                           ;lcd.h: 103: Lcd_Port(y>>4);
   657  0700  0E72               	swapf	Lcd_Write_Char@y,w
   658  0701  390F               	andlw	15
   659  0702  27C4  3186         	fcall	_Lcd_Port
   660                           
   661                           ;lcd.h: 104: LATBbits.LATB1 = 1;
   662  0704  1497               	bsf	23,1	;volatile
   663                           
   664                           ;lcd.h: 105: _delay((unsigned long)((40)*(32000000/4000000.0)));
   665  0705  306A               	movlw	106
   666  0706                     u177:	
   667  0706  0B89               	decfsz	9,f
   668  0707  2F06               	goto	u177
   669  0708  3200               	nop2
   670                           
   671                           ;lcd.h: 106: LATBbits.LATB1 = 0;
   672  0709  0020               	movlb	0	; select bank0
   673  070A  1097               	bcf	23,1	;volatile
   674                           
   675                           ;lcd.h: 107: Lcd_Port(temp);
   676  070B  0871               	movf	Lcd_Write_Char@temp,w
   677  070C  27C4  3186         	fcall	_Lcd_Port
   678                           
   679                           ;lcd.h: 108: LATBbits.LATB1 = 1;
   680  070E  1497               	bsf	23,1	;volatile
   681                           
   682                           ;lcd.h: 109: _delay((unsigned long)((40)*(32000000/4000000.0)));
   683  070F  306A               	movlw	106
   684  0710                     u187:	
   685  0710  0B89               	decfsz	9,f
   686  0711  2F10               	goto	u187
   687  0712  3200               	nop2
   688                           
   689                           ;lcd.h: 110: LATBbits.LATB1 = 0;
   690  0713  0020               	movlb	0	; select bank0
   691  0714  1097               	bcf	23,1	;volatile
   692  0715  0008               	return
   693  0716                     __end_of_Lcd_Write_Char:	
   694  0716                     __pmaintext:	
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 63 in file "LCD_XPRESS.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : B1F/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   718 ;;Total ram usage:        2 bytes
   719 ;; Hardware stack levels required when called:    3
   720 ;; This function calls:
   721 ;;		_Lcd_Clear
   722 ;;		_Lcd_Init
   723 ;;		_Lcd_Set_Cursor
   724 ;;		_Lcd_Write_String
   725 ;; This function is called by:
   726 ;;		Startup code after reset
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _main
   732  0716                     _main:	
   733                           
   734                           ;LCD_XPRESS.c: 65: ANSELB = 0x00;
   735                           
   736                           ;incstack = 0
   737                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   738  0716  003E               	movlb	30	; select bank30
   739  0717  01C3               	clrf	67	;volatile
   740                           
   741                           ;LCD_XPRESS.c: 66: TRISB = 0x00;
   742  0718  0020               	movlb	0	; select bank0
   743  0719  0192               	clrf	18	;volatile
   744                           
   745                           ;LCD_XPRESS.c: 68: Lcd_Init();
   746  071A  277E  3186         	fcall	_Lcd_Init
   747  071C                     l715:	
   748                           
   749                           ;LCD_XPRESS.c: 73: Lcd_Clear();
   750  071C  27DA  3186         	fcall	_Lcd_Clear
   751  071E  3001               	movlw	1
   752                           
   753                           ;LCD_XPRESS.c: 74: Lcd_Set_Cursor(1,1);
   754  071F  01F3               	clrf	Lcd_Set_Cursor@b
   755  0720  0AF3               	incf	Lcd_Set_Cursor@b,f
   756  0721  274F  3186         	fcall	_Lcd_Set_Cursor
   757                           
   758                           ;LCD_XPRESS.c: 75: Lcd_Write_String("Prueba LCD");
   759  0723  3000               	movlw	low (STR_1| (0+32768))
   760  0724  00F4               	movwf	Lcd_Write_String@a
   761  0725  3088               	movlw	high (STR_1| (0+32768))
   762  0726  00F5               	movwf	Lcd_Write_String@a+1
   763  0727  27DF  3186         	fcall	_Lcd_Write_String
   764                           
   765                           ;LCD_XPRESS.c: 76: _delay((unsigned long)((1000)*(32000000/4000.0)));
   766  0729  3029               	movlw	41
   767  072A  00FA               	movwf	??_main+1
   768  072B  3096               	movlw	150
   769  072C  00F9               	movwf	??_main
   770  072D  307F               	movlw	127
   771  072E                     u157:	
   772  072E  0B89               	decfsz	9,f
   773  072F  2F2E               	goto	u157
   774  0730  0BF9               	decfsz	??_main,f
   775  0731  2F2E               	goto	u157
   776  0732  0BFA               	decfsz	??_main+1,f
   777  0733  2F2E               	goto	u157
   778  0734  0000               	nop
   779                           
   780                           ;LCD_XPRESS.c: 77: Lcd_Clear();
   781  0735  27DA  3186         	fcall	_Lcd_Clear
   782  0737  3002               	movlw	2
   783                           
   784                           ;LCD_XPRESS.c: 78: Lcd_Set_Cursor(2,1);
   785  0738  01F3               	clrf	Lcd_Set_Cursor@b
   786  0739  0AF3               	incf	Lcd_Set_Cursor@b,f
   787  073A  274F  3186         	fcall	_Lcd_Set_Cursor
   788                           
   789                           ;LCD_XPRESS.c: 79: Lcd_Write_String("Linea 2");
   790  073C  300B               	movlw	low (STR_2| (0+32768))
   791  073D  00F4               	movwf	Lcd_Write_String@a
   792  073E  3088               	movlw	high (STR_2| (0+32768))
   793  073F  00F5               	movwf	Lcd_Write_String@a+1
   794  0740  27DF  3186         	fcall	_Lcd_Write_String
   795                           
   796                           ;LCD_XPRESS.c: 80: _delay((unsigned long)((2000)*(32000000/4000.0)));
   797  0742  3052               	movlw	82
   798  0743  00FA               	movwf	??_main+1
   799  0744  302B               	movlw	43
   800  0745  00F9               	movwf	??_main
   801  0746  3000               	movlw	0
   802  0747                     u167:	
   803  0747  0B89               	decfsz	9,f
   804  0748  2F47               	goto	u167
   805  0749  0BF9               	decfsz	??_main,f
   806  074A  2F47               	goto	u167
   807  074B  0BFA               	decfsz	??_main+1,f
   808  074C  2F47               	goto	u167
   809  074D  3200               	nop2
   810  074E  2F1C               	goto	l715
   811  074F                     __end_of_main:	
   812  074F                     __ptext3:	
   813 ;; *************** function _Lcd_Set_Cursor *****************
   814 ;; Defined at:
   815 ;;		line 41 in file "lcd.h"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  a               1    wreg     unsigned char 
   818 ;;  b               1    3[COMMON] unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  a               1    4[COMMON] unsigned char 
   821 ;;  temp            1    7[COMMON] unsigned char 
   822 ;;  y               1    6[COMMON] unsigned char 
   823 ;;  z               1    5[COMMON] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 1F/0
   830 ;;		On exit  : 1F/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   833 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   836 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   837 ;;Total ram usage:        5 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    2
   840 ;; This function calls:
   841 ;;		_Lcd_Cmd
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function _Lcd_Set_Cursor
   849  074F                     _Lcd_Set_Cursor:	
   850                           
   851                           ;incstack = 0
   852                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   853                           ;Lcd_Set_Cursor@a stored from wreg
   854  074F  00F4               	movwf	Lcd_Set_Cursor@a
   855                           
   856                           ;lcd.h: 43: char temp,z,y;
   857                           ;lcd.h: 44: if(a == 1)
   858  0750  0B74               	decfsz	Lcd_Set_Cursor@a,w
   859  0751  2F5A               	goto	l667
   860                           
   861                           ;lcd.h: 45: {
   862                           ;lcd.h: 46: temp = 0x80 + b - 1;
   863  0752  0873               	movf	Lcd_Set_Cursor@b,w
   864  0753  3E7F               	addlw	127
   865                           
   866                           ;lcd.h: 47: z = temp>>4;
   867                           
   868                           ;lcd.h: 48: y = temp & 0x0F;
   869                           
   870                           ;lcd.h: 49: Lcd_Cmd(z);
   871  0754  27EF  3186         	fcall	PL2	;call to abstracted procedure
   872  0756  27B3  3186         	fcall	_Lcd_Cmd
   873                           
   874                           ;lcd.h: 50: Lcd_Cmd(y);
   875  0758  0876               	movf	Lcd_Set_Cursor@y,w
   876  0759  2FB3               	ljmp	_Lcd_Cmd
   877  075A                     l667:	
   878                           ;lcd.h: 51: }
   879                           
   880                           
   881                           ;lcd.h: 52: else if(a == 2)
   882  075A  3002               	movlw	2
   883  075B  0674               	xorwf	Lcd_Set_Cursor@a,w
   884  075C  1D03               	btfss	3,2
   885  075D  2F66               	goto	l679
   886                           
   887                           ;lcd.h: 53: {
   888                           ;lcd.h: 54: temp = 0xC0 + b - 1;
   889  075E  0873               	movf	Lcd_Set_Cursor@b,w
   890  075F  3EBF               	addlw	191
   891                           
   892                           ;lcd.h: 55: z = temp>>4;
   893                           
   894                           ;lcd.h: 56: y = temp & 0x0F;
   895                           
   896                           ;lcd.h: 57: Lcd_Cmd(z);
   897  0760  27EF  3186         	fcall	PL2	;call to abstracted procedure
   898  0762  27B3  3186         	fcall	_Lcd_Cmd
   899                           
   900                           ;lcd.h: 58: Lcd_Cmd(y);
   901  0764  0876               	movf	Lcd_Set_Cursor@y,w
   902  0765  2FB3               	ljmp	_Lcd_Cmd
   903  0766                     l679:	
   904                           ;lcd.h: 59: }
   905                           
   906                           
   907                           ;lcd.h: 60: else if(a == 3)
   908  0766  3003               	movlw	3
   909  0767  0674               	xorwf	Lcd_Set_Cursor@a,w
   910  0768  1D03               	btfss	3,2
   911  0769  2F72               	goto	l691
   912                           
   913                           ;lcd.h: 61: {
   914                           ;lcd.h: 62: temp = 0x94 + b - 1;
   915  076A  0873               	movf	Lcd_Set_Cursor@b,w
   916  076B  3E93               	addlw	147
   917                           
   918                           ;lcd.h: 63: z = temp>>4;
   919                           
   920                           ;lcd.h: 64: y = temp & 0x0F;
   921                           
   922                           ;lcd.h: 65: Lcd_Cmd(z);
   923  076C  27EF  3186         	fcall	PL2	;call to abstracted procedure
   924  076E  27B3  3186         	fcall	_Lcd_Cmd
   925                           
   926                           ;lcd.h: 66: Lcd_Cmd(y);
   927  0770  0876               	movf	Lcd_Set_Cursor@y,w
   928  0771  2FB3               	ljmp	_Lcd_Cmd
   929  0772                     l691:	
   930                           ;lcd.h: 67: }
   931                           
   932                           
   933                           ;lcd.h: 68: else if(a == 4)
   934  0772  3004               	movlw	4
   935  0773  0674               	xorwf	Lcd_Set_Cursor@a,w
   936  0774  1D03               	btfss	3,2
   937  0775  0008               	return
   938                           
   939                           ;lcd.h: 69: {
   940                           ;lcd.h: 70: temp = 0xD4 + b - 1;
   941  0776  0873               	movf	Lcd_Set_Cursor@b,w
   942  0777  3ED3               	addlw	211
   943                           
   944                           ;lcd.h: 71: z = temp>>4;
   945                           
   946                           ;lcd.h: 72: y = temp & 0x0F;
   947                           
   948                           ;lcd.h: 73: Lcd_Cmd(z);
   949  0778  27EF  3186         	fcall	PL2	;call to abstracted procedure
   950  077A  27B3  3186         	fcall	_Lcd_Cmd
   951                           
   952                           ;lcd.h: 74: Lcd_Cmd(y);
   953  077C  0876               	movf	Lcd_Set_Cursor@y,w
   954  077D  2FB3               	ljmp	_Lcd_Cmd
   955  077E                     __end_of_Lcd_Set_Cursor:	
   956  077E                     __ptext4:	
   957 ;; *************** function _Lcd_Init *****************
   958 ;; Defined at:
   959 ;;		line 78 in file "lcd.h"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : B1F/0
   970 ;;		On exit  : 1F/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   977 ;;Total ram usage:        1 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    2
   980 ;; This function calls:
   981 ;;		_Lcd_Cmd
   982 ;;		_Lcd_Port
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _Lcd_Init
   990  077E                     _Lcd_Init:	
   991                           
   992                           ;lcd.h: 80: Lcd_Port(0x00);
   993                           
   994                           ;incstack = 0
   995                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   996  077E  3000               	movlw	0
   997  077F  27C4  3186         	fcall	_Lcd_Port
   998                           
   999                           ;lcd.h: 81: _delay((unsigned long)((20)*(32000000/4000.0)));
  1000  0781  30D0               	movlw	208
  1001  0782  00F3               	movwf	??_Lcd_Init
  1002  0783  30CA               	movlw	202
  1003  0784                     u197:	
  1004  0784  0B89               	decfsz	9,f
  1005  0785  2F84               	goto	u197
  1006  0786  0BF3               	decfsz	??_Lcd_Init,f
  1007  0787  2F84               	goto	u197
  1008                           
  1009                           ;lcd.h: 82: Lcd_Cmd(0x03);
  1010  0788  3003               	movlw	3
  1011  0789  27B3  3186         	fcall	_Lcd_Cmd
  1012                           
  1013                           ;lcd.h: 83: _delay((unsigned long)((5)*(32000000/4000.0)));
  1014  078B  3034               	movlw	52
  1015  078C  00F3               	movwf	??_Lcd_Init
  1016  078D  30F2               	movlw	242
  1017  078E                     u207:	
  1018  078E  0B89               	decfsz	9,f
  1019  078F  2F8E               	goto	u207
  1020  0790  0BF3               	decfsz	??_Lcd_Init,f
  1021  0791  2F8E               	goto	u207
  1022                           
  1023                           ;lcd.h: 84: Lcd_Cmd(0x03);
  1024  0792  3003               	movlw	3
  1025  0793  27B3  3186         	fcall	_Lcd_Cmd
  1026                           
  1027                           ;lcd.h: 85: _delay((unsigned long)((11)*(32000000/4000.0)));
  1028  0795  3073               	movlw	115
  1029  0796  00F3               	movwf	??_Lcd_Init
  1030  0797  3048               	movlw	72
  1031  0798                     u217:	
  1032  0798  0B89               	decfsz	9,f
  1033  0799  2F98               	goto	u217
  1034  079A  0BF3               	decfsz	??_Lcd_Init,f
  1035  079B  2F98               	goto	u217
  1036                           
  1037                           ;lcd.h: 86: Lcd_Cmd(0x03);
  1038  079C  3003               	movlw	3
  1039  079D  27B3  3186         	fcall	_Lcd_Cmd
  1040                           
  1041                           ;lcd.h: 88: Lcd_Cmd(0x02);
  1042  079F  3002               	movlw	2
  1043  07A0  27B3  3186         	fcall	_Lcd_Cmd
  1044                           
  1045                           ;lcd.h: 89: Lcd_Cmd(0x02);
  1046  07A2  3002               	movlw	2
  1047  07A3  27B3  3186         	fcall	_Lcd_Cmd
  1048                           
  1049                           ;lcd.h: 90: Lcd_Cmd(0x08);
  1050  07A5  3008               	movlw	8
  1051  07A6  27B3  3186         	fcall	_Lcd_Cmd
  1052                           
  1053                           ;lcd.h: 91: Lcd_Cmd(0x00);
  1054  07A8  3000               	movlw	0
  1055  07A9  27B3  3186         	fcall	_Lcd_Cmd
  1056                           
  1057                           ;lcd.h: 92: Lcd_Cmd(0x0C);
  1058  07AB  300C               	movlw	12
  1059  07AC  27B3  3186         	fcall	_Lcd_Cmd
  1060                           
  1061                           ;lcd.h: 93: Lcd_Cmd(0x00);
  1062  07AE  3000               	movlw	0
  1063  07AF  27B3  3186         	fcall	_Lcd_Cmd
  1064                           
  1065                           ;lcd.h: 94: Lcd_Cmd(0x06);
  1066  07B1  3006               	movlw	6
  1067  07B2  2FB3               	ljmp	_Lcd_Cmd
  1068  07B3                     __end_of_Lcd_Init:	
  1069  07B3                     __ptext6:	
  1070 ;; *************** function _Lcd_Cmd *****************
  1071 ;; Defined at:
  1072 ;;		line 26 in file "lcd.h"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  a               1    wreg     unsigned char 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  a               1    2[COMMON] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 1F/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;Total ram usage:        2 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    1
  1093 ;; This function calls:
  1094 ;;		_Lcd_Port
  1095 ;; This function is called by:
  1096 ;;		_Lcd_Clear
  1097 ;;		_Lcd_Set_Cursor
  1098 ;;		_Lcd_Init
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _Lcd_Cmd
  1104  07B3                     _Lcd_Cmd:	
  1105                           
  1106                           ;incstack = 0
  1107                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1108                           ;Lcd_Cmd@a stored from wreg
  1109  07B3  00F2               	movwf	Lcd_Cmd@a
  1110                           
  1111                           ;lcd.h: 28: LATBbits.LATB0 = 0;
  1112  07B4  0020               	movlb	0	; select bank0
  1113  07B5  1017               	bcf	23,0	;volatile
  1114                           
  1115                           ;lcd.h: 29: Lcd_Port(a);
  1116  07B6  0872               	movf	Lcd_Cmd@a,w
  1117  07B7  27C4  3186         	fcall	_Lcd_Port
  1118                           
  1119                           ;lcd.h: 30: LATBbits.LATB1 = 1;
  1120  07B9  1497               	bsf	23,1	;volatile
  1121                           
  1122                           ;lcd.h: 31: _delay((unsigned long)((4)*(32000000/4000.0)));
  1123  07BA  302A               	movlw	42
  1124  07BB  00F1               	movwf	??_Lcd_Cmd
  1125  07BC  308E               	movlw	142
  1126  07BD                     u227:	
  1127  07BD  0B89               	decfsz	9,f
  1128  07BE  2FBD               	goto	u227
  1129  07BF  0BF1               	decfsz	??_Lcd_Cmd,f
  1130  07C0  2FBD               	goto	u227
  1131                           
  1132                           ;lcd.h: 32: LATBbits.LATB1 = 0;
  1133  07C1  0020               	movlb	0	; select bank0
  1134  07C2  1097               	bcf	23,1	;volatile
  1135  07C3  0008               	return
  1136  07C4                     __end_of_Lcd_Cmd:	
  1137  07C4                     __ptext7:	
  1138 ;; *************** function _Lcd_Port *****************
  1139 ;; Defined at:
  1140 ;;		line 4 in file "lcd.h"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  a               1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  a               1    0[COMMON] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg
  1149 ;; Tracked objects:
  1150 ;;		On entry : 1F/0
  1151 ;;		On exit  : 1F/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1158 ;;Total ram usage:        1 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_Lcd_Cmd
  1164 ;;		_Lcd_Init
  1165 ;;		_Lcd_Write_Char
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _Lcd_Port
  1171  07C4                     _Lcd_Port:	
  1172                           
  1173                           ;incstack = 0
  1174                           ; Regs used in _Lcd_Port: [wreg]
  1175                           ;Lcd_Port@a stored from wreg
  1176  07C4  00F0               	movwf	Lcd_Port@a
  1177                           
  1178                           ;lcd.h: 6: if(a & 1)
  1179  07C5  1C70               	btfss	Lcd_Port@a,0
  1180  07C6  2FC9               	goto	l11
  1181                           
  1182                           ;lcd.h: 7: LATBbits.LATB2 = 1;
  1183  07C7  1517               	bsf	23,2	;volatile
  1184  07C8  2FCA               	goto	l521
  1185  07C9                     l11:	
  1186                           
  1187                           ;lcd.h: 8: else
  1188                           ;lcd.h: 9: LATBbits.LATB2 = 0;
  1189  07C9  1117               	bcf	23,2	;volatile
  1190  07CA                     l521:	
  1191                           
  1192                           ;lcd.h: 11: if(a & 2)
  1193  07CA  1CF0               	btfss	Lcd_Port@a,1
  1194  07CB  2FCE               	goto	l13
  1195                           
  1196                           ;lcd.h: 12: LATBbits.LATB3 = 1;
  1197  07CC  1597               	bsf	23,3	;volatile
  1198  07CD  2FCF               	goto	l525
  1199  07CE                     l13:	
  1200                           
  1201                           ;lcd.h: 13: else
  1202                           ;lcd.h: 14: LATBbits.LATB3 = 0;
  1203  07CE  1197               	bcf	23,3	;volatile
  1204  07CF                     l525:	
  1205                           
  1206                           ;lcd.h: 16: if(a & 4)
  1207  07CF  1D70               	btfss	Lcd_Port@a,2
  1208  07D0  2FD3               	goto	l15
  1209                           
  1210                           ;lcd.h: 17: LATBbits.LATB4 = 1;
  1211  07D1  1617               	bsf	23,4	;volatile
  1212  07D2  2FD4               	goto	l529
  1213  07D3                     l15:	
  1214                           
  1215                           ;lcd.h: 18: else
  1216                           ;lcd.h: 19: LATBbits.LATB4 = 0;
  1217  07D3  1217               	bcf	23,4	;volatile
  1218  07D4                     l529:	
  1219                           
  1220                           ;lcd.h: 21: if(a & 8)
  1221  07D4  1DF0               	btfss	Lcd_Port@a,3
  1222  07D5  2FD8               	goto	l17
  1223                           
  1224                           ;lcd.h: 22: LATBbits.LATB5 = 1;
  1225  07D6  1697               	bsf	23,5	;volatile
  1226  07D7  0008               	return
  1227  07D8                     l17:	
  1228                           
  1229                           ;lcd.h: 23: else
  1230                           ;lcd.h: 24: LATBbits.LATB5 = 0;
  1231  07D8  1297               	bcf	23,5	;volatile
  1232  07D9  0008               	return
  1233  07DA                     __end_of_Lcd_Port:	
  1234  007E                     btemp	set	126	;btemp
  1235  007E                     wtemp0	set	126
  1236  07DA                     __ptext5:	
  1237 ;; *************** function _Lcd_Clear *****************
  1238 ;; Defined at:
  1239 ;;		line 35 in file "lcd.h"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2   24[None  ] int 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 1F/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    2
  1260 ;; This function calls:
  1261 ;;		_Lcd_Cmd
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _Lcd_Clear
  1269  07DA                     _Lcd_Clear:	
  1270                           
  1271                           ;lcd.h: 37: Lcd_Cmd(0);
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1275  07DA  3000               	movlw	0
  1276  07DB  27B3  3186         	fcall	_Lcd_Cmd
  1277                           
  1278                           ;lcd.h: 38: Lcd_Cmd(1);
  1279  07DD  3001               	movlw	1
  1280  07DE  2FB3               	ljmp	_Lcd_Cmd
  1281  07DF                     __end_of_Lcd_Clear:	
  1282  07DF                     __ptext1:	
  1283 ;; *************** function _Lcd_Write_String *****************
  1284 ;; Defined at:
  1285 ;;		line 113 in file "lcd.h"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  a               2    4[COMMON] PTR unsigned char 
  1288 ;;		 -> STR_2(8), STR_1(11), 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  i               2    7[COMMON] int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 1F/0
  1297 ;;		On exit  : 1F/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1303 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1304 ;;Total ram usage:        5 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    2
  1307 ;; This function calls:
  1308 ;;		_Lcd_Write_Char
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _Lcd_Write_String
  1316  07DF                     _Lcd_Write_String:	
  1317                           
  1318                           ;lcd.h: 115: int i;
  1319                           ;lcd.h: 116: for(i=0;a[i]!='\0';i++)
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1323  07DF  01F7               	clrf	Lcd_Write_String@i
  1324  07E0  01F8               	clrf	Lcd_Write_String@i+1
  1325  07E1                     l709:	
  1326  07E1  27F9  3186         	fcall	PL4	;call to abstracted procedure
  1327  07E3  0012               	moviw fsr0++
  1328  07E4  1903               	btfsc	3,2
  1329  07E5  0008               	return
  1330                           
  1331                           ;lcd.h: 117: Lcd_Write_Char(a[i]);
  1332  07E6  27F9  3186         	fcall	PL4	;call to abstracted procedure
  1333  07E8  0800               	movf	0,w	;code access
  1334  07E9  26F7  3186         	fcall	_Lcd_Write_Char
  1335  07EB  0AF7               	incf	Lcd_Write_String@i,f
  1336  07EC  1903               	skipnz
  1337  07ED  0AF8               	incf	Lcd_Write_String@i+1,f
  1338  07EE  2FE1               	goto	l709
  1339  07EF                     __end_of_Lcd_Write_String:	
  1340  07EF                     PL2:	
  1341  07EF  00F7               	movwf	Lcd_Set_Cursor@temp
  1342  07F0  0E77               	swapf	Lcd_Set_Cursor@temp,w
  1343  07F1  390F               	andlw	15
  1344  07F2  00F5               	movwf	Lcd_Set_Cursor@z
  1345  07F3  0877               	movf	Lcd_Set_Cursor@temp,w
  1346  07F4  00F6               	movwf	Lcd_Set_Cursor@y
  1347  07F5  300F               	movlw	15
  1348  07F6  05F6               	andwf	Lcd_Set_Cursor@y,f
  1349  07F7  0875               	movf	Lcd_Set_Cursor@z,w
  1350  07F8  0008               	return
  1351  07F9                     __end_ofPL2:	
  1352  07F9                     PL4:	
  1353  07F9  0874               	movf	Lcd_Write_String@a,w
  1354  07FA  0777               	addwf	Lcd_Write_String@i,w
  1355  07FB  0084               	movwf	4
  1356  07FC  0875               	movf	Lcd_Write_String@a+1,w
  1357  07FD  3D78               	addwfc	Lcd_Write_String@i+1,w
  1358  07FE  0085               	movwf	5
  1359  07FF  0008               	return
  1360  0800                     __end_ofPL4:	
  1361                           
  1362                           	psect	cstackCOMMON
  1363  0070                     __pcstackCOMMON:	
  1364  0070                     ?_Lcd_Port:	
  1365  0070                     ??_Lcd_Port:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_Lcd_Cmd:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_Lcd_Init:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_Lcd_Write_Char:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ?_main:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_Lcd_Clear:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     Lcd_Port@a:	
  1384                           ; 2 bytes @ 0x0
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x0
  1388  0070                     	ds	1
  1389  0071                     ??_Lcd_Cmd:	
  1390  0071                     ??_Lcd_Write_Char:	
  1391                           ; 1 bytes @ 0x1
  1392                           
  1393  0071                     Lcd_Write_Char@temp:	
  1394                           ; 1 bytes @ 0x1
  1395                           
  1396                           
  1397                           ; 1 bytes @ 0x1
  1398  0071                     	ds	1
  1399  0072                     Lcd_Cmd@a:	
  1400  0072                     Lcd_Write_Char@y:	
  1401                           ; 1 bytes @ 0x2
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0x2
  1405  0072                     	ds	1
  1406  0073                     ??_Lcd_Clear:	
  1407  0073                     ?_Lcd_Set_Cursor:	
  1408                           ; 1 bytes @ 0x3
  1409                           
  1410  0073                     ??_Lcd_Init:	
  1411                           ; 1 bytes @ 0x3
  1412                           
  1413  0073                     Lcd_Set_Cursor@b:	
  1414                           ; 1 bytes @ 0x3
  1415                           
  1416  0073                     Lcd_Write_Char@a:	
  1417                           ; 1 bytes @ 0x3
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0x3
  1421  0073                     	ds	1
  1422  0074                     ??_Lcd_Set_Cursor:	
  1423  0074                     ?_Lcd_Write_String:	
  1424                           ; 1 bytes @ 0x4
  1425                           
  1426  0074                     Lcd_Set_Cursor@a:	
  1427                           ; 1 bytes @ 0x4
  1428                           
  1429  0074                     Lcd_Write_String@a:	
  1430                           ; 1 bytes @ 0x4
  1431                           
  1432                           
  1433                           ; 2 bytes @ 0x4
  1434  0074                     	ds	1
  1435  0075                     Lcd_Set_Cursor@z:	
  1436                           
  1437                           ; 1 bytes @ 0x5
  1438  0075                     	ds	1
  1439  0076                     ??_Lcd_Write_String:	
  1440  0076                     Lcd_Set_Cursor@y:	
  1441                           ; 1 bytes @ 0x6
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0x6
  1445  0076                     	ds	1
  1446  0077                     Lcd_Set_Cursor@temp:	
  1447  0077                     Lcd_Write_String@i:	
  1448                           ; 1 bytes @ 0x7
  1449                           
  1450                           
  1451                           ; 2 bytes @ 0x7
  1452  0077                     	ds	2
  1453  0079                     ??_main:	
  1454                           
  1455                           ; 1 bytes @ 0x9
  1456  0079                     	ds	2


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[8]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1251
                                              9 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     316
                                              4 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     725
                                              3 COMMON     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     135
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Dec 13 17:00:33 2022

              __CFG_CP$OFF 0000                         PL2 07EF                         PL4 07F9  
                       l11 07C9                         l13 07CE                         l15 07D3  
                       l17 07D8                __CFG_LVP$ON 0000                        l521 07CA  
                      l525 07CF                        l529 07D4                        l715 071C  
                      l709 07E1                        l691 0772                        l667 075A  
                      l679 0766                        u207 078E                        u217 0798  
                      u227 07BD                        u157 072E                        u167 0747  
                      u177 0706               __CFG_CPD$OFF 0000                        u187 0710  
                      u197 0784               __CFG_BORV$LO 0000                        wreg 0009  
             __CFG_ZCD$OFF 0000                       STR_1 0800                       STR_2 080B  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000          ?_Lcd_Write_String 0074  
                     _main 0716                       fsr0h 0005                       indf0 0000  
                     fsr0l 0004                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0002         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 07C4  
            __CFG_CSWEN$ON 0000              __CFG_MCLRE$ON 0000                      ?_main 0070  
            __CFG_WDTE$OFF 0000    __size_of_Lcd_Set_Cursor 002F                      _TRISB 0012  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 07B3  
         __end_of_Lcd_Port 07DA            __initialization 06F5               __end_of_main 074F  
                   ??_main 0079         __size_of_Lcd_Clear 0005                     _ANSELB 0F43  
           __CFG_WDTCCS$SC 0000                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001F  
           __CFG_PWRTE$OFF 0000             __CFG_STVREN$ON 0000            Lcd_Set_Cursor@a 0074  
          Lcd_Set_Cursor@b 0073            Lcd_Set_Cursor@y 0076            Lcd_Set_Cursor@z 0075  
  __end_of__initialization 06F5          __end_of_Lcd_Clear 07DF             __pcstackCOMMON 0070  
               __end_ofPL2 07F9                 __end_ofPL4 0800             _Lcd_Set_Cursor 074F  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pmaintext 0716  
          __CFG_PPS1WAY$ON 0000  __size_of_Lcd_Write_String 0010     __end_of_Lcd_Set_Cursor 077E  
      __CFG_RSTOSC$HFINT32 0000                 ??_Lcd_Init 0073                 ??_Lcd_Port 0070  
           _Lcd_Write_Char 06F7                    _Lcd_Cmd 07B3       __CFG_SCANE$available 0000  
          ?_Lcd_Set_Cursor 0073                    __ptext1 07DF                    __ptext2 06F7  
                  __ptext3 074F                    __ptext4 077E                    __ptext5 07DA  
                  __ptext6 07B3                    __ptext7 07C4     __end_of_Lcd_Write_Char 0716  
     end_of_initialization 06F5                  Lcd_Port@a 0070               __pstringtext 0800  
    __CFG_WDTCPS$WDTCPS_31 0000           __CFG_FEXTOSC$OFF 0000            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0074          Lcd_Write_String@i 0077                  _Lcd_Clear 07DA  
         _Lcd_Write_String 07DF        start_initialization 06F5          __size_of_Lcd_Init 0035  
        __size_of_Lcd_Port 0016           __CFG_LPBOREN$OFF 0000                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0073            Lcd_Write_Char@y 0072                  ___latbits 0002  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0074                   _LATBbits 0017  
                 Lcd_Cmd@a 0072                ??_Lcd_Clear 0073           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 077E                   _Lcd_Port 07C4   __end_of_Lcd_Write_String 07EF  
         __size_of_Lcd_Cmd 0011              __size_of_main 0039       __CFG_WDTCWS$WDTCWS_7 0000  
       Lcd_Write_Char@temp 0071          __CFG_CLKOUTEN$OFF 0000         Lcd_Set_Cursor@temp 0077  
