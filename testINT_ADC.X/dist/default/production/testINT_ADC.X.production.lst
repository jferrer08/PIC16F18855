

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 15:38:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 19/07/2022 GMT
    42                           ; 
    43                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F18855 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     001C                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     008C                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     008E                     	;# 
   108     008F                     	;# 
   109     0090                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0110                     	;# 
   130     0110                     	;# 
   131     0111                     	;# 
   132     0112                     	;# 
   133     0112                     	;# 
   134     0113                     	;# 
   135     0114                     	;# 
   136     0114                     	;# 
   137     0115                     	;# 
   138     0116                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0119                     	;# 
   142     0119                     	;# 
   143     0119                     	;# 
   144     011A                     	;# 
   145     011A                     	;# 
   146     011A                     	;# 
   147     011B                     	;# 
   148     011B                     	;# 
   149     011B                     	;# 
   150     011B                     	;# 
   151     011B                     	;# 
   152     011C                     	;# 
   153     011C                     	;# 
   154     011C                     	;# 
   155     011D                     	;# 
   156     011D                     	;# 
   157     011D                     	;# 
   158     011E                     	;# 
   159     011E                     	;# 
   160     011E                     	;# 
   161     011F                     	;# 
   162     011F                     	;# 
   163     011F                     	;# 
   164     011F                     	;# 
   165     011F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     018E                     	;# 
   169     018F                     	;# 
   170     0190                     	;# 
   171     0191                     	;# 
   172     0192                     	;# 
   173     0196                     	;# 
   174     0197                     	;# 
   175     0198                     	;# 
   176     0199                     	;# 
   177     019A                     	;# 
   178     019B                     	;# 
   179     019C                     	;# 
   180     020C                     	;# 
   181     020C                     	;# 
   182     020D                     	;# 
   183     020E                     	;# 
   184     020F                     	;# 
   185     020F                     	;# 
   186     0210                     	;# 
   187     0210                     	;# 
   188     0211                     	;# 
   189     0211                     	;# 
   190     0212                     	;# 
   191     0212                     	;# 
   192     0213                     	;# 
   193     0214                     	;# 
   194     0215                     	;# 
   195     0215                     	;# 
   196     0216                     	;# 
   197     0216                     	;# 
   198     0217                     	;# 
   199     0217                     	;# 
   200     0218                     	;# 
   201     0218                     	;# 
   202     0219                     	;# 
   203     021A                     	;# 
   204     021B                     	;# 
   205     021B                     	;# 
   206     021C                     	;# 
   207     021C                     	;# 
   208     021D                     	;# 
   209     021D                     	;# 
   210     021E                     	;# 
   211     021F                     	;# 
   212     028C                     	;# 
   213     028C                     	;# 
   214     028D                     	;# 
   215     028D                     	;# 
   216     028E                     	;# 
   217     028F                     	;# 
   218     0290                     	;# 
   219     0290                     	;# 
   220     0291                     	;# 
   221     0292                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0293                     	;# 
   225     0294                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0296                     	;# 
   229     0297                     	;# 
   230     0298                     	;# 
   231     0298                     	;# 
   232     0299                     	;# 
   233     0299                     	;# 
   234     029A                     	;# 
   235     029B                     	;# 
   236     029C                     	;# 
   237     029C                     	;# 
   238     029D                     	;# 
   239     030C                     	;# 
   240     030C                     	;# 
   241     030D                     	;# 
   242     030E                     	;# 
   243     030F                     	;# 
   244     0310                     	;# 
   245     0310                     	;# 
   246     0311                     	;# 
   247     0312                     	;# 
   248     0313                     	;# 
   249     0314                     	;# 
   250     0314                     	;# 
   251     0315                     	;# 
   252     0316                     	;# 
   253     0317                     	;# 
   254     0318                     	;# 
   255     0318                     	;# 
   256     0319                     	;# 
   257     031A                     	;# 
   258     031B                     	;# 
   259     031C                     	;# 
   260     031C                     	;# 
   261     031D                     	;# 
   262     031E                     	;# 
   263     031F                     	;# 
   264     038C                     	;# 
   265     038C                     	;# 
   266     038D                     	;# 
   267     038E                     	;# 
   268     0390                     	;# 
   269     0390                     	;# 
   270     0391                     	;# 
   271     0392                     	;# 
   272     040C                     	;# 
   273     040D                     	;# 
   274     040E                     	;# 
   275     040F                     	;# 
   276     0410                     	;# 
   277     0411                     	;# 
   278     0416                     	;# 
   279     0416                     	;# 
   280     0417                     	;# 
   281     0418                     	;# 
   282     0418                     	;# 
   283     0419                     	;# 
   284     041A                     	;# 
   285     041A                     	;# 
   286     041B                     	;# 
   287     041C                     	;# 
   288     041C                     	;# 
   289     041D                     	;# 
   290     041E                     	;# 
   291     041F                     	;# 
   292     048C                     	;# 
   293     048C                     	;# 
   294     048D                     	;# 
   295     048E                     	;# 
   296     048F                     	;# 
   297     048F                     	;# 
   298     0490                     	;# 
   299     0491                     	;# 
   300     0492                     	;# 
   301     0492                     	;# 
   302     0493                     	;# 
   303     0494                     	;# 
   304     0495                     	;# 
   305     0495                     	;# 
   306     0496                     	;# 
   307     0497                     	;# 
   308     0498                     	;# 
   309     0499                     	;# 
   310     049A                     	;# 
   311     049B                     	;# 
   312     049C                     	;# 
   313     049D                     	;# 
   314     050C                     	;# 
   315     050C                     	;# 
   316     050D                     	;# 
   317     050E                     	;# 
   318     050F                     	;# 
   319     050F                     	;# 
   320     0510                     	;# 
   321     0511                     	;# 
   322     0512                     	;# 
   323     0512                     	;# 
   324     0513                     	;# 
   325     0514                     	;# 
   326     0515                     	;# 
   327     0515                     	;# 
   328     0516                     	;# 
   329     0517                     	;# 
   330     0518                     	;# 
   331     0519                     	;# 
   332     051A                     	;# 
   333     051B                     	;# 
   334     051C                     	;# 
   335     051D                     	;# 
   336     058C                     	;# 
   337     058C                     	;# 
   338     058D                     	;# 
   339     058E                     	;# 
   340     058F                     	;# 
   341     058F                     	;# 
   342     0590                     	;# 
   343     0591                     	;# 
   344     0592                     	;# 
   345     0593                     	;# 
   346     060C                     	;# 
   347     060D                     	;# 
   348     060E                     	;# 
   349     060F                     	;# 
   350     0610                     	;# 
   351     0611                     	;# 
   352     0612                     	;# 
   353     0613                     	;# 
   354     0614                     	;# 
   355     0616                     	;# 
   356     0617                     	;# 
   357     0618                     	;# 
   358     0619                     	;# 
   359     061A                     	;# 
   360     061B                     	;# 
   361     061C                     	;# 
   362     061D                     	;# 
   363     061E                     	;# 
   364     068C                     	;# 
   365     068D                     	;# 
   366     068E                     	;# 
   367     068F                     	;# 
   368     0690                     	;# 
   369     0691                     	;# 
   370     0692                     	;# 
   371     0693                     	;# 
   372     0694                     	;# 
   373     070C                     	;# 
   374     070D                     	;# 
   375     070E                     	;# 
   376     070F                     	;# 
   377     0710                     	;# 
   378     0711                     	;# 
   379     0712                     	;# 
   380     0713                     	;# 
   381     0714                     	;# 
   382     0716                     	;# 
   383     0717                     	;# 
   384     0718                     	;# 
   385     0719                     	;# 
   386     071A                     	;# 
   387     071B                     	;# 
   388     071C                     	;# 
   389     071D                     	;# 
   390     071E                     	;# 
   391     0796                     	;# 
   392     0797                     	;# 
   393     0798                     	;# 
   394     0799                     	;# 
   395     079A                     	;# 
   396     079B                     	;# 
   397     080C                     	;# 
   398     080D                     	;# 
   399     080E                     	;# 
   400     080F                     	;# 
   401     0810                     	;# 
   402     0811                     	;# 
   403     0812                     	;# 
   404     0813                     	;# 
   405     0814                     	;# 
   406     081A                     	;# 
   407     081B                     	;# 
   408     081C                     	;# 
   409     081D                     	;# 
   410     081E                     	;# 
   411     081F                     	;# 
   412     088C                     	;# 
   413     088D                     	;# 
   414     088E                     	;# 
   415     088F                     	;# 
   416     0890                     	;# 
   417     0891                     	;# 
   418     0892                     	;# 
   419     0893                     	;# 
   420     0895                     	;# 
   421     0896                     	;# 
   422     0897                     	;# 
   423     0898                     	;# 
   424     0899                     	;# 
   425     089A                     	;# 
   426     089B                     	;# 
   427     090C                     	;# 
   428     090E                     	;# 
   429     090F                     	;# 
   430     091F                     	;# 
   431     091F                     	;# 
   432     098F                     	;# 
   433     098F                     	;# 
   434     0990                     	;# 
   435     0991                     	;# 
   436     0992                     	;# 
   437     0993                     	;# 
   438     0994                     	;# 
   439     0995                     	;# 
   440     0996                     	;# 
   441     0997                     	;# 
   442     0E0F                     	;# 
   443     0E10                     	;# 
   444     0E11                     	;# 
   445     0E12                     	;# 
   446     0E13                     	;# 
   447     0E14                     	;# 
   448     0E15                     	;# 
   449     0E16                     	;# 
   450     0E17                     	;# 
   451     0E18                     	;# 
   452     0E19                     	;# 
   453     0E1A                     	;# 
   454     0E1B                     	;# 
   455     0E1C                     	;# 
   456     0E1D                     	;# 
   457     0E1E                     	;# 
   458     0E1F                     	;# 
   459     0E20                     	;# 
   460     0E21                     	;# 
   461     0E22                     	;# 
   462     0E23                     	;# 
   463     0E24                     	;# 
   464     0E25                     	;# 
   465     0E26                     	;# 
   466     0E27                     	;# 
   467     0E28                     	;# 
   468     0E29                     	;# 
   469     0E2A                     	;# 
   470     0E2B                     	;# 
   471     0E2C                     	;# 
   472     0E2D                     	;# 
   473     0E2E                     	;# 
   474     0E2F                     	;# 
   475     0E30                     	;# 
   476     0E31                     	;# 
   477     0E32                     	;# 
   478     0E33                     	;# 
   479     0E34                     	;# 
   480     0E35                     	;# 
   481     0E36                     	;# 
   482     0E37                     	;# 
   483     0E8F                     	;# 
   484     0E90                     	;# 
   485     0E91                     	;# 
   486     0E92                     	;# 
   487     0E93                     	;# 
   488     0E94                     	;# 
   489     0E95                     	;# 
   490     0E96                     	;# 
   491     0E97                     	;# 
   492     0E9C                     	;# 
   493     0E9D                     	;# 
   494     0E9E                     	;# 
   495     0EA1                     	;# 
   496     0EA2                     	;# 
   497     0EA3                     	;# 
   498     0EA4                     	;# 
   499     0EA5                     	;# 
   500     0EA9                     	;# 
   501     0EAA                     	;# 
   502     0EAB                     	;# 
   503     0EAC                     	;# 
   504     0EB1                     	;# 
   505     0EB2                     	;# 
   506     0EB3                     	;# 
   507     0EB8                     	;# 
   508     0EB9                     	;# 
   509     0EBA                     	;# 
   510     0EBB                     	;# 
   511     0EBC                     	;# 
   512     0EBD                     	;# 
   513     0EBE                     	;# 
   514     0EC3                     	;# 
   515     0EC5                     	;# 
   516     0EC6                     	;# 
   517     0EC7                     	;# 
   518     0EC8                     	;# 
   519     0EC9                     	;# 
   520     0ECA                     	;# 
   521     0ECB                     	;# 
   522     0ECC                     	;# 
   523     0F10                     	;# 
   524     0F11                     	;# 
   525     0F12                     	;# 
   526     0F13                     	;# 
   527     0F14                     	;# 
   528     0F15                     	;# 
   529     0F16                     	;# 
   530     0F17                     	;# 
   531     0F18                     	;# 
   532     0F19                     	;# 
   533     0F1A                     	;# 
   534     0F1B                     	;# 
   535     0F1C                     	;# 
   536     0F1D                     	;# 
   537     0F1E                     	;# 
   538     0F1F                     	;# 
   539     0F20                     	;# 
   540     0F21                     	;# 
   541     0F22                     	;# 
   542     0F23                     	;# 
   543     0F24                     	;# 
   544     0F25                     	;# 
   545     0F26                     	;# 
   546     0F27                     	;# 
   547     0F38                     	;# 
   548     0F39                     	;# 
   549     0F3A                     	;# 
   550     0F3B                     	;# 
   551     0F3C                     	;# 
   552     0F3D                     	;# 
   553     0F3E                     	;# 
   554     0F3F                     	;# 
   555     0F40                     	;# 
   556     0F41                     	;# 
   557     0F43                     	;# 
   558     0F44                     	;# 
   559     0F45                     	;# 
   560     0F46                     	;# 
   561     0F47                     	;# 
   562     0F48                     	;# 
   563     0F49                     	;# 
   564     0F4A                     	;# 
   565     0F4B                     	;# 
   566     0F4C                     	;# 
   567     0F4E                     	;# 
   568     0F4F                     	;# 
   569     0F50                     	;# 
   570     0F51                     	;# 
   571     0F52                     	;# 
   572     0F53                     	;# 
   573     0F54                     	;# 
   574     0F55                     	;# 
   575     0F56                     	;# 
   576     0F57                     	;# 
   577     0F65                     	;# 
   578     0F68                     	;# 
   579     0F69                     	;# 
   580     0F6A                     	;# 
   581     0F6B                     	;# 
   582     0FE4                     	;# 
   583     0FE5                     	;# 
   584     0FE6                     	;# 
   585     0FE7                     	;# 
   586     0FE8                     	;# 
   587     0FE9                     	;# 
   588     0FEA                     	;# 
   589     0FEB                     	;# 
   590     0FED                     	;# 
   591     0FEE                     	;# 
   592     0FEF                     	;# 
   593     0000                     	;# 
   594     0001                     	;# 
   595     0002                     	;# 
   596     0003                     	;# 
   597     0004                     	;# 
   598     0005                     	;# 
   599     0006                     	;# 
   600     0007                     	;# 
   601     0008                     	;# 
   602     0009                     	;# 
   603     000A                     	;# 
   604     000B                     	;# 
   605     000C                     	;# 
   606     000D                     	;# 
   607     000E                     	;# 
   608     0010                     	;# 
   609     0011                     	;# 
   610     0012                     	;# 
   611     0013                     	;# 
   612     0016                     	;# 
   613     0017                     	;# 
   614     0018                     	;# 
   615     001C                     	;# 
   616     001C                     	;# 
   617     001D                     	;# 
   618     001D                     	;# 
   619     001E                     	;# 
   620     001F                     	;# 
   621     008C                     	;# 
   622     008C                     	;# 
   623     008D                     	;# 
   624     008E                     	;# 
   625     008E                     	;# 
   626     008F                     	;# 
   627     0090                     	;# 
   628     0090                     	;# 
   629     0091                     	;# 
   630     0093                     	;# 
   631     0094                     	;# 
   632     0095                     	;# 
   633     0096                     	;# 
   634     0097                     	;# 
   635     0098                     	;# 
   636     0099                     	;# 
   637     009A                     	;# 
   638     009B                     	;# 
   639     009C                     	;# 
   640     009D                     	;# 
   641     009E                     	;# 
   642     010C                     	;# 
   643     010D                     	;# 
   644     010E                     	;# 
   645     010E                     	;# 
   646     010F                     	;# 
   647     0110                     	;# 
   648     0110                     	;# 
   649     0111                     	;# 
   650     0112                     	;# 
   651     0112                     	;# 
   652     0113                     	;# 
   653     0114                     	;# 
   654     0114                     	;# 
   655     0115                     	;# 
   656     0116                     	;# 
   657     0116                     	;# 
   658     0117                     	;# 
   659     0119                     	;# 
   660     0119                     	;# 
   661     0119                     	;# 
   662     011A                     	;# 
   663     011A                     	;# 
   664     011A                     	;# 
   665     011B                     	;# 
   666     011B                     	;# 
   667     011B                     	;# 
   668     011B                     	;# 
   669     011B                     	;# 
   670     011C                     	;# 
   671     011C                     	;# 
   672     011C                     	;# 
   673     011D                     	;# 
   674     011D                     	;# 
   675     011D                     	;# 
   676     011E                     	;# 
   677     011E                     	;# 
   678     011E                     	;# 
   679     011F                     	;# 
   680     011F                     	;# 
   681     011F                     	;# 
   682     011F                     	;# 
   683     011F                     	;# 
   684     018C                     	;# 
   685     018D                     	;# 
   686     018E                     	;# 
   687     018F                     	;# 
   688     0190                     	;# 
   689     0191                     	;# 
   690     0192                     	;# 
   691     0196                     	;# 
   692     0197                     	;# 
   693     0198                     	;# 
   694     0199                     	;# 
   695     019A                     	;# 
   696     019B                     	;# 
   697     019C                     	;# 
   698     020C                     	;# 
   699     020C                     	;# 
   700     020D                     	;# 
   701     020E                     	;# 
   702     020F                     	;# 
   703     020F                     	;# 
   704     0210                     	;# 
   705     0210                     	;# 
   706     0211                     	;# 
   707     0211                     	;# 
   708     0212                     	;# 
   709     0212                     	;# 
   710     0213                     	;# 
   711     0214                     	;# 
   712     0215                     	;# 
   713     0215                     	;# 
   714     0216                     	;# 
   715     0216                     	;# 
   716     0217                     	;# 
   717     0217                     	;# 
   718     0218                     	;# 
   719     0218                     	;# 
   720     0219                     	;# 
   721     021A                     	;# 
   722     021B                     	;# 
   723     021B                     	;# 
   724     021C                     	;# 
   725     021C                     	;# 
   726     021D                     	;# 
   727     021D                     	;# 
   728     021E                     	;# 
   729     021F                     	;# 
   730     028C                     	;# 
   731     028C                     	;# 
   732     028D                     	;# 
   733     028D                     	;# 
   734     028E                     	;# 
   735     028F                     	;# 
   736     0290                     	;# 
   737     0290                     	;# 
   738     0291                     	;# 
   739     0292                     	;# 
   740     0292                     	;# 
   741     0293                     	;# 
   742     0293                     	;# 
   743     0294                     	;# 
   744     0295                     	;# 
   745     0296                     	;# 
   746     0296                     	;# 
   747     0297                     	;# 
   748     0298                     	;# 
   749     0298                     	;# 
   750     0299                     	;# 
   751     0299                     	;# 
   752     029A                     	;# 
   753     029B                     	;# 
   754     029C                     	;# 
   755     029C                     	;# 
   756     029D                     	;# 
   757     030C                     	;# 
   758     030C                     	;# 
   759     030D                     	;# 
   760     030E                     	;# 
   761     030F                     	;# 
   762     0310                     	;# 
   763     0310                     	;# 
   764     0311                     	;# 
   765     0312                     	;# 
   766     0313                     	;# 
   767     0314                     	;# 
   768     0314                     	;# 
   769     0315                     	;# 
   770     0316                     	;# 
   771     0317                     	;# 
   772     0318                     	;# 
   773     0318                     	;# 
   774     0319                     	;# 
   775     031A                     	;# 
   776     031B                     	;# 
   777     031C                     	;# 
   778     031C                     	;# 
   779     031D                     	;# 
   780     031E                     	;# 
   781     031F                     	;# 
   782     038C                     	;# 
   783     038C                     	;# 
   784     038D                     	;# 
   785     038E                     	;# 
   786     0390                     	;# 
   787     0390                     	;# 
   788     0391                     	;# 
   789     0392                     	;# 
   790     040C                     	;# 
   791     040D                     	;# 
   792     040E                     	;# 
   793     040F                     	;# 
   794     0410                     	;# 
   795     0411                     	;# 
   796     0416                     	;# 
   797     0416                     	;# 
   798     0417                     	;# 
   799     0418                     	;# 
   800     0418                     	;# 
   801     0419                     	;# 
   802     041A                     	;# 
   803     041A                     	;# 
   804     041B                     	;# 
   805     041C                     	;# 
   806     041C                     	;# 
   807     041D                     	;# 
   808     041E                     	;# 
   809     041F                     	;# 
   810     048C                     	;# 
   811     048C                     	;# 
   812     048D                     	;# 
   813     048E                     	;# 
   814     048F                     	;# 
   815     048F                     	;# 
   816     0490                     	;# 
   817     0491                     	;# 
   818     0492                     	;# 
   819     0492                     	;# 
   820     0493                     	;# 
   821     0494                     	;# 
   822     0495                     	;# 
   823     0495                     	;# 
   824     0496                     	;# 
   825     0497                     	;# 
   826     0498                     	;# 
   827     0499                     	;# 
   828     049A                     	;# 
   829     049B                     	;# 
   830     049C                     	;# 
   831     049D                     	;# 
   832     050C                     	;# 
   833     050C                     	;# 
   834     050D                     	;# 
   835     050E                     	;# 
   836     050F                     	;# 
   837     050F                     	;# 
   838     0510                     	;# 
   839     0511                     	;# 
   840     0512                     	;# 
   841     0512                     	;# 
   842     0513                     	;# 
   843     0514                     	;# 
   844     0515                     	;# 
   845     0515                     	;# 
   846     0516                     	;# 
   847     0517                     	;# 
   848     0518                     	;# 
   849     0519                     	;# 
   850     051A                     	;# 
   851     051B                     	;# 
   852     051C                     	;# 
   853     051D                     	;# 
   854     058C                     	;# 
   855     058C                     	;# 
   856     058D                     	;# 
   857     058E                     	;# 
   858     058F                     	;# 
   859     058F                     	;# 
   860     0590                     	;# 
   861     0591                     	;# 
   862     0592                     	;# 
   863     0593                     	;# 
   864     060C                     	;# 
   865     060D                     	;# 
   866     060E                     	;# 
   867     060F                     	;# 
   868     0610                     	;# 
   869     0611                     	;# 
   870     0612                     	;# 
   871     0613                     	;# 
   872     0614                     	;# 
   873     0616                     	;# 
   874     0617                     	;# 
   875     0618                     	;# 
   876     0619                     	;# 
   877     061A                     	;# 
   878     061B                     	;# 
   879     061C                     	;# 
   880     061D                     	;# 
   881     061E                     	;# 
   882     068C                     	;# 
   883     068D                     	;# 
   884     068E                     	;# 
   885     068F                     	;# 
   886     0690                     	;# 
   887     0691                     	;# 
   888     0692                     	;# 
   889     0693                     	;# 
   890     0694                     	;# 
   891     070C                     	;# 
   892     070D                     	;# 
   893     070E                     	;# 
   894     070F                     	;# 
   895     0710                     	;# 
   896     0711                     	;# 
   897     0712                     	;# 
   898     0713                     	;# 
   899     0714                     	;# 
   900     0716                     	;# 
   901     0717                     	;# 
   902     0718                     	;# 
   903     0719                     	;# 
   904     071A                     	;# 
   905     071B                     	;# 
   906     071C                     	;# 
   907     071D                     	;# 
   908     071E                     	;# 
   909     0796                     	;# 
   910     0797                     	;# 
   911     0798                     	;# 
   912     0799                     	;# 
   913     079A                     	;# 
   914     079B                     	;# 
   915     080C                     	;# 
   916     080D                     	;# 
   917     080E                     	;# 
   918     080F                     	;# 
   919     0810                     	;# 
   920     0811                     	;# 
   921     0812                     	;# 
   922     0813                     	;# 
   923     0814                     	;# 
   924     081A                     	;# 
   925     081B                     	;# 
   926     081C                     	;# 
   927     081D                     	;# 
   928     081E                     	;# 
   929     081F                     	;# 
   930     088C                     	;# 
   931     088D                     	;# 
   932     088E                     	;# 
   933     088F                     	;# 
   934     0890                     	;# 
   935     0891                     	;# 
   936     0892                     	;# 
   937     0893                     	;# 
   938     0895                     	;# 
   939     0896                     	;# 
   940     0897                     	;# 
   941     0898                     	;# 
   942     0899                     	;# 
   943     089A                     	;# 
   944     089B                     	;# 
   945     090C                     	;# 
   946     090E                     	;# 
   947     090F                     	;# 
   948     091F                     	;# 
   949     091F                     	;# 
   950     098F                     	;# 
   951     098F                     	;# 
   952     0990                     	;# 
   953     0991                     	;# 
   954     0992                     	;# 
   955     0993                     	;# 
   956     0994                     	;# 
   957     0995                     	;# 
   958     0996                     	;# 
   959     0997                     	;# 
   960     0E0F                     	;# 
   961     0E10                     	;# 
   962     0E11                     	;# 
   963     0E12                     	;# 
   964     0E13                     	;# 
   965     0E14                     	;# 
   966     0E15                     	;# 
   967     0E16                     	;# 
   968     0E17                     	;# 
   969     0E18                     	;# 
   970     0E19                     	;# 
   971     0E1A                     	;# 
   972     0E1B                     	;# 
   973     0E1C                     	;# 
   974     0E1D                     	;# 
   975     0E1E                     	;# 
   976     0E1F                     	;# 
   977     0E20                     	;# 
   978     0E21                     	;# 
   979     0E22                     	;# 
   980     0E23                     	;# 
   981     0E24                     	;# 
   982     0E25                     	;# 
   983     0E26                     	;# 
   984     0E27                     	;# 
   985     0E28                     	;# 
   986     0E29                     	;# 
   987     0E2A                     	;# 
   988     0E2B                     	;# 
   989     0E2C                     	;# 
   990     0E2D                     	;# 
   991     0E2E                     	;# 
   992     0E2F                     	;# 
   993     0E30                     	;# 
   994     0E31                     	;# 
   995     0E32                     	;# 
   996     0E33                     	;# 
   997     0E34                     	;# 
   998     0E35                     	;# 
   999     0E36                     	;# 
  1000     0E37                     	;# 
  1001     0E8F                     	;# 
  1002     0E90                     	;# 
  1003     0E91                     	;# 
  1004     0E92                     	;# 
  1005     0E93                     	;# 
  1006     0E94                     	;# 
  1007     0E95                     	;# 
  1008     0E96                     	;# 
  1009     0E97                     	;# 
  1010     0E9C                     	;# 
  1011     0E9D                     	;# 
  1012     0E9E                     	;# 
  1013     0EA1                     	;# 
  1014     0EA2                     	;# 
  1015     0EA3                     	;# 
  1016     0EA4                     	;# 
  1017     0EA5                     	;# 
  1018     0EA9                     	;# 
  1019     0EAA                     	;# 
  1020     0EAB                     	;# 
  1021     0EAC                     	;# 
  1022     0EB1                     	;# 
  1023     0EB2                     	;# 
  1024     0EB3                     	;# 
  1025     0EB8                     	;# 
  1026     0EB9                     	;# 
  1027     0EBA                     	;# 
  1028     0EBB                     	;# 
  1029     0EBC                     	;# 
  1030     0EBD                     	;# 
  1031     0EBE                     	;# 
  1032     0EC3                     	;# 
  1033     0EC5                     	;# 
  1034     0EC6                     	;# 
  1035     0EC7                     	;# 
  1036     0EC8                     	;# 
  1037     0EC9                     	;# 
  1038     0ECA                     	;# 
  1039     0ECB                     	;# 
  1040     0ECC                     	;# 
  1041     0F10                     	;# 
  1042     0F11                     	;# 
  1043     0F12                     	;# 
  1044     0F13                     	;# 
  1045     0F14                     	;# 
  1046     0F15                     	;# 
  1047     0F16                     	;# 
  1048     0F17                     	;# 
  1049     0F18                     	;# 
  1050     0F19                     	;# 
  1051     0F1A                     	;# 
  1052     0F1B                     	;# 
  1053     0F1C                     	;# 
  1054     0F1D                     	;# 
  1055     0F1E                     	;# 
  1056     0F1F                     	;# 
  1057     0F20                     	;# 
  1058     0F21                     	;# 
  1059     0F22                     	;# 
  1060     0F23                     	;# 
  1061     0F24                     	;# 
  1062     0F25                     	;# 
  1063     0F26                     	;# 
  1064     0F27                     	;# 
  1065     0F38                     	;# 
  1066     0F39                     	;# 
  1067     0F3A                     	;# 
  1068     0F3B                     	;# 
  1069     0F3C                     	;# 
  1070     0F3D                     	;# 
  1071     0F3E                     	;# 
  1072     0F3F                     	;# 
  1073     0F40                     	;# 
  1074     0F41                     	;# 
  1075     0F43                     	;# 
  1076     0F44                     	;# 
  1077     0F45                     	;# 
  1078     0F46                     	;# 
  1079     0F47                     	;# 
  1080     0F48                     	;# 
  1081     0F49                     	;# 
  1082     0F4A                     	;# 
  1083     0F4B                     	;# 
  1084     0F4C                     	;# 
  1085     0F4E                     	;# 
  1086     0F4F                     	;# 
  1087     0F50                     	;# 
  1088     0F51                     	;# 
  1089     0F52                     	;# 
  1090     0F53                     	;# 
  1091     0F54                     	;# 
  1092     0F55                     	;# 
  1093     0F56                     	;# 
  1094     0F57                     	;# 
  1095     0F65                     	;# 
  1096     0F68                     	;# 
  1097     0F69                     	;# 
  1098     0F6A                     	;# 
  1099     0F6B                     	;# 
  1100     0FE4                     	;# 
  1101     0FE5                     	;# 
  1102     0FE6                     	;# 
  1103     0FE7                     	;# 
  1104     0FE8                     	;# 
  1105     0FE9                     	;# 
  1106     0FEA                     	;# 
  1107     0FEB                     	;# 
  1108     0FED                     	;# 
  1109     0FEE                     	;# 
  1110     0FEF                     	;# 
  1111     0000                     	;# 
  1112     0001                     	;# 
  1113     0002                     	;# 
  1114     0003                     	;# 
  1115     0004                     	;# 
  1116     0005                     	;# 
  1117     0006                     	;# 
  1118     0007                     	;# 
  1119     0008                     	;# 
  1120     0009                     	;# 
  1121     000A                     	;# 
  1122     000B                     	;# 
  1123     000C                     	;# 
  1124     000D                     	;# 
  1125     000E                     	;# 
  1126     0010                     	;# 
  1127     0011                     	;# 
  1128     0012                     	;# 
  1129     0013                     	;# 
  1130     0016                     	;# 
  1131     0017                     	;# 
  1132     0018                     	;# 
  1133     001C                     	;# 
  1134     001C                     	;# 
  1135     001D                     	;# 
  1136     001D                     	;# 
  1137     001E                     	;# 
  1138     001F                     	;# 
  1139     008C                     	;# 
  1140     008C                     	;# 
  1141     008D                     	;# 
  1142     008E                     	;# 
  1143     008E                     	;# 
  1144     008F                     	;# 
  1145     0090                     	;# 
  1146     0090                     	;# 
  1147     0091                     	;# 
  1148     0093                     	;# 
  1149     0094                     	;# 
  1150     0095                     	;# 
  1151     0096                     	;# 
  1152     0097                     	;# 
  1153     0098                     	;# 
  1154     0099                     	;# 
  1155     009A                     	;# 
  1156     009B                     	;# 
  1157     009C                     	;# 
  1158     009D                     	;# 
  1159     009E                     	;# 
  1160     010C                     	;# 
  1161     010D                     	;# 
  1162     010E                     	;# 
  1163     010E                     	;# 
  1164     010F                     	;# 
  1165     0110                     	;# 
  1166     0110                     	;# 
  1167     0111                     	;# 
  1168     0112                     	;# 
  1169     0112                     	;# 
  1170     0113                     	;# 
  1171     0114                     	;# 
  1172     0114                     	;# 
  1173     0115                     	;# 
  1174     0116                     	;# 
  1175     0116                     	;# 
  1176     0117                     	;# 
  1177     0119                     	;# 
  1178     0119                     	;# 
  1179     0119                     	;# 
  1180     011A                     	;# 
  1181     011A                     	;# 
  1182     011A                     	;# 
  1183     011B                     	;# 
  1184     011B                     	;# 
  1185     011B                     	;# 
  1186     011B                     	;# 
  1187     011B                     	;# 
  1188     011C                     	;# 
  1189     011C                     	;# 
  1190     011C                     	;# 
  1191     011D                     	;# 
  1192     011D                     	;# 
  1193     011D                     	;# 
  1194     011E                     	;# 
  1195     011E                     	;# 
  1196     011E                     	;# 
  1197     011F                     	;# 
  1198     011F                     	;# 
  1199     011F                     	;# 
  1200     011F                     	;# 
  1201     011F                     	;# 
  1202     018C                     	;# 
  1203     018D                     	;# 
  1204     018E                     	;# 
  1205     018F                     	;# 
  1206     0190                     	;# 
  1207     0191                     	;# 
  1208     0192                     	;# 
  1209     0196                     	;# 
  1210     0197                     	;# 
  1211     0198                     	;# 
  1212     0199                     	;# 
  1213     019A                     	;# 
  1214     019B                     	;# 
  1215     019C                     	;# 
  1216     020C                     	;# 
  1217     020C                     	;# 
  1218     020D                     	;# 
  1219     020E                     	;# 
  1220     020F                     	;# 
  1221     020F                     	;# 
  1222     0210                     	;# 
  1223     0210                     	;# 
  1224     0211                     	;# 
  1225     0211                     	;# 
  1226     0212                     	;# 
  1227     0212                     	;# 
  1228     0213                     	;# 
  1229     0214                     	;# 
  1230     0215                     	;# 
  1231     0215                     	;# 
  1232     0216                     	;# 
  1233     0216                     	;# 
  1234     0217                     	;# 
  1235     0217                     	;# 
  1236     0218                     	;# 
  1237     0218                     	;# 
  1238     0219                     	;# 
  1239     021A                     	;# 
  1240     021B                     	;# 
  1241     021B                     	;# 
  1242     021C                     	;# 
  1243     021C                     	;# 
  1244     021D                     	;# 
  1245     021D                     	;# 
  1246     021E                     	;# 
  1247     021F                     	;# 
  1248     028C                     	;# 
  1249     028C                     	;# 
  1250     028D                     	;# 
  1251     028D                     	;# 
  1252     028E                     	;# 
  1253     028F                     	;# 
  1254     0290                     	;# 
  1255     0290                     	;# 
  1256     0291                     	;# 
  1257     0292                     	;# 
  1258     0292                     	;# 
  1259     0293                     	;# 
  1260     0293                     	;# 
  1261     0294                     	;# 
  1262     0295                     	;# 
  1263     0296                     	;# 
  1264     0296                     	;# 
  1265     0297                     	;# 
  1266     0298                     	;# 
  1267     0298                     	;# 
  1268     0299                     	;# 
  1269     0299                     	;# 
  1270     029A                     	;# 
  1271     029B                     	;# 
  1272     029C                     	;# 
  1273     029C                     	;# 
  1274     029D                     	;# 
  1275     030C                     	;# 
  1276     030C                     	;# 
  1277     030D                     	;# 
  1278     030E                     	;# 
  1279     030F                     	;# 
  1280     0310                     	;# 
  1281     0310                     	;# 
  1282     0311                     	;# 
  1283     0312                     	;# 
  1284     0313                     	;# 
  1285     0314                     	;# 
  1286     0314                     	;# 
  1287     0315                     	;# 
  1288     0316                     	;# 
  1289     0317                     	;# 
  1290     0318                     	;# 
  1291     0318                     	;# 
  1292     0319                     	;# 
  1293     031A                     	;# 
  1294     031B                     	;# 
  1295     031C                     	;# 
  1296     031C                     	;# 
  1297     031D                     	;# 
  1298     031E                     	;# 
  1299     031F                     	;# 
  1300     038C                     	;# 
  1301     038C                     	;# 
  1302     038D                     	;# 
  1303     038E                     	;# 
  1304     0390                     	;# 
  1305     0390                     	;# 
  1306     0391                     	;# 
  1307     0392                     	;# 
  1308     040C                     	;# 
  1309     040D                     	;# 
  1310     040E                     	;# 
  1311     040F                     	;# 
  1312     0410                     	;# 
  1313     0411                     	;# 
  1314     0416                     	;# 
  1315     0416                     	;# 
  1316     0417                     	;# 
  1317     0418                     	;# 
  1318     0418                     	;# 
  1319     0419                     	;# 
  1320     041A                     	;# 
  1321     041A                     	;# 
  1322     041B                     	;# 
  1323     041C                     	;# 
  1324     041C                     	;# 
  1325     041D                     	;# 
  1326     041E                     	;# 
  1327     041F                     	;# 
  1328     048C                     	;# 
  1329     048C                     	;# 
  1330     048D                     	;# 
  1331     048E                     	;# 
  1332     048F                     	;# 
  1333     048F                     	;# 
  1334     0490                     	;# 
  1335     0491                     	;# 
  1336     0492                     	;# 
  1337     0492                     	;# 
  1338     0493                     	;# 
  1339     0494                     	;# 
  1340     0495                     	;# 
  1341     0495                     	;# 
  1342     0496                     	;# 
  1343     0497                     	;# 
  1344     0498                     	;# 
  1345     0499                     	;# 
  1346     049A                     	;# 
  1347     049B                     	;# 
  1348     049C                     	;# 
  1349     049D                     	;# 
  1350     050C                     	;# 
  1351     050C                     	;# 
  1352     050D                     	;# 
  1353     050E                     	;# 
  1354     050F                     	;# 
  1355     050F                     	;# 
  1356     0510                     	;# 
  1357     0511                     	;# 
  1358     0512                     	;# 
  1359     0512                     	;# 
  1360     0513                     	;# 
  1361     0514                     	;# 
  1362     0515                     	;# 
  1363     0515                     	;# 
  1364     0516                     	;# 
  1365     0517                     	;# 
  1366     0518                     	;# 
  1367     0519                     	;# 
  1368     051A                     	;# 
  1369     051B                     	;# 
  1370     051C                     	;# 
  1371     051D                     	;# 
  1372     058C                     	;# 
  1373     058C                     	;# 
  1374     058D                     	;# 
  1375     058E                     	;# 
  1376     058F                     	;# 
  1377     058F                     	;# 
  1378     0590                     	;# 
  1379     0591                     	;# 
  1380     0592                     	;# 
  1381     0593                     	;# 
  1382     060C                     	;# 
  1383     060D                     	;# 
  1384     060E                     	;# 
  1385     060F                     	;# 
  1386     0610                     	;# 
  1387     0611                     	;# 
  1388     0612                     	;# 
  1389     0613                     	;# 
  1390     0614                     	;# 
  1391     0616                     	;# 
  1392     0617                     	;# 
  1393     0618                     	;# 
  1394     0619                     	;# 
  1395     061A                     	;# 
  1396     061B                     	;# 
  1397     061C                     	;# 
  1398     061D                     	;# 
  1399     061E                     	;# 
  1400     068C                     	;# 
  1401     068D                     	;# 
  1402     068E                     	;# 
  1403     068F                     	;# 
  1404     0690                     	;# 
  1405     0691                     	;# 
  1406     0692                     	;# 
  1407     0693                     	;# 
  1408     0694                     	;# 
  1409     070C                     	;# 
  1410     070D                     	;# 
  1411     070E                     	;# 
  1412     070F                     	;# 
  1413     0710                     	;# 
  1414     0711                     	;# 
  1415     0712                     	;# 
  1416     0713                     	;# 
  1417     0714                     	;# 
  1418     0716                     	;# 
  1419     0717                     	;# 
  1420     0718                     	;# 
  1421     0719                     	;# 
  1422     071A                     	;# 
  1423     071B                     	;# 
  1424     071C                     	;# 
  1425     071D                     	;# 
  1426     071E                     	;# 
  1427     0796                     	;# 
  1428     0797                     	;# 
  1429     0798                     	;# 
  1430     0799                     	;# 
  1431     079A                     	;# 
  1432     079B                     	;# 
  1433     080C                     	;# 
  1434     080D                     	;# 
  1435     080E                     	;# 
  1436     080F                     	;# 
  1437     0810                     	;# 
  1438     0811                     	;# 
  1439     0812                     	;# 
  1440     0813                     	;# 
  1441     0814                     	;# 
  1442     081A                     	;# 
  1443     081B                     	;# 
  1444     081C                     	;# 
  1445     081D                     	;# 
  1446     081E                     	;# 
  1447     081F                     	;# 
  1448     088C                     	;# 
  1449     088D                     	;# 
  1450     088E                     	;# 
  1451     088F                     	;# 
  1452     0890                     	;# 
  1453     0891                     	;# 
  1454     0892                     	;# 
  1455     0893                     	;# 
  1456     0895                     	;# 
  1457     0896                     	;# 
  1458     0897                     	;# 
  1459     0898                     	;# 
  1460     0899                     	;# 
  1461     089A                     	;# 
  1462     089B                     	;# 
  1463     090C                     	;# 
  1464     090E                     	;# 
  1465     090F                     	;# 
  1466     091F                     	;# 
  1467     091F                     	;# 
  1468     098F                     	;# 
  1469     098F                     	;# 
  1470     0990                     	;# 
  1471     0991                     	;# 
  1472     0992                     	;# 
  1473     0993                     	;# 
  1474     0994                     	;# 
  1475     0995                     	;# 
  1476     0996                     	;# 
  1477     0997                     	;# 
  1478     0E0F                     	;# 
  1479     0E10                     	;# 
  1480     0E11                     	;# 
  1481     0E12                     	;# 
  1482     0E13                     	;# 
  1483     0E14                     	;# 
  1484     0E15                     	;# 
  1485     0E16                     	;# 
  1486     0E17                     	;# 
  1487     0E18                     	;# 
  1488     0E19                     	;# 
  1489     0E1A                     	;# 
  1490     0E1B                     	;# 
  1491     0E1C                     	;# 
  1492     0E1D                     	;# 
  1493     0E1E                     	;# 
  1494     0E1F                     	;# 
  1495     0E20                     	;# 
  1496     0E21                     	;# 
  1497     0E22                     	;# 
  1498     0E23                     	;# 
  1499     0E24                     	;# 
  1500     0E25                     	;# 
  1501     0E26                     	;# 
  1502     0E27                     	;# 
  1503     0E28                     	;# 
  1504     0E29                     	;# 
  1505     0E2A                     	;# 
  1506     0E2B                     	;# 
  1507     0E2C                     	;# 
  1508     0E2D                     	;# 
  1509     0E2E                     	;# 
  1510     0E2F                     	;# 
  1511     0E30                     	;# 
  1512     0E31                     	;# 
  1513     0E32                     	;# 
  1514     0E33                     	;# 
  1515     0E34                     	;# 
  1516     0E35                     	;# 
  1517     0E36                     	;# 
  1518     0E37                     	;# 
  1519     0E8F                     	;# 
  1520     0E90                     	;# 
  1521     0E91                     	;# 
  1522     0E92                     	;# 
  1523     0E93                     	;# 
  1524     0E94                     	;# 
  1525     0E95                     	;# 
  1526     0E96                     	;# 
  1527     0E97                     	;# 
  1528     0E9C                     	;# 
  1529     0E9D                     	;# 
  1530     0E9E                     	;# 
  1531     0EA1                     	;# 
  1532     0EA2                     	;# 
  1533     0EA3                     	;# 
  1534     0EA4                     	;# 
  1535     0EA5                     	;# 
  1536     0EA9                     	;# 
  1537     0EAA                     	;# 
  1538     0EAB                     	;# 
  1539     0EAC                     	;# 
  1540     0EB1                     	;# 
  1541     0EB2                     	;# 
  1542     0EB3                     	;# 
  1543     0EB8                     	;# 
  1544     0EB9                     	;# 
  1545     0EBA                     	;# 
  1546     0EBB                     	;# 
  1547     0EBC                     	;# 
  1548     0EBD                     	;# 
  1549     0EBE                     	;# 
  1550     0EC3                     	;# 
  1551     0EC5                     	;# 
  1552     0EC6                     	;# 
  1553     0EC7                     	;# 
  1554     0EC8                     	;# 
  1555     0EC9                     	;# 
  1556     0ECA                     	;# 
  1557     0ECB                     	;# 
  1558     0ECC                     	;# 
  1559     0F10                     	;# 
  1560     0F11                     	;# 
  1561     0F12                     	;# 
  1562     0F13                     	;# 
  1563     0F14                     	;# 
  1564     0F15                     	;# 
  1565     0F16                     	;# 
  1566     0F17                     	;# 
  1567     0F18                     	;# 
  1568     0F19                     	;# 
  1569     0F1A                     	;# 
  1570     0F1B                     	;# 
  1571     0F1C                     	;# 
  1572     0F1D                     	;# 
  1573     0F1E                     	;# 
  1574     0F1F                     	;# 
  1575     0F20                     	;# 
  1576     0F21                     	;# 
  1577     0F22                     	;# 
  1578     0F23                     	;# 
  1579     0F24                     	;# 
  1580     0F25                     	;# 
  1581     0F26                     	;# 
  1582     0F27                     	;# 
  1583     0F38                     	;# 
  1584     0F39                     	;# 
  1585     0F3A                     	;# 
  1586     0F3B                     	;# 
  1587     0F3C                     	;# 
  1588     0F3D                     	;# 
  1589     0F3E                     	;# 
  1590     0F3F                     	;# 
  1591     0F40                     	;# 
  1592     0F41                     	;# 
  1593     0F43                     	;# 
  1594     0F44                     	;# 
  1595     0F45                     	;# 
  1596     0F46                     	;# 
  1597     0F47                     	;# 
  1598     0F48                     	;# 
  1599     0F49                     	;# 
  1600     0F4A                     	;# 
  1601     0F4B                     	;# 
  1602     0F4C                     	;# 
  1603     0F4E                     	;# 
  1604     0F4F                     	;# 
  1605     0F50                     	;# 
  1606     0F51                     	;# 
  1607     0F52                     	;# 
  1608     0F53                     	;# 
  1609     0F54                     	;# 
  1610     0F55                     	;# 
  1611     0F56                     	;# 
  1612     0F57                     	;# 
  1613     0F65                     	;# 
  1614     0F68                     	;# 
  1615     0F69                     	;# 
  1616     0F6A                     	;# 
  1617     0F6B                     	;# 
  1618     0FE4                     	;# 
  1619     0FE5                     	;# 
  1620     0FE6                     	;# 
  1621     0FE7                     	;# 
  1622     0FE8                     	;# 
  1623     0FE9                     	;# 
  1624     0FEA                     	;# 
  1625     0FEB                     	;# 
  1626     0FED                     	;# 
  1627     0FEE                     	;# 
  1628     0FEF                     	;# 
  1629     0000                     	;# 
  1630     0001                     	;# 
  1631     0002                     	;# 
  1632     0003                     	;# 
  1633     0004                     	;# 
  1634     0005                     	;# 
  1635     0006                     	;# 
  1636     0007                     	;# 
  1637     0008                     	;# 
  1638     0009                     	;# 
  1639     000A                     	;# 
  1640     000B                     	;# 
  1641     000C                     	;# 
  1642     000D                     	;# 
  1643     000E                     	;# 
  1644     0010                     	;# 
  1645     0011                     	;# 
  1646     0012                     	;# 
  1647     0013                     	;# 
  1648     0016                     	;# 
  1649     0017                     	;# 
  1650     0018                     	;# 
  1651     001C                     	;# 
  1652     001C                     	;# 
  1653     001D                     	;# 
  1654     001D                     	;# 
  1655     001E                     	;# 
  1656     001F                     	;# 
  1657     008C                     	;# 
  1658     008C                     	;# 
  1659     008D                     	;# 
  1660     008E                     	;# 
  1661     008E                     	;# 
  1662     008F                     	;# 
  1663     0090                     	;# 
  1664     0090                     	;# 
  1665     0091                     	;# 
  1666     0093                     	;# 
  1667     0094                     	;# 
  1668     0095                     	;# 
  1669     0096                     	;# 
  1670     0097                     	;# 
  1671     0098                     	;# 
  1672     0099                     	;# 
  1673     009A                     	;# 
  1674     009B                     	;# 
  1675     009C                     	;# 
  1676     009D                     	;# 
  1677     009E                     	;# 
  1678     010C                     	;# 
  1679     010D                     	;# 
  1680     010E                     	;# 
  1681     010E                     	;# 
  1682     010F                     	;# 
  1683     0110                     	;# 
  1684     0110                     	;# 
  1685     0111                     	;# 
  1686     0112                     	;# 
  1687     0112                     	;# 
  1688     0113                     	;# 
  1689     0114                     	;# 
  1690     0114                     	;# 
  1691     0115                     	;# 
  1692     0116                     	;# 
  1693     0116                     	;# 
  1694     0117                     	;# 
  1695     0119                     	;# 
  1696     0119                     	;# 
  1697     0119                     	;# 
  1698     011A                     	;# 
  1699     011A                     	;# 
  1700     011A                     	;# 
  1701     011B                     	;# 
  1702     011B                     	;# 
  1703     011B                     	;# 
  1704     011B                     	;# 
  1705     011B                     	;# 
  1706     011C                     	;# 
  1707     011C                     	;# 
  1708     011C                     	;# 
  1709     011D                     	;# 
  1710     011D                     	;# 
  1711     011D                     	;# 
  1712     011E                     	;# 
  1713     011E                     	;# 
  1714     011E                     	;# 
  1715     011F                     	;# 
  1716     011F                     	;# 
  1717     011F                     	;# 
  1718     011F                     	;# 
  1719     011F                     	;# 
  1720     018C                     	;# 
  1721     018D                     	;# 
  1722     018E                     	;# 
  1723     018F                     	;# 
  1724     0190                     	;# 
  1725     0191                     	;# 
  1726     0192                     	;# 
  1727     0196                     	;# 
  1728     0197                     	;# 
  1729     0198                     	;# 
  1730     0199                     	;# 
  1731     019A                     	;# 
  1732     019B                     	;# 
  1733     019C                     	;# 
  1734     020C                     	;# 
  1735     020C                     	;# 
  1736     020D                     	;# 
  1737     020E                     	;# 
  1738     020F                     	;# 
  1739     020F                     	;# 
  1740     0210                     	;# 
  1741     0210                     	;# 
  1742     0211                     	;# 
  1743     0211                     	;# 
  1744     0212                     	;# 
  1745     0212                     	;# 
  1746     0213                     	;# 
  1747     0214                     	;# 
  1748     0215                     	;# 
  1749     0215                     	;# 
  1750     0216                     	;# 
  1751     0216                     	;# 
  1752     0217                     	;# 
  1753     0217                     	;# 
  1754     0218                     	;# 
  1755     0218                     	;# 
  1756     0219                     	;# 
  1757     021A                     	;# 
  1758     021B                     	;# 
  1759     021B                     	;# 
  1760     021C                     	;# 
  1761     021C                     	;# 
  1762     021D                     	;# 
  1763     021D                     	;# 
  1764     021E                     	;# 
  1765     021F                     	;# 
  1766     028C                     	;# 
  1767     028C                     	;# 
  1768     028D                     	;# 
  1769     028D                     	;# 
  1770     028E                     	;# 
  1771     028F                     	;# 
  1772     0290                     	;# 
  1773     0290                     	;# 
  1774     0291                     	;# 
  1775     0292                     	;# 
  1776     0292                     	;# 
  1777     0293                     	;# 
  1778     0293                     	;# 
  1779     0294                     	;# 
  1780     0295                     	;# 
  1781     0296                     	;# 
  1782     0296                     	;# 
  1783     0297                     	;# 
  1784     0298                     	;# 
  1785     0298                     	;# 
  1786     0299                     	;# 
  1787     0299                     	;# 
  1788     029A                     	;# 
  1789     029B                     	;# 
  1790     029C                     	;# 
  1791     029C                     	;# 
  1792     029D                     	;# 
  1793     030C                     	;# 
  1794     030C                     	;# 
  1795     030D                     	;# 
  1796     030E                     	;# 
  1797     030F                     	;# 
  1798     0310                     	;# 
  1799     0310                     	;# 
  1800     0311                     	;# 
  1801     0312                     	;# 
  1802     0313                     	;# 
  1803     0314                     	;# 
  1804     0314                     	;# 
  1805     0315                     	;# 
  1806     0316                     	;# 
  1807     0317                     	;# 
  1808     0318                     	;# 
  1809     0318                     	;# 
  1810     0319                     	;# 
  1811     031A                     	;# 
  1812     031B                     	;# 
  1813     031C                     	;# 
  1814     031C                     	;# 
  1815     031D                     	;# 
  1816     031E                     	;# 
  1817     031F                     	;# 
  1818     038C                     	;# 
  1819     038C                     	;# 
  1820     038D                     	;# 
  1821     038E                     	;# 
  1822     0390                     	;# 
  1823     0390                     	;# 
  1824     0391                     	;# 
  1825     0392                     	;# 
  1826     040C                     	;# 
  1827     040D                     	;# 
  1828     040E                     	;# 
  1829     040F                     	;# 
  1830     0410                     	;# 
  1831     0411                     	;# 
  1832     0416                     	;# 
  1833     0416                     	;# 
  1834     0417                     	;# 
  1835     0418                     	;# 
  1836     0418                     	;# 
  1837     0419                     	;# 
  1838     041A                     	;# 
  1839     041A                     	;# 
  1840     041B                     	;# 
  1841     041C                     	;# 
  1842     041C                     	;# 
  1843     041D                     	;# 
  1844     041E                     	;# 
  1845     041F                     	;# 
  1846     048C                     	;# 
  1847     048C                     	;# 
  1848     048D                     	;# 
  1849     048E                     	;# 
  1850     048F                     	;# 
  1851     048F                     	;# 
  1852     0490                     	;# 
  1853     0491                     	;# 
  1854     0492                     	;# 
  1855     0492                     	;# 
  1856     0493                     	;# 
  1857     0494                     	;# 
  1858     0495                     	;# 
  1859     0495                     	;# 
  1860     0496                     	;# 
  1861     0497                     	;# 
  1862     0498                     	;# 
  1863     0499                     	;# 
  1864     049A                     	;# 
  1865     049B                     	;# 
  1866     049C                     	;# 
  1867     049D                     	;# 
  1868     050C                     	;# 
  1869     050C                     	;# 
  1870     050D                     	;# 
  1871     050E                     	;# 
  1872     050F                     	;# 
  1873     050F                     	;# 
  1874     0510                     	;# 
  1875     0511                     	;# 
  1876     0512                     	;# 
  1877     0512                     	;# 
  1878     0513                     	;# 
  1879     0514                     	;# 
  1880     0515                     	;# 
  1881     0515                     	;# 
  1882     0516                     	;# 
  1883     0517                     	;# 
  1884     0518                     	;# 
  1885     0519                     	;# 
  1886     051A                     	;# 
  1887     051B                     	;# 
  1888     051C                     	;# 
  1889     051D                     	;# 
  1890     058C                     	;# 
  1891     058C                     	;# 
  1892     058D                     	;# 
  1893     058E                     	;# 
  1894     058F                     	;# 
  1895     058F                     	;# 
  1896     0590                     	;# 
  1897     0591                     	;# 
  1898     0592                     	;# 
  1899     0593                     	;# 
  1900     060C                     	;# 
  1901     060D                     	;# 
  1902     060E                     	;# 
  1903     060F                     	;# 
  1904     0610                     	;# 
  1905     0611                     	;# 
  1906     0612                     	;# 
  1907     0613                     	;# 
  1908     0614                     	;# 
  1909     0616                     	;# 
  1910     0617                     	;# 
  1911     0618                     	;# 
  1912     0619                     	;# 
  1913     061A                     	;# 
  1914     061B                     	;# 
  1915     061C                     	;# 
  1916     061D                     	;# 
  1917     061E                     	;# 
  1918     068C                     	;# 
  1919     068D                     	;# 
  1920     068E                     	;# 
  1921     068F                     	;# 
  1922     0690                     	;# 
  1923     0691                     	;# 
  1924     0692                     	;# 
  1925     0693                     	;# 
  1926     0694                     	;# 
  1927     070C                     	;# 
  1928     070D                     	;# 
  1929     070E                     	;# 
  1930     070F                     	;# 
  1931     0710                     	;# 
  1932     0711                     	;# 
  1933     0712                     	;# 
  1934     0713                     	;# 
  1935     0714                     	;# 
  1936     0716                     	;# 
  1937     0717                     	;# 
  1938     0718                     	;# 
  1939     0719                     	;# 
  1940     071A                     	;# 
  1941     071B                     	;# 
  1942     071C                     	;# 
  1943     071D                     	;# 
  1944     071E                     	;# 
  1945     0796                     	;# 
  1946     0797                     	;# 
  1947     0798                     	;# 
  1948     0799                     	;# 
  1949     079A                     	;# 
  1950     079B                     	;# 
  1951     080C                     	;# 
  1952     080D                     	;# 
  1953     080E                     	;# 
  1954     080F                     	;# 
  1955     0810                     	;# 
  1956     0811                     	;# 
  1957     0812                     	;# 
  1958     0813                     	;# 
  1959     0814                     	;# 
  1960     081A                     	;# 
  1961     081B                     	;# 
  1962     081C                     	;# 
  1963     081D                     	;# 
  1964     081E                     	;# 
  1965     081F                     	;# 
  1966     088C                     	;# 
  1967     088D                     	;# 
  1968     088E                     	;# 
  1969     088F                     	;# 
  1970     0890                     	;# 
  1971     0891                     	;# 
  1972     0892                     	;# 
  1973     0893                     	;# 
  1974     0895                     	;# 
  1975     0896                     	;# 
  1976     0897                     	;# 
  1977     0898                     	;# 
  1978     0899                     	;# 
  1979     089A                     	;# 
  1980     089B                     	;# 
  1981     090C                     	;# 
  1982     090E                     	;# 
  1983     090F                     	;# 
  1984     091F                     	;# 
  1985     091F                     	;# 
  1986     098F                     	;# 
  1987     098F                     	;# 
  1988     0990                     	;# 
  1989     0991                     	;# 
  1990     0992                     	;# 
  1991     0993                     	;# 
  1992     0994                     	;# 
  1993     0995                     	;# 
  1994     0996                     	;# 
  1995     0997                     	;# 
  1996     0E0F                     	;# 
  1997     0E10                     	;# 
  1998     0E11                     	;# 
  1999     0E12                     	;# 
  2000     0E13                     	;# 
  2001     0E14                     	;# 
  2002     0E15                     	;# 
  2003     0E16                     	;# 
  2004     0E17                     	;# 
  2005     0E18                     	;# 
  2006     0E19                     	;# 
  2007     0E1A                     	;# 
  2008     0E1B                     	;# 
  2009     0E1C                     	;# 
  2010     0E1D                     	;# 
  2011     0E1E                     	;# 
  2012     0E1F                     	;# 
  2013     0E20                     	;# 
  2014     0E21                     	;# 
  2015     0E22                     	;# 
  2016     0E23                     	;# 
  2017     0E24                     	;# 
  2018     0E25                     	;# 
  2019     0E26                     	;# 
  2020     0E27                     	;# 
  2021     0E28                     	;# 
  2022     0E29                     	;# 
  2023     0E2A                     	;# 
  2024     0E2B                     	;# 
  2025     0E2C                     	;# 
  2026     0E2D                     	;# 
  2027     0E2E                     	;# 
  2028     0E2F                     	;# 
  2029     0E30                     	;# 
  2030     0E31                     	;# 
  2031     0E32                     	;# 
  2032     0E33                     	;# 
  2033     0E34                     	;# 
  2034     0E35                     	;# 
  2035     0E36                     	;# 
  2036     0E37                     	;# 
  2037     0E8F                     	;# 
  2038     0E90                     	;# 
  2039     0E91                     	;# 
  2040     0E92                     	;# 
  2041     0E93                     	;# 
  2042     0E94                     	;# 
  2043     0E95                     	;# 
  2044     0E96                     	;# 
  2045     0E97                     	;# 
  2046     0E9C                     	;# 
  2047     0E9D                     	;# 
  2048     0E9E                     	;# 
  2049     0EA1                     	;# 
  2050     0EA2                     	;# 
  2051     0EA3                     	;# 
  2052     0EA4                     	;# 
  2053     0EA5                     	;# 
  2054     0EA9                     	;# 
  2055     0EAA                     	;# 
  2056     0EAB                     	;# 
  2057     0EAC                     	;# 
  2058     0EB1                     	;# 
  2059     0EB2                     	;# 
  2060     0EB3                     	;# 
  2061     0EB8                     	;# 
  2062     0EB9                     	;# 
  2063     0EBA                     	;# 
  2064     0EBB                     	;# 
  2065     0EBC                     	;# 
  2066     0EBD                     	;# 
  2067     0EBE                     	;# 
  2068     0EC3                     	;# 
  2069     0EC5                     	;# 
  2070     0EC6                     	;# 
  2071     0EC7                     	;# 
  2072     0EC8                     	;# 
  2073     0EC9                     	;# 
  2074     0ECA                     	;# 
  2075     0ECB                     	;# 
  2076     0ECC                     	;# 
  2077     0F10                     	;# 
  2078     0F11                     	;# 
  2079     0F12                     	;# 
  2080     0F13                     	;# 
  2081     0F14                     	;# 
  2082     0F15                     	;# 
  2083     0F16                     	;# 
  2084     0F17                     	;# 
  2085     0F18                     	;# 
  2086     0F19                     	;# 
  2087     0F1A                     	;# 
  2088     0F1B                     	;# 
  2089     0F1C                     	;# 
  2090     0F1D                     	;# 
  2091     0F1E                     	;# 
  2092     0F1F                     	;# 
  2093     0F20                     	;# 
  2094     0F21                     	;# 
  2095     0F22                     	;# 
  2096     0F23                     	;# 
  2097     0F24                     	;# 
  2098     0F25                     	;# 
  2099     0F26                     	;# 
  2100     0F27                     	;# 
  2101     0F38                     	;# 
  2102     0F39                     	;# 
  2103     0F3A                     	;# 
  2104     0F3B                     	;# 
  2105     0F3C                     	;# 
  2106     0F3D                     	;# 
  2107     0F3E                     	;# 
  2108     0F3F                     	;# 
  2109     0F40                     	;# 
  2110     0F41                     	;# 
  2111     0F43                     	;# 
  2112     0F44                     	;# 
  2113     0F45                     	;# 
  2114     0F46                     	;# 
  2115     0F47                     	;# 
  2116     0F48                     	;# 
  2117     0F49                     	;# 
  2118     0F4A                     	;# 
  2119     0F4B                     	;# 
  2120     0F4C                     	;# 
  2121     0F4E                     	;# 
  2122     0F4F                     	;# 
  2123     0F50                     	;# 
  2124     0F51                     	;# 
  2125     0F52                     	;# 
  2126     0F53                     	;# 
  2127     0F54                     	;# 
  2128     0F55                     	;# 
  2129     0F56                     	;# 
  2130     0F57                     	;# 
  2131     0F65                     	;# 
  2132     0F68                     	;# 
  2133     0F69                     	;# 
  2134     0F6A                     	;# 
  2135     0F6B                     	;# 
  2136     0FE4                     	;# 
  2137     0FE5                     	;# 
  2138     0FE6                     	;# 
  2139     0FE7                     	;# 
  2140     0FE8                     	;# 
  2141     0FE9                     	;# 
  2142     0FEA                     	;# 
  2143     0FEB                     	;# 
  2144     0FED                     	;# 
  2145     0FEE                     	;# 
  2146     0FEF                     	;# 
  2147     0013                     _TRISC	set	19
  2148     0011                     _TRISA	set	17
  2149     0018                     _LATC	set	24
  2150     0016                     _LATA	set	22
  2151     0017                     _LATB	set	23
  2152     0012                     _TRISB	set	18
  2153     000B                     _INTCONbits	set	11
  2154     0017                     _LATBbits	set	23
  2155     008C                     _ADRESL	set	140
  2156     008D                     _ADRESH	set	141
  2157     0093                     _ADCON0bits	set	147
  2158     009E                     _ADPCH	set	158
  2159     009D                     _ADACQ	set	157
  2160     009A                     _ADREF	set	154
  2161     0098                     _ADCLK	set	152
  2162     0096                     _ADCON3	set	150
  2163     0095                     _ADCON2	set	149
  2164     0094                     _ADCON1	set	148
  2165     0093                     _ADCON0	set	147
  2166     0717                     _PIE1bits	set	1815
  2167     070D                     _PIR1bits	set	1805
  2168     079B                     _PMD5	set	1947
  2169     079A                     _PMD4	set	1946
  2170     0799                     _PMD3	set	1945
  2171     0798                     _PMD2	set	1944
  2172     0797                     _PMD1	set	1943
  2173     0796                     _PMD0	set	1942
  2174     0892                     _OSCTUNE	set	2194
  2175     0893                     _OSCFRQ	set	2195
  2176     0891                     _OSCEN	set	2193
  2177     088F                     _OSCCON3	set	2191
  2178     088D                     _OSCCON1	set	2189
  2179     0F68                     _INLVLE	set	3944
  2180     0F52                     _INLVLC	set	3922
  2181     0F47                     _INLVLB	set	3911
  2182     0F3C                     _INLVLA	set	3900
  2183     0F51                     _SLRCONC	set	3921
  2184     0F46                     _SLRCONB	set	3910
  2185     0F3B                     _SLRCONA	set	3899
  2186     0F50                     _ODCONC	set	3920
  2187     0F45                     _ODCONB	set	3909
  2188     0F3A                     _ODCONA	set	3898
  2189     0F4F                     _WPUC	set	3919
  2190     0F39                     _WPUA	set	3897
  2191     0F44                     _WPUB	set	3908
  2192     0F65                     _WPUE	set	3941
  2193     0F38                     _ANSELA	set	3896
  2194     0F4E                     _ANSELC	set	3918
  2195     0F43                     _ANSELB	set	3907
  2196                           
  2197                           	psect	stringtext1
  2198     0695                     __pstringtext1:
  2199     0695                     STR_1:
  2200     0695  3456               	retlw	86	;'V'
  2201     0696  3461               	retlw	97	;'a'
  2202     0697  346C               	retlw	108	;'l'
  2203     0698  346F               	retlw	111	;'o'
  2204     0699  3472               	retlw	114	;'r'
  2205     069A  343A               	retlw	58	;':'
  2206     069B  3420               	retlw	32	;' '
  2207     069C  3425               	retlw	37	;'%'
  2208     069D  3464               	retlw	100	;'d'
  2209     069E  3420               	retlw	32	;' '
  2210     069F  3420               	retlw	32	;' '
  2211     06A0  3400               	retlw	0
  2212                           
  2213                           	psect	stringtext2
  2214     0000                     __pstringtext2:
  2215                           
  2216                           	psect	cinit
  2217     0021                     start_initialization:	
  2218                           ; #config settings
  2219                           
  2220     0021                     __initialization:
  2221                           
  2222                           ; Clear objects allocated to BANK0
  2223     0021  0020               	movlb	0	; select bank0
  2224     0022  01EA               	clrf	__pbssBANK0& (0+127)
  2225     0023  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  2226     0024  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  2227     0025  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  2228     0026  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  2229                           
  2230                           ; Clear objects allocated to BANK1
  2231     0027  30A0               	movlw	low __pbssBANK1
  2232     0028  0084               	movwf	4
  2233     0029  3000               	movlw	high __pbssBANK1
  2234     002A  0085               	movwf	5
  2235     002B  3036               	movlw	54
  2236     002C  3186  26C5  3180   	fcall	clear_ram0
  2237     002F                     end_of_initialization:	
  2238                           ;End of C runtime variable initialization code
  2239                           
  2240     002F                     __end_of__initialization:
  2241     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2242     0030  0020               	movlb	0
  2243     0031  3184  2CB4         	ljmp	_main	;jump to C main() function
  2244                           
  2245                           	psect	bssBANK0
  2246     006A                     __pbssBANK0:
  2247     006A                     _prec:
  2248     006A                     	ds	2
  2249     006C                     _valorADC:
  2250     006C                     	ds	2
  2251     006E                     _flags:
  2252     006E                     	ds	1
  2253                           
  2254                           	psect	bssBANK1
  2255     00A0                     __pbssBANK1:
  2256     00A0                     _width:
  2257     00A0                     	ds	2
  2258     00A2                     _dbuf:
  2259     00A2                     	ds	32
  2260     00C2                     _aux:
  2261     00C2                     	ds	20
  2262                           
  2263                           	psect	clrtext
  2264     06C5                     clear_ram0:	
  2265                           ;	Called with FSR0 containing the base address, and
  2266                           ;	WREG with the size to clear
  2267                           
  2268     06C5  0064               	clrwdt	;clear the watchdog before getting into this loop
  2269     06C6                     clrloop0:
  2270     06C6  0180               	clrf	0	;clear RAM location pointed to by FSR
  2271     06C7  3101               	addfsr 0,1
  2272     06C8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2273     06C9  2EC6               	goto	clrloop0	;have we reached the end yet?
  2274     06CA  3400               	retlw	0	;all done for this memory range, return
  2275                           
  2276                           	psect	cstackBANK1
  2277     00D6                     __pcstackBANK1:
  2278     00D6                     sprintf@ap:
  2279                           
  2280                           ; 1 bytes @ 0x0
  2281     00D6                     	ds	1
  2282     00D7                     sprintf@s:
  2283                           
  2284                           ; 1 bytes @ 0x1
  2285     00D7                     	ds	1
  2286     00D8                     sprintf@f:
  2287                           
  2288                           ; 10 bytes @ 0x2
  2289     00D8                     	ds	10
  2290                           
  2291                           	psect	cstackCOMMON
  2292     0070                     __pcstackCOMMON:
  2293     0070                     ?_PMD_Initialize:
  2294     0070                     ??_PMD_Initialize:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297     0070                     ?_PIN_MANAGER_Initialize:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300     0070                     ??_PIN_MANAGER_Initialize:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303     0070                     ?_OSCILLATOR_Initialize:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306     0070                     ??_OSCILLATOR_Initialize:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309     0070                     ?_putch:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312     0070                     ??_putch:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315     0070                     ?_SYSTEM_Initialize:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318     0070                     ??_SYSTEM_Initialize:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321     0070                     ?_Lcd_Port:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324     0070                     ??_Lcd_Port:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327     0070                     ?_Lcd_Cmd:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330     0070                     ?_Lcd_Init:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333     0070                     ?_Lcd_Write_Char:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336     0070                     ?_Lcd_Write_String:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339     0070                     ?_main:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342     0070                     ?_adc:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345     0070                     ??_adc:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348     0070                     ??___aodiv:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351     0070                     ??___aomod:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354     0070                     ?_fputc:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357     0070                     ?_Lcd_Clear:	
  2358                           ; 2 bytes @ 0x0
  2359                           
  2360     0070                     Lcd_Port@a:	
  2361                           ; 2 bytes @ 0x0
  2362                           
  2363     0070                     putch@c:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366     0070                     fputc@c:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369                           
  2370                           ; 2 bytes @ 0x0
  2371     0070                     	ds	1
  2372     0071                     ??_Lcd_Cmd:
  2373     0071                     ??_Lcd_Write_Char:	
  2374                           ; 1 bytes @ 0x1
  2375                           
  2376     0071                     ___aodiv@counter:	
  2377                           ; 1 bytes @ 0x1
  2378                           
  2379     0071                     ___aomod@counter:	
  2380                           ; 1 bytes @ 0x1
  2381                           
  2382                           
  2383                           ; 1 bytes @ 0x1
  2384     0071                     	ds	1
  2385     0072                     Lcd_Cmd@a:
  2386     0072                     Lcd_Write_Char@temp:	
  2387                           ; 1 bytes @ 0x2
  2388                           
  2389     0072                     ___aodiv@sign:	
  2390                           ; 1 bytes @ 0x2
  2391                           
  2392     0072                     ___aomod@sign:	
  2393                           ; 1 bytes @ 0x2
  2394                           
  2395     0072                     fputc@fp:	
  2396                           ; 1 bytes @ 0x2
  2397                           
  2398                           
  2399                           ; 1 bytes @ 0x2
  2400     0072                     	ds	1
  2401     0073                     ??_fputc:
  2402     0073                     ??_Lcd_Clear:	
  2403                           ; 1 bytes @ 0x3
  2404                           
  2405     0073                     ?_Lcd_Set_Cursor:	
  2406                           ; 1 bytes @ 0x3
  2407                           
  2408     0073                     ??_Lcd_Init:	
  2409                           ; 1 bytes @ 0x3
  2410                           
  2411     0073                     ?_abs:	
  2412                           ; 1 bytes @ 0x3
  2413                           
  2414     0073                     Lcd_Set_Cursor@b:	
  2415                           ; 2 bytes @ 0x3
  2416                           
  2417     0073                     Lcd_Write_Char@y:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420     0073                     abs@a:	
  2421                           ; 1 bytes @ 0x3
  2422                           
  2423     0073                     ___aodiv@quotient:	
  2424                           ; 2 bytes @ 0x3
  2425                           
  2426                           
  2427                           ; 8 bytes @ 0x3
  2428     0073                     	ds	1
  2429     0074                     ??_Lcd_Set_Cursor:
  2430     0074                     Lcd_Write_Char@a:	
  2431                           ; 1 bytes @ 0x4
  2432                           
  2433                           
  2434                           ; 1 bytes @ 0x4
  2435     0074                     	ds	1
  2436     0075                     ??_abs:
  2437     0075                     ??_Lcd_Write_String:	
  2438                           ; 1 bytes @ 0x5
  2439                           
  2440     0075                     Lcd_Set_Cursor@a:	
  2441                           ; 1 bytes @ 0x5
  2442                           
  2443                           
  2444                           ; 1 bytes @ 0x5
  2445     0075                     	ds	1
  2446     0076                     Lcd_Set_Cursor@z:
  2447     0076                     Lcd_Write_String@i:	
  2448                           ; 1 bytes @ 0x6
  2449                           
  2450                           
  2451                           ; 2 bytes @ 0x6
  2452     0076                     	ds	1
  2453     0077                     Lcd_Set_Cursor@y:
  2454                           
  2455                           ; 1 bytes @ 0x7
  2456     0077                     	ds	1
  2457     0078                     ?_fputs:
  2458     0078                     Lcd_Set_Cursor@temp:	
  2459                           ; 2 bytes @ 0x8
  2460                           
  2461     0078                     Lcd_Write_String@a:	
  2462                           ; 1 bytes @ 0x8
  2463                           
  2464     0078                     fputs@fp:	
  2465                           ; 1 bytes @ 0x8
  2466                           
  2467                           
  2468                           ; 1 bytes @ 0x8
  2469     0078                     	ds	1
  2470     0079                     ??_fputs:
  2471                           
  2472                           ; 1 bytes @ 0x9
  2473     0079                     	ds	2
  2474     007B                     ?_pad:
  2475     007B                     pad@buf:	
  2476                           ; 1 bytes @ 0xB
  2477                           
  2478                           
  2479                           ; 1 bytes @ 0xB
  2480     007B                     	ds	1
  2481     007C                     pad@p:
  2482                           
  2483                           ; 2 bytes @ 0xC
  2484     007C                     	ds	2
  2485                           
  2486                           	psect	cstackBANK0
  2487     0020                     __pcstackBANK0:
  2488     0020                     ?___aodiv:
  2489     0020                     ?___aomod:	
  2490                           ; 8 bytes @ 0x0
  2491                           
  2492     0020                     fputs@c:	
  2493                           ; 8 bytes @ 0x0
  2494                           
  2495     0020                     ___aodiv@divisor:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498     0020                     ___aomod@divisor:	
  2499                           ; 8 bytes @ 0x0
  2500                           
  2501                           
  2502                           ; 8 bytes @ 0x0
  2503     0020                     	ds	1
  2504     0021                     fputs@i:
  2505                           
  2506                           ; 2 bytes @ 0x1
  2507     0021                     	ds	2
  2508     0023                     fputs@s:
  2509                           
  2510                           ; 1 bytes @ 0x3
  2511     0023                     	ds	1
  2512     0024                     ??_pad:
  2513                           
  2514                           ; 1 bytes @ 0x4
  2515     0024                     	ds	1
  2516     0025                     pad@i:
  2517                           
  2518                           ; 2 bytes @ 0x5
  2519     0025                     	ds	2
  2520     0027                     pad@w:
  2521                           
  2522                           ; 2 bytes @ 0x7
  2523     0027                     	ds	1
  2524     0028                     ___aodiv@dividend:
  2525     0028                     ___aomod@dividend:	
  2526                           ; 8 bytes @ 0x8
  2527                           
  2528                           
  2529                           ; 8 bytes @ 0x8
  2530     0028                     	ds	1
  2531     0029                     pad@fp:
  2532                           
  2533                           ; 1 bytes @ 0x9
  2534     0029                     	ds	7
  2535     0030                     ?_dtoa:
  2536     0030                     dtoa@d:	
  2537                           ; 1 bytes @ 0x10
  2538                           
  2539                           
  2540                           ; 8 bytes @ 0x10
  2541     0030                     	ds	8
  2542     0038                     ??_dtoa:
  2543                           
  2544                           ; 1 bytes @ 0x18
  2545     0038                     	ds	1
  2546     0039                     _dtoa$802:
  2547                           
  2548                           ; 2 bytes @ 0x19
  2549     0039                     	ds	2
  2550     003B                     dtoa@fp:
  2551                           
  2552                           ; 1 bytes @ 0x1B
  2553     003B                     	ds	1
  2554     003C                     dtoa@p:
  2555                           
  2556                           ; 2 bytes @ 0x1C
  2557     003C                     	ds	2
  2558     003E                     dtoa@w:
  2559                           
  2560                           ; 2 bytes @ 0x1E
  2561     003E                     	ds	2
  2562     0040                     dtoa@n:
  2563                           
  2564                           ; 8 bytes @ 0x20
  2565     0040                     	ds	8
  2566     0048                     dtoa@i:
  2567                           
  2568                           ; 2 bytes @ 0x28
  2569     0048                     	ds	2
  2570     004A                     dtoa@s:
  2571                           
  2572                           ; 1 bytes @ 0x2A
  2573     004A                     	ds	1
  2574     004B                     ?_vfpfcnvrt:
  2575     004B                     vfpfcnvrt@fmt:	
  2576                           ; 1 bytes @ 0x2B
  2577                           
  2578                           
  2579                           ; 1 bytes @ 0x2B
  2580     004B                     	ds	1
  2581     004C                     vfpfcnvrt@ap:
  2582                           
  2583                           ; 1 bytes @ 0x2C
  2584     004C                     	ds	1
  2585     004D                     ??_vfpfcnvrt:
  2586                           
  2587                           ; 1 bytes @ 0x2D
  2588     004D                     	ds	4
  2589     0051                     vfpfcnvrt@convarg:
  2590                           
  2591                           ; 8 bytes @ 0x31
  2592     0051                     	ds	8
  2593     0059                     vfpfcnvrt@fp:
  2594                           
  2595                           ; 1 bytes @ 0x39
  2596     0059                     	ds	1
  2597     005A                     vfpfcnvrt@cp:
  2598                           
  2599                           ; 2 bytes @ 0x3A
  2600     005A                     	ds	2
  2601     005C                     ?_vfprintf:
  2602     005C                     vfprintf@fmt:	
  2603                           ; 2 bytes @ 0x3C
  2604                           
  2605                           
  2606                           ; 2 bytes @ 0x3C
  2607     005C                     	ds	2
  2608     005E                     vfprintf@ap:
  2609                           
  2610                           ; 1 bytes @ 0x3E
  2611     005E                     	ds	1
  2612     005F                     ??_vfprintf:
  2613                           
  2614                           ; 1 bytes @ 0x3F
  2615     005F                     	ds	1
  2616     0060                     vfprintf@fp:
  2617                           
  2618                           ; 1 bytes @ 0x40
  2619     0060                     	ds	1
  2620     0061                     vfprintf@cfmt:
  2621                           
  2622                           ; 2 bytes @ 0x41
  2623     0061                     	ds	2
  2624     0063                     ?_sprintf:
  2625     0063                     sprintf@fmt:	
  2626                           ; 2 bytes @ 0x43
  2627                           
  2628                           
  2629                           ; 2 bytes @ 0x43
  2630     0063                     	ds	4
  2631     0067                     ??_sprintf:
  2632                           
  2633                           ; 1 bytes @ 0x47
  2634     0067                     	ds	1
  2635     0068                     ??_main:
  2636                           
  2637                           ; 1 bytes @ 0x48
  2638     0068                     	ds	2
  2639                           
  2640                           	psect	maintext
  2641     04B4                     __pmaintext:	
  2642 ;;
  2643 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2644 ;;
  2645 ;; *************** function _main *****************
  2646 ;; Defined at:
  2647 ;;		line 63 in file "main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : B1F/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;Total ram usage:        2 bytes
  2666 ;; Hardware stack levels required when called: 9
  2667 ;; This function calls:
  2668 ;;		_Lcd_Clear
  2669 ;;		_Lcd_Init
  2670 ;;		_Lcd_Set_Cursor
  2671 ;;		_Lcd_Write_String
  2672 ;;		_SYSTEM_Initialize
  2673 ;;		_sprintf
  2674 ;; This function is called by:
  2675 ;;		Startup code after reset
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679     04B4                     _main:	
  2680                           ;psect for function _main
  2681                           
  2682     04B4                     l1697:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2685                           
  2686                           
  2687                           ;main.c: 66:     SYSTEM_Initialize();
  2688     04B4  3186  26A1  3184   	fcall	_SYSTEM_Initialize
  2689     04B7                     l1699:
  2690                           
  2691                           ;main.c: 83:     INTCONbits.GIE = 1;
  2692     04B7  178B               	bsf	11,7	;volatile
  2693     04B8                     l1701:
  2694                           
  2695                           ;main.c: 84:     INTCONbits.PEIE = 1;
  2696     04B8  170B               	bsf	11,6	;volatile
  2697     04B9                     l1703:
  2698                           
  2699                           ;main.c: 86:     PIR1bits.ADIF = 0;
  2700     04B9  002E               	movlb	14	; select bank14
  2701     04BA  100D               	bcf	13,0	;volatile
  2702     04BB                     l1705:
  2703                           
  2704                           ;main.c: 87:     PIE1bits.ADIE = 1;
  2705     04BB  1417               	bsf	23,0	;volatile
  2706     04BC                     l1707:
  2707                           
  2708                           ;main.c: 89:     ADCON0 = 0x84;
  2709     04BC  3084               	movlw	132
  2710     04BD  0021               	movlb	1	; select bank1
  2711     04BE  0093               	movwf	19	;volatile
  2712     04BF                     l1709:
  2713                           
  2714                           ;main.c: 90:     ADCON1 = 0x00;
  2715     04BF  0194               	clrf	20	;volatile
  2716     04C0                     l1711:
  2717                           
  2718                           ;main.c: 91:     ADCON2 = 0x00;
  2719     04C0  0195               	clrf	21	;volatile
  2720     04C1                     l1713:
  2721                           
  2722                           ;main.c: 92:     ADCON3 = 0x00;
  2723     04C1  0196               	clrf	22	;volatile
  2724     04C2                     l1715:
  2725                           
  2726                           ;main.c: 93:     ADCLK = 0x01;
  2727     04C2  3001               	movlw	1
  2728     04C3  0098               	movwf	24	;volatile
  2729     04C4                     l1717:
  2730                           
  2731                           ;main.c: 94:     ADREF = 0x00;
  2732     04C4  019A               	clrf	26	;volatile
  2733     04C5                     l1719:
  2734                           
  2735                           ;main.c: 95:     ADACQ = 0x01;
  2736     04C5  3001               	movlw	1
  2737     04C6  009D               	movwf	29	;volatile
  2738     04C7                     l1721:
  2739                           
  2740                           ;main.c: 96:     ADPCH = 0x04;
  2741     04C7  3004               	movlw	4
  2742     04C8  009E               	movwf	30	;volatile
  2743     04C9                     l1723:
  2744                           
  2745                           ;main.c: 98:     TRISB = 0x00;
  2746     04C9  0020               	movlb	0	; select bank0
  2747     04CA  0192               	clrf	18	;volatile
  2748     04CB                     l1725:
  2749                           
  2750                           ;main.c: 99:     ANSELB = 0x00;
  2751     04CB  003E               	movlb	30	; select bank30
  2752     04CC  01C3               	clrf	67	;volatile
  2753     04CD                     l1727:
  2754                           
  2755                           ;main.c: 100:     LATB = 0x00;
  2756     04CD  0020               	movlb	0	; select bank0
  2757     04CE  0197               	clrf	23	;volatile
  2758     04CF                     l1729:
  2759                           
  2760                           ;main.c: 102:     ADCON0bits.ADON = 1;
  2761     04CF  0021               	movlb	1	; select bank1
  2762     04D0  1793               	bsf	19,7	;volatile
  2763     04D1                     l1731:
  2764                           
  2765                           ;main.c: 103:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  2766     04D1  3014               	movlw	20
  2767     04D2                     u1197:
  2768     04D2  0B89               	decfsz	9,f
  2769     04D3  2CD2               	goto	u1197
  2770     04D4                     l1733:
  2771                           
  2772                           ;main.c: 104:     ADCON0bits.ADGO = 1;
  2773     04D4  0021               	movlb	1	; select bank1
  2774     04D5  1413               	bsf	19,0	;volatile
  2775     04D6                     l1735:
  2776                           
  2777                           ;main.c: 106:     Lcd_Init();
  2778     04D6  3185  2503  3184   	fcall	_Lcd_Init
  2779     04D9                     l1737:
  2780                           
  2781                           ;main.c: 109:     {;main.c: 111:         Lcd_Clear();
  2782     04D9  3186  26B4  3184   	fcall	_Lcd_Clear
  2783     04DC                     l1739:
  2784                           
  2785                           ;main.c: 112:         Lcd_Set_Cursor(1,1);
  2786     04DC  01F3               	clrf	Lcd_Set_Cursor@b
  2787     04DD  0AF3               	incf	Lcd_Set_Cursor@b,f
  2788     04DE  3001               	movlw	1
  2789     04DF  3183  23EF  3184   	fcall	_Lcd_Set_Cursor
  2790     04E2                     l1741:
  2791                           
  2792                           ;main.c: 113:         sprintf(aux,"Valor: %d  ", valorADC);
  2793     04E2  3095               	movlw	low (STR_1| (0+32768))
  2794     04E3  0020               	movlb	0	; select bank0
  2795     04E4  00E3               	movwf	sprintf@fmt
  2796     04E5  3086               	movlw	high (STR_1| (0+32768))
  2797     04E6  00E4               	movwf	sprintf@fmt+1
  2798     04E7  086D               	movf	_valorADC+1,w
  2799     04E8  00E6               	movwf	?_sprintf+3
  2800     04E9  086C               	movf	_valorADC,w
  2801     04EA  00E5               	movwf	?_sprintf+2
  2802     04EB  30C2               	movlw	(low (_aux| 0))& (0+255)
  2803     04EC  3186  260E  3184   	fcall	_sprintf
  2804     04EF                     l1743:
  2805                           
  2806                           ;main.c: 114:         Lcd_Write_String(aux);
  2807     04EF  30C2               	movlw	(low (_aux| 0))& (0+255)
  2808     04F0  3186  262D  3184   	fcall	_Lcd_Write_String
  2809     04F3                     l1745:
  2810                           
  2811                           ;main.c: 115:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2812     04F3  3002               	movlw	2
  2813     04F4  0020               	movlb	0	; select bank0
  2814     04F5  00E9               	movwf	??_main+1
  2815     04F6  3004               	movlw	4
  2816     04F7  00E8               	movwf	??_main
  2817     04F8  30BA               	movlw	186
  2818     04F9                     u1207:
  2819     04F9  0B89               	decfsz	9,f
  2820     04FA  2CF9               	goto	u1207
  2821     04FB  0BE8               	decfsz	??_main,f
  2822     04FC  2CF9               	goto	u1207
  2823     04FD  0BE9               	decfsz	??_main+1,f
  2824     04FE  2CF9               	goto	u1207
  2825     04FF  0000               	nop
  2826     0500  2CD9               	goto	l1737
  2827     0501  3180  281F         	ljmp	start
  2828     0503                     __end_of_main:
  2829                           
  2830                           	psect	text1
  2831     060E                     __ptext1:	
  2832 ;; *************** function _sprintf *****************
  2833 ;; Defined at:
  2834 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  s               1    wreg     PTR unsigned char 
  2837 ;;		 -> aux(20), 
  2838 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  2839 ;;		 -> STR_1(12), 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  s               1    1[BANK1 ] PTR unsigned char 
  2842 ;;		 -> aux(20), 
  2843 ;;  f              10    2[BANK1 ] struct _IO_FILE
  2844 ;;  ret             2    0        int 
  2845 ;;  ap              1    0[BANK1 ] PTR void [1]
  2846 ;;		 -> ?_sprintf(2), 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  2   67[BANK0 ] int 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;Total ram usage:       17 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 8
  2863 ;; This function calls:
  2864 ;;		_vfprintf
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870     060E                     _sprintf:	
  2871                           ;psect for function _sprintf
  2872                           
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2876                           ;sprintf@s stored from wreg
  2877     060E  0021               	movlb	1	; select bank1
  2878     060F  00D7               	movwf	sprintf@s^(0+128)
  2879     0610                     l1681:
  2880     0610  3065               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2881     0611  00D6               	movwf	sprintf@ap^(0+128)
  2882     0612  0857               	movf	sprintf@s^(0+128),w
  2883     0613  00D8               	movwf	sprintf@f^(0+128)
  2884     0614                     l1683:
  2885     0614  01DA               	clrf	(sprintf@f^(0+128)+2)
  2886     0615  01DB               	clrf	((sprintf@f+1)^(0+128)+2)
  2887     0616                     l1685:
  2888     0616  01E0               	clrf	(sprintf@f^(0+128)+8)
  2889     0617  01E1               	clrf	((sprintf@f+1)^(0+128)+8)
  2890     0618                     l1687:
  2891     0618  0020               	movlb	0	; select bank0
  2892     0619  0864               	movf	sprintf@fmt+1,w
  2893     061A  00DD               	movwf	vfprintf@fmt+1
  2894     061B  0863               	movf	sprintf@fmt,w
  2895     061C  00DC               	movwf	vfprintf@fmt
  2896     061D  30D6               	movlw	(low (sprintf@ap| 0))& (0+255)
  2897     061E  00DE               	movwf	vfprintf@ap
  2898     061F  30D8               	movlw	(low (sprintf@f| 0))& (0+255)
  2899     0620  3186  264B  3186   	fcall	_vfprintf
  2900     0623                     l1689:
  2901     0623  0021               	movlb	1	; select bank1
  2902     0624  085A               	movf	(sprintf@f^(0+128)+2),w
  2903     0625  0757               	addwf	sprintf@s^(0+128),w
  2904     0626  0020               	movlb	0	; select bank0
  2905     0627  00E7               	movwf	??_sprintf
  2906     0628  0867               	movf	??_sprintf,w
  2907     0629  0086               	movwf	6
  2908     062A  0187               	clrf	7
  2909     062B  0181               	clrf	1
  2910     062C                     l809:
  2911     062C  0008               	return
  2912     062D                     __end_of_sprintf:
  2913                           
  2914                           	psect	text2
  2915     064B                     __ptext2:	
  2916 ;; *************** function _vfprintf *****************
  2917 ;; Defined at:
  2918 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  fp              1    wreg     PTR struct _IO_FILE
  2921 ;;		 -> sprintf@f(10), 
  2922 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  2923 ;;		 -> STR_1(12), 
  2924 ;;  ap              1   62[BANK0 ] PTR PTR void 
  2925 ;;		 -> sprintf@ap(1), 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  2928 ;;		 -> sprintf@f(10), 
  2929 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  2930 ;;		 -> STR_1(12), 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2   60[BANK0 ] int 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2940 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;Total ram usage:        7 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 7
  2947 ;; This function calls:
  2948 ;;		_vfpfcnvrt
  2949 ;; This function is called by:
  2950 ;;		_sprintf
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954     064B                     _vfprintf:	
  2955                           ;psect for function _vfprintf
  2956                           
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2960                           ;vfprintf@fp stored from wreg
  2961     064B  0020               	movlb	0	; select bank0
  2962     064C  00E0               	movwf	vfprintf@fp
  2963     064D                     l1605:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2966     064D  085D               	movf	vfprintf@fmt+1,w
  2967     064E  00E2               	movwf	vfprintf@cfmt+1
  2968     064F  085C               	movf	vfprintf@fmt,w
  2969     0650  00E1               	movwf	vfprintf@cfmt
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2972     0651  2E5A               	goto	l1609
  2973     0652                     l1607:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2976     0652  3061               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2977     0653  00CB               	movwf	vfpfcnvrt@fmt
  2978     0654  085E               	movf	vfprintf@ap,w
  2979     0655  00CC               	movwf	vfpfcnvrt@ap
  2980     0656  0860               	movf	vfprintf@fp,w
  2981     0657  3183  234E  3186   	fcall	_vfpfcnvrt
  2982     065A                     l1609:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2985     065A  0020               	movlb	0	; select bank0
  2986     065B  0861               	movf	vfprintf@cfmt,w
  2987     065C  0084               	movwf	4
  2988     065D  0862               	movf	vfprintf@cfmt+1,w
  2989     065E  0085               	movwf	5
  2990     065F  0012               	moviw fsr0++
  2991     0660  1D03               	btfss	3,2
  2992     0661  2E63               	goto	u1081
  2993     0662  2E64               	goto	u1080
  2994     0663                     u1081:
  2995     0663  2E52               	goto	l1607
  2996     0664                     u1080:
  2997     0664                     l1611:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3000     0664  01DC               	clrf	?_vfprintf
  3001     0665  01DD               	clrf	?_vfprintf+1
  3002     0666                     l867:
  3003     0666  0008               	return
  3004     0667                     __end_of_vfprintf:
  3005                           
  3006                           	psect	text3
  3007     034E                     __ptext3:	
  3008 ;; *************** function _vfpfcnvrt *****************
  3009 ;; Defined at:
  3010 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  fp              1    wreg     PTR struct _IO_FILE
  3013 ;;		 -> sprintf@f(10), 
  3014 ;;  fmt             1   43[BANK0 ] PTR PTR unsigned char 
  3015 ;;		 -> vfprintf@cfmt(2), 
  3016 ;;  ap              1   44[BANK0 ] PTR PTR void 
  3017 ;;		 -> sprintf@ap(1), 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  fp              1   57[BANK0 ] PTR struct _IO_FILE
  3020 ;;		 -> sprintf@f(10), 
  3021 ;;  convarg         8   49[BANK0 ] struct .
  3022 ;;  cp              2   58[BANK0 ] PTR unsigned char 
  3023 ;;		 -> STR_1(12), 
  3024 ;;  i               2    0        int 
  3025 ;;  done            2    0        int 
  3026 ;;  c               1    0        unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3036 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;Total ram usage:       17 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 6
  3043 ;; This function calls:
  3044 ;;		_dtoa
  3045 ;;		_fputc
  3046 ;; This function is called by:
  3047 ;;		_vfprintf
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051     034E                     _vfpfcnvrt:	
  3052                           ;psect for function _vfpfcnvrt
  3053                           
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3057                           ;vfpfcnvrt@fp stored from wreg
  3058     034E  0020               	movlb	0	; select bank0
  3059     034F  00D9               	movwf	vfpfcnvrt@fp
  3060     0350                     l1505:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3063     0350  084B               	movf	vfpfcnvrt@fmt,w
  3064     0351  0086               	movwf	6
  3065     0352  0187               	clrf	7
  3066     0353  3F40               	moviw [0]fsr1
  3067     0354  00CD               	movwf	??_vfpfcnvrt
  3068     0355  3F41               	moviw [1]fsr1
  3069     0356  00CE               	movwf	??_vfpfcnvrt+1
  3070     0357  084D               	movf	??_vfpfcnvrt,w
  3071     0358  0084               	movwf	4
  3072     0359  084E               	movf	??_vfpfcnvrt+1,w
  3073     035A  0085               	movwf	5
  3074     035B  0012               	moviw fsr0++
  3075     035C  3A25               	xorlw	37
  3076     035D  1D03               	btfss	3,2
  3077     035E  2B60               	goto	u1041
  3078     035F  2B61               	goto	u1040
  3079     0360                     u1041:
  3080     0360  2BD6               	goto	l1531
  3081     0361                     u1040:
  3082     0361                     l1507:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3085     0361  084B               	movf	vfpfcnvrt@fmt,w
  3086     0362  0086               	movwf	6
  3087     0363  0187               	clrf	7
  3088     0364  3001               	movlw	1
  3089     0365  0781               	addwf	1,f
  3090     0366  3141               	addfsr 1,1
  3091     0367  1803               	skipnc
  3092     0368  0A81               	incf	1,f
  3093     0369                     l1509:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3096     0369  0021               	movlb	1	; select bank1
  3097     036A  01A0               	clrf	_width^(0+128)
  3098     036B  01A1               	clrf	(_width+1)^(0+128)
  3099     036C  1003               	clrc
  3100     036D  3000               	movlw	0
  3101     036E  1803               	btfsc	3,0
  3102     036F  3001               	movlw	1
  3103     0370  0020               	movlb	0	; select bank0
  3104     0371  00EE               	movwf	_flags
  3105     0372                     l1511:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3108     0372  30FF               	movlw	255
  3109     0373  00EA               	movwf	_prec
  3110     0374  30FF               	movlw	255
  3111     0375  00EB               	movwf	_prec+1
  3112     0376                     l1513:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3115     0376  084B               	movf	vfpfcnvrt@fmt,w
  3116     0377  0086               	movwf	6
  3117     0378  0187               	clrf	7
  3118     0379  3F40               	moviw [0]fsr1
  3119     037A  00DA               	movwf	vfpfcnvrt@cp
  3120     037B  3F41               	moviw [1]fsr1
  3121     037C  00DB               	movwf	vfpfcnvrt@cp+1
  3122     037D                     l1515:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3125     037D  085A               	movf	vfpfcnvrt@cp,w
  3126     037E  0084               	movwf	4
  3127     037F  085B               	movf	vfpfcnvrt@cp+1,w
  3128     0380  0085               	movwf	5
  3129     0381  0012               	moviw fsr0++
  3130     0382  3A64               	xorlw	100
  3131     0383  1903               	btfsc	3,2
  3132     0384  2B86               	goto	u1051
  3133     0385  2B87               	goto	u1050
  3134     0386                     u1051:
  3135     0386  2B91               	goto	l1519
  3136     0387                     u1050:
  3137     0387                     l1517:
  3138     0387  085A               	movf	vfpfcnvrt@cp,w
  3139     0388  0084               	movwf	4
  3140     0389  085B               	movf	vfpfcnvrt@cp+1,w
  3141     038A  0085               	movwf	5
  3142     038B  0012               	moviw fsr0++
  3143     038C  3A69               	xorlw	105
  3144     038D  1D03               	btfss	3,2
  3145     038E  2B90               	goto	u1061
  3146     038F  2B91               	goto	u1060
  3147     0390                     u1061:
  3148     0390  2BCC               	goto	l1527
  3149     0391                     u1060:
  3150     0391                     l1519:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3153     0391  084C               	movf	vfpfcnvrt@ap,w
  3154     0392  0086               	movwf	6
  3155     0393  0187               	clrf	7
  3156     0394  0801               	movf	1,w
  3157     0395  0084               	movwf	4
  3158     0396  0185               	clrf	5
  3159     0397  3002               	movlw	2
  3160     0398  0781               	addwf	1,f
  3161     0399  3F00               	moviw [0]fsr0
  3162     039A  00CD               	movwf	??_vfpfcnvrt
  3163     039B  3F01               	moviw [1]fsr0
  3164     039C  00CE               	movwf	??_vfpfcnvrt+1
  3165     039D  084D               	movf	??_vfpfcnvrt,w
  3166     039E  00D1               	movwf	vfpfcnvrt@convarg
  3167     039F  084E               	movf	??_vfpfcnvrt+1,w
  3168     03A0  00D2               	movwf	vfpfcnvrt@convarg+1
  3169     03A1  0D89               	rlf	9,f
  3170     03A2  3B89               	subwfb	9,f
  3171     03A3  0989               	comf	9,f
  3172     03A4  00D3               	movwf	vfpfcnvrt@convarg+2
  3173     03A5  00D4               	movwf	vfpfcnvrt@convarg+3
  3174     03A6  00D5               	movwf	vfpfcnvrt@convarg+4
  3175     03A7  00D6               	movwf	vfpfcnvrt@convarg+5
  3176     03A8  00D7               	movwf	vfpfcnvrt@convarg+6
  3177     03A9  00D8               	movwf	vfpfcnvrt@convarg+7
  3178     03AA                     l1521:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3181     03AA  085A               	movf	vfpfcnvrt@cp,w
  3182     03AB  3E01               	addlw	1
  3183     03AC  00CD               	movwf	??_vfpfcnvrt
  3184     03AD  3000               	movlw	0
  3185     03AE  3D5B               	addwfc	vfpfcnvrt@cp+1,w
  3186     03AF  00CE               	movwf	??_vfpfcnvrt+1
  3187     03B0  084B               	movf	vfpfcnvrt@fmt,w
  3188     03B1  0086               	movwf	6
  3189     03B2  0187               	clrf	7
  3190     03B3  084D               	movf	??_vfpfcnvrt,w
  3191     03B4  3FC0               	movwi [0]fsr1
  3192     03B5  084E               	movf	??_vfpfcnvrt+1,w
  3193     03B6  3FC1               	movwi [1]fsr1
  3194     03B7                     l1523:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3197     03B7  0851               	movf	vfpfcnvrt@convarg,w
  3198     03B8  00B0               	movwf	dtoa@d
  3199     03B9  0852               	movf	vfpfcnvrt@convarg+1,w
  3200     03BA  00B1               	movwf	dtoa@d+1
  3201     03BB  0853               	movf	vfpfcnvrt@convarg+2,w
  3202     03BC  00B2               	movwf	dtoa@d+2
  3203     03BD  0854               	movf	vfpfcnvrt@convarg+3,w
  3204     03BE  00B3               	movwf	dtoa@d+3
  3205     03BF  0855               	movf	vfpfcnvrt@convarg+4,w
  3206     03C0  00B4               	movwf	dtoa@d+4
  3207     03C1  0856               	movf	vfpfcnvrt@convarg+5,w
  3208     03C2  00B5               	movwf	dtoa@d+5
  3209     03C3  0857               	movf	vfpfcnvrt@convarg+6,w
  3210     03C4  00B6               	movwf	dtoa@d+6
  3211     03C5  0858               	movf	vfpfcnvrt@convarg+7,w
  3212     03C6  00B7               	movwf	dtoa@d+7
  3213     03C7  0859               	movf	vfpfcnvrt@fp,w
  3214     03C8  3180  2033  3183   	fcall	_dtoa
  3215     03CB  2BEE               	goto	l861
  3216     03CC                     l1527:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3219     03CC  0020               	movlb	0	; select bank0
  3220     03CD  084B               	movf	vfpfcnvrt@fmt,w
  3221     03CE  0086               	movwf	6
  3222     03CF  0187               	clrf	7
  3223     03D0  3001               	movlw	1
  3224     03D1  0781               	addwf	1,f
  3225     03D2  3141               	addfsr 1,1
  3226     03D3  1803               	skipnc
  3227     03D4  0A81               	incf	1,f
  3228     03D5  2BEE               	goto	l861
  3229     03D6                     l1531:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3232     03D6  084B               	movf	vfpfcnvrt@fmt,w
  3233     03D7  0086               	movwf	6
  3234     03D8  0187               	clrf	7
  3235     03D9  3F40               	moviw [0]fsr1
  3236     03DA  00CD               	movwf	??_vfpfcnvrt
  3237     03DB  3F41               	moviw [1]fsr1
  3238     03DC  00CE               	movwf	??_vfpfcnvrt+1
  3239     03DD  084D               	movf	??_vfpfcnvrt,w
  3240     03DE  0084               	movwf	4
  3241     03DF  084E               	movf	??_vfpfcnvrt+1,w
  3242     03E0  0085               	movwf	5
  3243     03E1  0800               	movf	0,w	;code access
  3244     03E2  00CF               	movwf	??_vfpfcnvrt+2
  3245     03E3  01D0               	clrf	??_vfpfcnvrt+3
  3246     03E4  084F               	movf	??_vfpfcnvrt+2,w
  3247     03E5  00F0               	movwf	fputc@c
  3248     03E6  0850               	movf	??_vfpfcnvrt+3,w
  3249     03E7  00F1               	movwf	fputc@c+1
  3250     03E8  0859               	movf	vfpfcnvrt@fp,w
  3251     03E9  00F2               	movwf	fputc@fp
  3252     03EA  3184  2464  3183   	fcall	_fputc
  3253     03ED  2BCC               	goto	l1527
  3254     03EE                     l861:
  3255     03EE  0008               	return
  3256     03EF                     __end_of_vfpfcnvrt:
  3257                           
  3258                           	psect	text4
  3259     0033                     __ptext4:	
  3260 ;; *************** function _dtoa *****************
  3261 ;; Defined at:
  3262 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  fp              1    wreg     PTR struct _IO_FILE
  3265 ;;		 -> sprintf@f(10), 
  3266 ;;  d               8   16[BANK0 ] long long 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  3269 ;;		 -> sprintf@f(10), 
  3270 ;;  n               8   32[BANK0 ] long long 
  3271 ;;  i               2   40[BANK0 ] int 
  3272 ;;  w               2   30[BANK0 ] int 
  3273 ;;  p               2   28[BANK0 ] int 
  3274 ;;  s               1   42[BANK0 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3284 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;Total ram usage:       27 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 5
  3291 ;; This function calls:
  3292 ;;		___aodiv
  3293 ;;		___aomod
  3294 ;;		_abs
  3295 ;;		_pad
  3296 ;; This function is called by:
  3297 ;;		_vfpfcnvrt
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301     0033                     _dtoa:	
  3302                           ;psect for function _dtoa
  3303                           
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3307                           ;dtoa@fp stored from wreg
  3308     0033  0020               	movlb	0	; select bank0
  3309     0034  00BB               	movwf	dtoa@fp
  3310     0035                     l1439:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3313     0035  0830               	movf	dtoa@d,w
  3314     0036  00C0               	movwf	dtoa@n
  3315     0037  0831               	movf	dtoa@d+1,w
  3316     0038  00C1               	movwf	dtoa@n+1
  3317     0039  0832               	movf	dtoa@d+2,w
  3318     003A  00C2               	movwf	dtoa@n+2
  3319     003B  0833               	movf	dtoa@d+3,w
  3320     003C  00C3               	movwf	dtoa@n+3
  3321     003D  0834               	movf	dtoa@d+4,w
  3322     003E  00C4               	movwf	dtoa@n+4
  3323     003F  0835               	movf	dtoa@d+5,w
  3324     0040  00C5               	movwf	dtoa@n+5
  3325     0041  0836               	movf	dtoa@d+6,w
  3326     0042  00C6               	movwf	dtoa@n+6
  3327     0043  0837               	movf	dtoa@d+7,w
  3328     0044  00C7               	movwf	dtoa@n+7
  3329     0045                     l1441:
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3332     0045  3040               	movlw	low dtoa@n
  3333     0046  0086               	movwf	6
  3334     0047  3000               	movlw	high dtoa@n
  3335     0048  0087               	movwf	7
  3336     0049  3F47               	moviw [7]fsr1
  3337     004A  00B8               	movwf	??_dtoa
  3338     004B  1BB8               	btfsc	??_dtoa,7
  3339     004C  284E               	goto	u891
  3340     004D  2850               	goto	u890
  3341     004E                     u891:
  3342     004E  3001               	movlw	1
  3343     004F  2851               	goto	u900
  3344     0050                     u890:
  3345     0050  3000               	movlw	0
  3346     0051                     u900:
  3347     0051  0020               	movlb	0	; select bank0
  3348     0052  00CA               	movwf	dtoa@s
  3349     0053                     l1443:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3352     0053  084A               	movf	dtoa@s,w
  3353     0054  1903               	btfsc	3,2
  3354     0055  2857               	goto	u911
  3355     0056  2858               	goto	u910
  3356     0057                     u911:
  3357     0057  2876               	goto	l1447
  3358     0058                     u910:
  3359     0058                     l1445:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3362     0058  09C0               	comf	dtoa@n,f
  3363     0059  09C1               	comf	dtoa@n+1,f
  3364     005A  09C2               	comf	dtoa@n+2,f
  3365     005B  09C3               	comf	dtoa@n+3,f
  3366     005C  09C4               	comf	dtoa@n+4,f
  3367     005D  09C5               	comf	dtoa@n+5,f
  3368     005E  09C6               	comf	dtoa@n+6,f
  3369     005F  09C7               	comf	dtoa@n+7,f
  3370     0060  0AC0               	incf	dtoa@n,f
  3371     0061  1D03               	skipz
  3372     0062  2876               	goto	u92lld
  3373     0063  0AC1               	incf	dtoa@n+1,f
  3374     0064  1D03               	skipz
  3375     0065  2876               	goto	u92lld
  3376     0066  0AC2               	incf	dtoa@n+2,f
  3377     0067  1D03               	skipz
  3378     0068  2876               	goto	u92lld
  3379     0069  0AC3               	incf	dtoa@n+3,f
  3380     006A  1D03               	skipz
  3381     006B  2876               	goto	u92lld
  3382     006C  0AC4               	incf	dtoa@n+4,f
  3383     006D  1D03               	skipz
  3384     006E  2876               	goto	u92lld
  3385     006F  0AC5               	incf	dtoa@n+5,f
  3386     0070  1D03               	skipz
  3387     0071  2876               	goto	u92lld
  3388     0072  0AC6               	incf	dtoa@n+6,f
  3389     0073  1D03               	skipz
  3390     0074  2876               	goto	u92lld
  3391     0075  0AC7               	incf	dtoa@n+7,f
  3392     0076                     u92lld:
  3393     0076                     l1447:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3396     0076  0020               	movlb	0	; select bank0
  3397     0077  086B               	movf	_prec+1,w
  3398     0078  3A80               	xorlw	128
  3399     0079  00B8               	movwf	??_dtoa
  3400     007A  3080               	movlw	128
  3401     007B  0238               	subwf	??_dtoa,w
  3402     007C  1D03               	skipz
  3403     007D  2880               	goto	u935
  3404     007E  3001               	movlw	1
  3405     007F  026A               	subwf	_prec,w
  3406     0080                     u935:
  3407     0080  1803               	skipnc
  3408     0081  2883               	goto	u931
  3409     0082  2884               	goto	u930
  3410     0083                     u931:
  3411     0083  288A               	goto	l1451
  3412     0084                     u930:
  3413     0084                     l1449:
  3414     0084  3001               	movlw	1
  3415     0085  0020               	movlb	0	; select bank0
  3416     0086  00BC               	movwf	dtoa@p
  3417     0087  3000               	movlw	0
  3418     0088  00BD               	movwf	dtoa@p+1
  3419     0089  288F               	goto	l842
  3420     008A                     l1451:
  3421     008A  0020               	movlb	0	; select bank0
  3422     008B  086B               	movf	_prec+1,w
  3423     008C  00BD               	movwf	dtoa@p+1
  3424     008D  086A               	movf	_prec,w
  3425     008E  00BC               	movwf	dtoa@p
  3426     008F                     l842:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3429     008F  0021               	movlb	1	; select bank1
  3430     0090  0821               	movf	(_width+1)^(0+128),w
  3431     0091  0020               	movlb	0	; select bank0
  3432     0092  00BF               	movwf	dtoa@w+1
  3433     0093  0021               	movlb	1	; select bank1
  3434     0094  0820               	movf	_width^(0+128),w
  3435     0095  0020               	movlb	0	; select bank0
  3436     0096  00BE               	movwf	dtoa@w
  3437     0097                     l1453:
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3440     0097  084A               	movf	dtoa@s,w
  3441     0098  1903               	btfsc	3,2
  3442     0099  289B               	goto	u941
  3443     009A  289C               	goto	u940
  3444     009B                     u941:
  3445     009B  28B0               	goto	l843
  3446     009C                     u940:
  3447     009C                     l1455:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3450     009C  30FF               	movlw	255
  3451     009D  07BE               	addwf	dtoa@w,f
  3452     009E  30FF               	movlw	255
  3453     009F  3DBF               	addwfc	dtoa@w+1,f
  3454     00A0                     l1457:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3457     00A0  084A               	movf	dtoa@s,w
  3458     00A1  1D03               	btfss	3,2
  3459     00A2  28A4               	goto	u951
  3460     00A3  28A5               	goto	u950
  3461     00A4                     u951:
  3462     00A4  28AA               	goto	l1461
  3463     00A5                     u950:
  3464     00A5                     l1459:
  3465     00A5  302B               	movlw	43
  3466     00A6  00B9               	movwf	_dtoa$802
  3467     00A7  3000               	movlw	0
  3468     00A8  00BA               	movwf	_dtoa$802+1
  3469     00A9  28AE               	goto	l847
  3470     00AA                     l1461:
  3471     00AA  302D               	movlw	45
  3472     00AB  00B9               	movwf	_dtoa$802
  3473     00AC  3000               	movlw	0
  3474     00AD  00BA               	movwf	_dtoa$802+1
  3475     00AE                     l847:
  3476     00AE  0839               	movf	_dtoa$802,w
  3477     00AF  00CA               	movwf	dtoa@s
  3478     00B0                     l843:	
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 471:     }
  3480                           
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3483     00B0  301F               	movlw	31
  3484     00B1  00C8               	movwf	dtoa@i
  3485     00B2  3000               	movlw	0
  3486     00B3  00C9               	movwf	dtoa@i+1
  3487     00B4                     l1463:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3490     00B4  0021               	movlb	1	; select bank1
  3491     00B5  01C1               	clrf	(_dbuf^(0+128)+31)
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3494     00B6  291F               	goto	l848
  3495     00B7                     l1465:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3498     00B7  30FF               	movlw	255
  3499     00B8  0020               	movlb	0	; select bank0
  3500     00B9  07C8               	addwf	dtoa@i,f
  3501     00BA  30FF               	movlw	255
  3502     00BB  3DC9               	addwfc	dtoa@i+1,f
  3503     00BC                     l1467:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3506     00BC  300A               	movlw	10
  3507     00BD  00A0               	movwf	___aomod@divisor
  3508     00BE  01A1               	clrf	___aomod@divisor+1
  3509     00BF  01A2               	clrf	___aomod@divisor+2
  3510     00C0  01A3               	clrf	___aomod@divisor+3
  3511     00C1  01A4               	clrf	___aomod@divisor+4
  3512     00C2  01A5               	clrf	___aomod@divisor+5
  3513     00C3  01A6               	clrf	___aomod@divisor+6
  3514     00C4  01A7               	clrf	___aomod@divisor+7
  3515     00C5  0840               	movf	dtoa@n,w
  3516     00C6  00A8               	movwf	___aomod@dividend
  3517     00C7  0841               	movf	dtoa@n+1,w
  3518     00C8  00A9               	movwf	___aomod@dividend+1
  3519     00C9  0842               	movf	dtoa@n+2,w
  3520     00CA  00AA               	movwf	___aomod@dividend+2
  3521     00CB  0843               	movf	dtoa@n+3,w
  3522     00CC  00AB               	movwf	___aomod@dividend+3
  3523     00CD  0844               	movf	dtoa@n+4,w
  3524     00CE  00AC               	movwf	___aomod@dividend+4
  3525     00CF  0845               	movf	dtoa@n+5,w
  3526     00D0  00AD               	movwf	___aomod@dividend+5
  3527     00D1  0846               	movf	dtoa@n+6,w
  3528     00D2  00AE               	movwf	___aomod@dividend+6
  3529     00D3  0847               	movf	dtoa@n+7,w
  3530     00D4  00AF               	movwf	___aomod@dividend+7
  3531     00D5  3182  2264  3180   	fcall	___aomod
  3532     00D8  0020               	movlb	0	; select bank0
  3533     00D9  0821               	movf	?___aomod+1,w
  3534     00DA  00F4               	movwf	abs@a+1
  3535     00DB  0820               	movf	?___aomod,w
  3536     00DC  00F3               	movwf	abs@a
  3537     00DD  3186  2667  3180   	fcall	_abs
  3538     00E0  0873               	movf	?_abs,w
  3539     00E1  3E30               	addlw	48
  3540     00E2  0020               	movlb	0	; select bank0
  3541     00E3  00B8               	movwf	??_dtoa
  3542     00E4  0848               	movf	dtoa@i,w
  3543     00E5  3EA2               	addlw	(low (_dbuf| 0))& (0+255)
  3544     00E6  0086               	movwf	6
  3545     00E7  0187               	clrf	7
  3546     00E8  0838               	movf	??_dtoa,w
  3547     00E9  0081               	movwf	1
  3548     00EA                     l1469:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3551     00EA  30FF               	movlw	255
  3552     00EB  07BC               	addwf	dtoa@p,f
  3553     00EC  30FF               	movlw	255
  3554     00ED  3DBD               	addwfc	dtoa@p+1,f
  3555     00EE                     l1471:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3558     00EE  30FF               	movlw	255
  3559     00EF  07BE               	addwf	dtoa@w,f
  3560     00F0  30FF               	movlw	255
  3561     00F1  3DBF               	addwfc	dtoa@w+1,f
  3562     00F2                     l1473:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3565     00F2  300A               	movlw	10
  3566     00F3  00A0               	movwf	___aodiv@divisor
  3567     00F4  01A1               	clrf	___aodiv@divisor+1
  3568     00F5  01A2               	clrf	___aodiv@divisor+2
  3569     00F6  01A3               	clrf	___aodiv@divisor+3
  3570     00F7  01A4               	clrf	___aodiv@divisor+4
  3571     00F8  01A5               	clrf	___aodiv@divisor+5
  3572     00F9  01A6               	clrf	___aodiv@divisor+6
  3573     00FA  01A7               	clrf	___aodiv@divisor+7
  3574     00FB  0840               	movf	dtoa@n,w
  3575     00FC  00A8               	movwf	___aodiv@dividend
  3576     00FD  0841               	movf	dtoa@n+1,w
  3577     00FE  00A9               	movwf	___aodiv@dividend+1
  3578     00FF  0842               	movf	dtoa@n+2,w
  3579     0100  00AA               	movwf	___aodiv@dividend+2
  3580     0101  0843               	movf	dtoa@n+3,w
  3581     0102  00AB               	movwf	___aodiv@dividend+3
  3582     0103  0844               	movf	dtoa@n+4,w
  3583     0104  00AC               	movwf	___aodiv@dividend+4
  3584     0105  0845               	movf	dtoa@n+5,w
  3585     0106  00AD               	movwf	___aodiv@dividend+5
  3586     0107  0846               	movf	dtoa@n+6,w
  3587     0108  00AE               	movwf	___aodiv@dividend+6
  3588     0109  0847               	movf	dtoa@n+7,w
  3589     010A  00AF               	movwf	___aodiv@dividend+7
  3590     010B  3181  2163  3180   	fcall	___aodiv
  3591     010E  0020               	movlb	0	; select bank0
  3592     010F  0820               	movf	?___aodiv,w
  3593     0110  00C0               	movwf	dtoa@n
  3594     0111  0821               	movf	?___aodiv+1,w
  3595     0112  00C1               	movwf	dtoa@n+1
  3596     0113  0822               	movf	?___aodiv+2,w
  3597     0114  00C2               	movwf	dtoa@n+2
  3598     0115  0823               	movf	?___aodiv+3,w
  3599     0116  00C3               	movwf	dtoa@n+3
  3600     0117  0824               	movf	?___aodiv+4,w
  3601     0118  00C4               	movwf	dtoa@n+4
  3602     0119  0825               	movf	?___aodiv+5,w
  3603     011A  00C5               	movwf	dtoa@n+5
  3604     011B  0826               	movf	?___aodiv+6,w
  3605     011C  00C6               	movwf	dtoa@n+6
  3606     011D  0827               	movf	?___aodiv+7,w
  3607     011E  00C7               	movwf	dtoa@n+7
  3608     011F                     l848:	
  3609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 492:     }
  3610                           
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3613     011F  0020               	movlb	0	; select bank0
  3614     0120  0849               	movf	dtoa@i+1,w
  3615     0121  3A80               	xorlw	128
  3616     0122  00B8               	movwf	??_dtoa
  3617     0123  3080               	movlw	128
  3618     0124  0238               	subwf	??_dtoa,w
  3619     0125  1D03               	skipz
  3620     0126  2929               	goto	u965
  3621     0127  3001               	movlw	1
  3622     0128  0248               	subwf	dtoa@i,w
  3623     0129                     u965:
  3624     0129  1C03               	skipc
  3625     012A  292C               	goto	u961
  3626     012B  292D               	goto	u960
  3627     012C                     u961:
  3628     012C  2947               	goto	l1479
  3629     012D                     u960:
  3630     012D                     l1475:
  3631     012D  0020               	movlb	0	; select bank0
  3632     012E  0840               	movf	dtoa@n,w
  3633     012F  0441               	iorwf	dtoa@n+1,w
  3634     0130  0442               	iorwf	dtoa@n+2,w
  3635     0131  0443               	iorwf	dtoa@n+3,w
  3636     0132  0444               	iorwf	dtoa@n+4,w
  3637     0133  0445               	iorwf	dtoa@n+5,w
  3638     0134  0446               	iorwf	dtoa@n+6,w
  3639     0135  0447               	iorwf	dtoa@n+7,w
  3640     0136  1D03               	skipz
  3641     0137  2939               	goto	u971
  3642     0138  293A               	goto	u970
  3643     0139                     u971:
  3644     0139  28B7               	goto	l1465
  3645     013A                     u970:
  3646     013A                     l1477:
  3647     013A  083D               	movf	dtoa@p+1,w
  3648     013B  3A80               	xorlw	128
  3649     013C  00B8               	movwf	??_dtoa
  3650     013D  3080               	movlw	128
  3651     013E  0238               	subwf	??_dtoa,w
  3652     013F  1D03               	skipz
  3653     0140  2943               	goto	u985
  3654     0141  3001               	movlw	1
  3655     0142  023C               	subwf	dtoa@p,w
  3656     0143                     u985:
  3657     0143  1803               	skipnc
  3658     0144  2946               	goto	u981
  3659     0145  2947               	goto	u980
  3660     0146                     u981:
  3661     0146  28B7               	goto	l1465
  3662     0147                     u980:
  3663     0147                     l1479:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3666     0147  0020               	movlb	0	; select bank0
  3667     0148  084A               	movf	dtoa@s,w
  3668     0149  1903               	btfsc	3,2
  3669     014A  294C               	goto	u991
  3670     014B  294D               	goto	u990
  3671     014C                     u991:
  3672     014C  2957               	goto	l1485
  3673     014D                     u990:
  3674     014D                     l1481:
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3677     014D  30FF               	movlw	255
  3678     014E  07C8               	addwf	dtoa@i,f
  3679     014F  30FF               	movlw	255
  3680     0150  3DC9               	addwfc	dtoa@i+1,f
  3681     0151                     l1483:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3684     0151  0848               	movf	dtoa@i,w
  3685     0152  3EA2               	addlw	(low (_dbuf| 0))& (0+255)
  3686     0153  0086               	movwf	6
  3687     0154  0187               	clrf	7
  3688     0155  084A               	movf	dtoa@s,w
  3689     0156  0081               	movwf	1
  3690     0157                     l1485:
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3693     0157  0848               	movf	dtoa@i,w
  3694     0158  3EA2               	addlw	(low (_dbuf| 0))& (0+255)
  3695     0159  00FB               	movwf	pad@buf
  3696     015A  083F               	movf	dtoa@w+1,w
  3697     015B  00FD               	movwf	pad@p+1
  3698     015C  083E               	movf	dtoa@w,w
  3699     015D  00FC               	movwf	pad@p
  3700     015E  083B               	movf	dtoa@fp,w
  3701     015F  3185  2546  3180   	fcall	_pad
  3702     0162                     l854:
  3703     0162  0008               	return
  3704     0163                     __end_of_dtoa:
  3705                           
  3706                           	psect	text5
  3707     0546                     __ptext5:	
  3708 ;; *************** function _pad *****************
  3709 ;; Defined at:
  3710 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  fp              1    wreg     PTR struct _IO_FILE
  3713 ;;		 -> sprintf@f(10), 
  3714 ;;  buf             1   11[COMMON] PTR unsigned char 
  3715 ;;		 -> dbuf(32), 
  3716 ;;  p               2   12[COMMON] int 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  3719 ;;		 -> sprintf@f(10), 
  3720 ;;  w               2    7[BANK0 ] int 
  3721 ;;  i               2    5[BANK0 ] int 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3731 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3732 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;Total ram usage:        9 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 4
  3738 ;; This function calls:
  3739 ;;		_fputc
  3740 ;;		_fputs
  3741 ;; This function is called by:
  3742 ;;		_dtoa
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746     0546                     _pad:	
  3747                           ;psect for function _pad
  3748                           
  3749                           
  3750                           ;incstack = 0
  3751                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3752                           ;pad@fp stored from wreg
  3753     0546  0020               	movlb	0	; select bank0
  3754     0547  00A9               	movwf	pad@fp
  3755     0548                     l1421:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3758     0548  1BFD               	btfsc	pad@p+1,7
  3759     0549  2D4B               	goto	u861
  3760     054A  2D4C               	goto	u860
  3761     054B                     u861:
  3762     054B  2D51               	goto	l1425
  3763     054C                     u860:
  3764     054C                     l1423:
  3765     054C  087D               	movf	pad@p+1,w
  3766     054D  00A8               	movwf	pad@w+1
  3767     054E  087C               	movf	pad@p,w
  3768     054F  00A7               	movwf	pad@w
  3769     0550  2D53               	goto	l831
  3770     0551                     l1425:
  3771     0551  01A7               	clrf	pad@w
  3772     0552  01A8               	clrf	pad@w+1
  3773     0553                     l831:
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3776     0553  01A5               	clrf	pad@i
  3777     0554  01A6               	clrf	pad@i+1
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3780     0555  2D65               	goto	l1431
  3781     0556                     l1427:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3784     0556  3020               	movlw	32
  3785     0557  00F0               	movwf	fputc@c
  3786     0558  3000               	movlw	0
  3787     0559  00F1               	movwf	fputc@c+1
  3788     055A  0020               	movlb	0	; select bank0
  3789     055B  0829               	movf	pad@fp,w
  3790     055C  00F2               	movwf	fputc@fp
  3791     055D  3184  2464  3185   	fcall	_fputc
  3792     0560                     l1429:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3795     0560  3001               	movlw	1
  3796     0561  0020               	movlb	0	; select bank0
  3797     0562  07A5               	addwf	pad@i,f
  3798     0563  3000               	movlw	0
  3799     0564  3DA6               	addwfc	pad@i+1,f
  3800     0565                     l1431:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3803     0565  0826               	movf	pad@i+1,w
  3804     0566  3A80               	xorlw	128
  3805     0567  00A4               	movwf	??_pad
  3806     0568  0828               	movf	pad@w+1,w
  3807     0569  3A80               	xorlw	128
  3808     056A  0224               	subwf	??_pad,w
  3809     056B  1D03               	skipz
  3810     056C  2D6F               	goto	u875
  3811     056D  0827               	movf	pad@w,w
  3812     056E  0225               	subwf	pad@i,w
  3813     056F                     u875:
  3814     056F  1C03               	skipc
  3815     0570  2D72               	goto	u871
  3816     0571  2D73               	goto	u870
  3817     0572                     u871:
  3818     0572  2D56               	goto	l1427
  3819     0573                     u870:
  3820     0573                     l1433:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3823     0573  0020               	movlb	0	; select bank0
  3824     0574  0829               	movf	pad@fp,w
  3825     0575  00F8               	movwf	fputs@fp
  3826     0576  087B               	movf	pad@buf,w
  3827     0577  3185  25CA  3185   	fcall	_fputs
  3828     057A                     l835:
  3829     057A  0008               	return
  3830     057B                     __end_of_pad:
  3831                           
  3832                           	psect	text6
  3833     05CA                     __ptext6:	
  3834 ;; *************** function _fputs *****************
  3835 ;; Defined at:
  3836 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  s               1    wreg     PTR const unsigned char 
  3839 ;;		 -> dbuf(32), 
  3840 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3841 ;;		 -> sprintf@f(10), 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3844 ;;		 -> dbuf(32), 
  3845 ;;  i               2    1[BANK0 ] int 
  3846 ;;  c               1    0[BANK0 ] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  2    8[COMMON] int 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3856 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;Total ram usage:        7 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 3
  3863 ;; This function calls:
  3864 ;;		_fputc
  3865 ;; This function is called by:
  3866 ;;		_pad
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870     05CA                     _fputs:	
  3871                           ;psect for function _fputs
  3872                           
  3873                           
  3874                           ;incstack = 0
  3875                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3876                           ;fputs@s stored from wreg
  3877     05CA  0020               	movlb	0	; select bank0
  3878     05CB  00A3               	movwf	fputs@s
  3879     05CC                     l1345:
  3880     05CC  01A1               	clrf	fputs@i
  3881     05CD  01A2               	clrf	fputs@i+1
  3882     05CE  2DE0               	goto	l1351
  3883     05CF                     l1347:
  3884     05CF  0820               	movf	fputs@c,w
  3885     05D0  00F9               	movwf	??_fputs
  3886     05D1  01FA               	clrf	??_fputs+1
  3887     05D2  0879               	movf	??_fputs,w
  3888     05D3  00F0               	movwf	fputc@c
  3889     05D4  087A               	movf	??_fputs+1,w
  3890     05D5  00F1               	movwf	fputc@c+1
  3891     05D6  0878               	movf	fputs@fp,w
  3892     05D7  00F2               	movwf	fputc@fp
  3893     05D8  3184  2464  3185   	fcall	_fputc
  3894     05DB                     l1349:
  3895     05DB  3001               	movlw	1
  3896     05DC  0020               	movlb	0	; select bank0
  3897     05DD  07A1               	addwf	fputs@i,f
  3898     05DE  3000               	movlw	0
  3899     05DF  3DA2               	addwfc	fputs@i+1,f
  3900     05E0                     l1351:
  3901     05E0  0821               	movf	fputs@i,w
  3902     05E1  0723               	addwf	fputs@s,w
  3903     05E2  00F9               	movwf	??_fputs
  3904     05E3  0879               	movf	??_fputs,w
  3905     05E4  0086               	movwf	6
  3906     05E5  0187               	clrf	7
  3907     05E6  0801               	movf	1,w
  3908     05E7  00A0               	movwf	fputs@c
  3909     05E8  0820               	movf	fputs@c,w
  3910     05E9  1D03               	btfss	3,2
  3911     05EA  2DEC               	goto	u641
  3912     05EB  2DED               	goto	u640
  3913     05EC                     u641:
  3914     05EC  2DCF               	goto	l1347
  3915     05ED                     u640:
  3916     05ED                     l894:
  3917     05ED  0008               	return
  3918     05EE                     __end_of_fputs:
  3919                           
  3920                           	psect	text7
  3921     0464                     __ptext7:	
  3922 ;; *************** function _fputc *****************
  3923 ;; Defined at:
  3924 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  c               2    0[COMMON] int 
  3927 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3928 ;;		 -> sprintf@f(10), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2    0[COMMON] int 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3940 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;Total ram usage:        8 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 2
  3947 ;; This function calls:
  3948 ;;		_putch
  3949 ;; This function is called by:
  3950 ;;		_pad
  3951 ;;		_vfpfcnvrt
  3952 ;;		_fputs
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956     0464                     _fputc:	
  3957                           ;psect for function _fputc
  3958                           
  3959     0464                     l1329:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3962                           
  3963     0464  0872               	movf	fputc@fp,w
  3964     0465  1903               	btfsc	3,2
  3965     0466  2C68               	goto	u601
  3966     0467  2C69               	goto	u600
  3967     0468                     u601:
  3968     0468  2C6E               	goto	l1333
  3969     0469                     u600:
  3970     0469                     l1331:
  3971     0469  0872               	movf	fputc@fp,w
  3972     046A  1D03               	btfss	3,2
  3973     046B  2C6D               	goto	u611
  3974     046C  2C6E               	goto	u610
  3975     046D                     u611:
  3976     046D  2C73               	goto	l1335
  3977     046E                     u610:
  3978     046E                     l1333:
  3979     046E  0870               	movf	fputc@c,w
  3980     046F  3186  26CB  3184   	fcall	_putch
  3981     0472  2CB3               	goto	l886
  3982     0473                     l1335:
  3983     0473  0872               	movf	fputc@fp,w
  3984     0474  3E08               	addlw	8
  3985     0475  0086               	movwf	6
  3986     0476  0187               	clrf	7
  3987     0477  0016               	moviw fsr1++
  3988     0478  0401               	iorwf	1,w
  3989     0479  1903               	btfsc	3,2
  3990     047A  2C7C               	goto	u621
  3991     047B  2C7D               	goto	u620
  3992     047C                     u621:
  3993     047C  2C9B               	goto	l1339
  3994     047D                     u620:
  3995     047D                     l1337:
  3996     047D  0872               	movf	fputc@fp,w
  3997     047E  3E08               	addlw	8
  3998     047F  0086               	movwf	6
  3999     0480  0187               	clrf	7
  4000     0481  3F40               	moviw [0]fsr1
  4001     0482  00F3               	movwf	??_fputc
  4002     0483  3F41               	moviw [1]fsr1
  4003     0484  00F4               	movwf	??_fputc+1
  4004     0485  0872               	movf	fputc@fp,w
  4005     0486  3E02               	addlw	2
  4006     0487  0086               	movwf	6
  4007     0488  0187               	clrf	7
  4008     0489  3F40               	moviw [0]fsr1
  4009     048A  00F5               	movwf	??_fputc+2
  4010     048B  3F41               	moviw [1]fsr1
  4011     048C  00F6               	movwf	??_fputc+3
  4012     048D  0876               	movf	??_fputc+3,w
  4013     048E  3A80               	xorlw	128
  4014     048F  00F7               	movwf	??_fputc+4
  4015     0490  0874               	movf	??_fputc+1,w
  4016     0491  3A80               	xorlw	128
  4017     0492  0277               	subwf	??_fputc+4,w
  4018     0493  1D03               	skipz
  4019     0494  2C97               	goto	u635
  4020     0495  0873               	movf	??_fputc,w
  4021     0496  0275               	subwf	??_fputc+2,w
  4022     0497                     u635:
  4023     0497  1803               	skipnc
  4024     0498  2C9A               	goto	u631
  4025     0499  2C9B               	goto	u630
  4026     049A                     u631:
  4027     049A  2CB3               	goto	l886
  4028     049B                     u630:
  4029     049B                     l1339:
  4030     049B  0872               	movf	fputc@fp,w
  4031     049C  0086               	movwf	6
  4032     049D  0187               	clrf	7
  4033     049E  0872               	movf	fputc@fp,w
  4034     049F  3E02               	addlw	2
  4035     04A0  0084               	movwf	4
  4036     04A1  0185               	clrf	5
  4037     04A2  0800               	movf	0,w
  4038     04A3  0701               	addwf	1,w
  4039     04A4  00F3               	movwf	??_fputc
  4040     04A5  0873               	movf	??_fputc,w
  4041     04A6  0086               	movwf	6
  4042     04A7  0187               	clrf	7
  4043     04A8  0870               	movf	fputc@c,w
  4044     04A9  0081               	movwf	1
  4045     04AA                     l1341:
  4046     04AA  0872               	movf	fputc@fp,w
  4047     04AB  3E02               	addlw	2
  4048     04AC  0086               	movwf	6
  4049     04AD  0187               	clrf	7
  4050     04AE  3001               	movlw	1
  4051     04AF  0781               	addwf	1,f
  4052     04B0  3141               	addfsr 1,1
  4053     04B1  1803               	skipnc
  4054     04B2  0A81               	incf	1,f
  4055     04B3                     l886:
  4056     04B3  0008               	return
  4057     04B4                     __end_of_fputc:
  4058                           
  4059                           	psect	text8
  4060     06CB                     __ptext8:	
  4061 ;; *************** function _putch *****************
  4062 ;; Defined at:
  4063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  c               1    wreg     unsigned char 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  c               1    0[COMMON] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		wreg
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; Hardware stack levels required when called: 1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_fputc
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091     06CB                     _putch:	
  4092                           ;psect for function _putch
  4093                           
  4094     06CB                     l897:	
  4095                           ;incstack = 0
  4096                           ; Regs used in _putch: [wreg]
  4097                           
  4098     06CB  0008               	return
  4099     06CC                     __end_of_putch:
  4100                           
  4101                           	psect	text9
  4102     0667                     __ptext9:	
  4103 ;; *************** function _abs *****************
  4104 ;; Defined at:
  4105 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  a               2    3[COMMON] int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  2    3[COMMON] int 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;Total ram usage:        4 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_dtoa
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133     0667                     _abs:	
  4134                           ;psect for function _abs
  4135                           
  4136     0667                     l1435:	
  4137                           ;incstack = 0
  4138                           ; Regs used in _abs: [wreg+status,2+status,0]
  4139                           
  4140     0667  0874               	movf	abs@a+1,w
  4141     0668  3A80               	xorlw	128
  4142     0669  00F5               	movwf	??_abs
  4143     066A  3080               	movlw	128
  4144     066B  0275               	subwf	??_abs,w
  4145     066C  1D03               	skipz
  4146     066D  2E70               	goto	u885
  4147     066E  3001               	movlw	1
  4148     066F  0273               	subwf	abs@a,w
  4149     0670                     u885:
  4150     0670  1803               	skipnc
  4151     0671  2E73               	goto	u881
  4152     0672  2E74               	goto	u880
  4153     0673                     u881:
  4154     0673  2E80               	goto	l871
  4155     0674                     u880:
  4156     0674                     l1437:
  4157     0674  0973               	comf	abs@a,w
  4158     0675  00F5               	movwf	??_abs
  4159     0676  0974               	comf	abs@a+1,w
  4160     0677  00F6               	movwf	??_abs+1
  4161     0678  0AF5               	incf	??_abs,f
  4162     0679  1903               	skipnz
  4163     067A  0AF6               	incf	??_abs+1,f
  4164     067B  0875               	movf	??_abs,w
  4165     067C  00F3               	movwf	?_abs
  4166     067D  0876               	movf	??_abs+1,w
  4167     067E  00F4               	movwf	?_abs+1
  4168     067F  2E80               	goto	l874
  4169     0680                     l871:
  4170     0680                     l874:
  4171     0680  0008               	return
  4172     0681                     __end_of_abs:
  4173                           
  4174                           	psect	text10
  4175     0264                     __ptext10:	
  4176 ;; *************** function ___aomod *****************
  4177 ;; Defined at:
  4178 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  divisor         8    0[BANK0 ] long long 
  4181 ;;  dividend        8    8[BANK0 ] long long 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  sign            1    2[COMMON] unsigned char 
  4184 ;;  counter         1    1[COMMON] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  8    0[BANK0 ] long long 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4194 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;Total ram usage:       19 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_dtoa
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208     0264                     ___aomod:	
  4209                           ;psect for function ___aomod
  4210                           
  4211     0264                     l1391:	
  4212                           ;incstack = 0
  4213                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4214                           
  4215     0264  01F2               	clrf	___aomod@sign
  4216     0265                     l1393:
  4217     0265  3028               	movlw	low ___aomod@dividend
  4218     0266  0086               	movwf	6
  4219     0267  3000               	movlw	high ___aomod@dividend
  4220     0268  0087               	movwf	7
  4221     0269  3F47               	moviw [7]fsr1
  4222     026A  00F0               	movwf	??___aomod
  4223     026B  1FF0               	btfss	??___aomod,7
  4224     026C  2A6E               	goto	u761
  4225     026D  2A6F               	goto	u760
  4226     026E                     u761:
  4227     026E  2A90               	goto	l1397
  4228     026F                     u760:
  4229     026F                     l1395:
  4230     026F  0020               	movlb	0	; select bank0
  4231     0270  09A8               	comf	___aomod@dividend,f
  4232     0271  09A9               	comf	___aomod@dividend+1,f
  4233     0272  09AA               	comf	___aomod@dividend+2,f
  4234     0273  09AB               	comf	___aomod@dividend+3,f
  4235     0274  09AC               	comf	___aomod@dividend+4,f
  4236     0275  09AD               	comf	___aomod@dividend+5,f
  4237     0276  09AE               	comf	___aomod@dividend+6,f
  4238     0277  09AF               	comf	___aomod@dividend+7,f
  4239     0278  0AA8               	incf	___aomod@dividend,f
  4240     0279  1D03               	skipz
  4241     027A  2A8E               	goto	u77lld
  4242     027B  0AA9               	incf	___aomod@dividend+1,f
  4243     027C  1D03               	skipz
  4244     027D  2A8E               	goto	u77lld
  4245     027E  0AAA               	incf	___aomod@dividend+2,f
  4246     027F  1D03               	skipz
  4247     0280  2A8E               	goto	u77lld
  4248     0281  0AAB               	incf	___aomod@dividend+3,f
  4249     0282  1D03               	skipz
  4250     0283  2A8E               	goto	u77lld
  4251     0284  0AAC               	incf	___aomod@dividend+4,f
  4252     0285  1D03               	skipz
  4253     0286  2A8E               	goto	u77lld
  4254     0287  0AAD               	incf	___aomod@dividend+5,f
  4255     0288  1D03               	skipz
  4256     0289  2A8E               	goto	u77lld
  4257     028A  0AAE               	incf	___aomod@dividend+6,f
  4258     028B  1D03               	skipz
  4259     028C  2A8E               	goto	u77lld
  4260     028D  0AAF               	incf	___aomod@dividend+7,f
  4261     028E                     u77lld:
  4262     028E  01F2               	clrf	___aomod@sign
  4263     028F  0AF2               	incf	___aomod@sign,f
  4264     0290                     l1397:
  4265     0290  3020               	movlw	low ___aomod@divisor
  4266     0291  0086               	movwf	6
  4267     0292  3000               	movlw	high ___aomod@divisor
  4268     0293  0087               	movwf	7
  4269     0294  3F47               	moviw [7]fsr1
  4270     0295  00F0               	movwf	??___aomod
  4271     0296  1FF0               	btfss	??___aomod,7
  4272     0297  2A99               	goto	u781
  4273     0298  2A9A               	goto	u780
  4274     0299                     u781:
  4275     0299  2AB9               	goto	l1401
  4276     029A                     u780:
  4277     029A                     l1399:
  4278     029A  0020               	movlb	0	; select bank0
  4279     029B  09A0               	comf	___aomod@divisor,f
  4280     029C  09A1               	comf	___aomod@divisor+1,f
  4281     029D  09A2               	comf	___aomod@divisor+2,f
  4282     029E  09A3               	comf	___aomod@divisor+3,f
  4283     029F  09A4               	comf	___aomod@divisor+4,f
  4284     02A0  09A5               	comf	___aomod@divisor+5,f
  4285     02A1  09A6               	comf	___aomod@divisor+6,f
  4286     02A2  09A7               	comf	___aomod@divisor+7,f
  4287     02A3  0AA0               	incf	___aomod@divisor,f
  4288     02A4  1D03               	skipz
  4289     02A5  2AB9               	goto	u79lld
  4290     02A6  0AA1               	incf	___aomod@divisor+1,f
  4291     02A7  1D03               	skipz
  4292     02A8  2AB9               	goto	u79lld
  4293     02A9  0AA2               	incf	___aomod@divisor+2,f
  4294     02AA  1D03               	skipz
  4295     02AB  2AB9               	goto	u79lld
  4296     02AC  0AA3               	incf	___aomod@divisor+3,f
  4297     02AD  1D03               	skipz
  4298     02AE  2AB9               	goto	u79lld
  4299     02AF  0AA4               	incf	___aomod@divisor+4,f
  4300     02B0  1D03               	skipz
  4301     02B1  2AB9               	goto	u79lld
  4302     02B2  0AA5               	incf	___aomod@divisor+5,f
  4303     02B3  1D03               	skipz
  4304     02B4  2AB9               	goto	u79lld
  4305     02B5  0AA6               	incf	___aomod@divisor+6,f
  4306     02B6  1D03               	skipz
  4307     02B7  2AB9               	goto	u79lld
  4308     02B8  0AA7               	incf	___aomod@divisor+7,f
  4309     02B9                     u79lld:
  4310     02B9                     l1401:
  4311     02B9  0020               	movlb	0	; select bank0
  4312     02BA  0820               	movf	___aomod@divisor,w
  4313     02BB  0421               	iorwf	___aomod@divisor+1,w
  4314     02BC  0422               	iorwf	___aomod@divisor+2,w
  4315     02BD  0423               	iorwf	___aomod@divisor+3,w
  4316     02BE  0424               	iorwf	___aomod@divisor+4,w
  4317     02BF  0425               	iorwf	___aomod@divisor+5,w
  4318     02C0  0426               	iorwf	___aomod@divisor+6,w
  4319     02C1  0427               	iorwf	___aomod@divisor+7,w
  4320     02C2  1903               	skipnz
  4321     02C3  2AC5               	goto	u801
  4322     02C4  2AC6               	goto	u800
  4323     02C5                     u801:
  4324     02C5  2B19               	goto	l1417
  4325     02C6                     u800:
  4326     02C6                     l1403:
  4327     02C6  01F1               	clrf	___aomod@counter
  4328     02C7  0AF1               	incf	___aomod@counter,f
  4329     02C8  2AD5               	goto	l1409
  4330     02C9                     l1405:
  4331     02C9  35A0               	lslf	___aomod@divisor,f
  4332     02CA  0DA1               	rlf	___aomod@divisor+1,f
  4333     02CB  0DA2               	rlf	___aomod@divisor+2,f
  4334     02CC  0DA3               	rlf	___aomod@divisor+3,f
  4335     02CD  0DA4               	rlf	___aomod@divisor+4,f
  4336     02CE  0DA5               	rlf	___aomod@divisor+5,f
  4337     02CF  0DA6               	rlf	___aomod@divisor+6,f
  4338     02D0  0DA7               	rlf	___aomod@divisor+7,f
  4339     02D1                     l1407:
  4340     02D1  3001               	movlw	1
  4341     02D2  00F0               	movwf	??___aomod
  4342     02D3  0870               	movf	??___aomod,w
  4343     02D4  07F1               	addwf	___aomod@counter,f
  4344     02D5                     l1409:
  4345     02D5  1FA7               	btfss	___aomod@divisor+7,7
  4346     02D6  2AD8               	goto	u811
  4347     02D7  2AD9               	goto	u810
  4348     02D8                     u811:
  4349     02D8  2AC9               	goto	l1405
  4350     02D9                     u810:
  4351     02D9                     l1411:
  4352     02D9  0827               	movf	___aomod@divisor+7,w
  4353     02DA  022F               	subwf	___aomod@dividend+7,w
  4354     02DB  1D03               	skipz
  4355     02DC  2AF7               	goto	u825
  4356     02DD  0826               	movf	___aomod@divisor+6,w
  4357     02DE  022E               	subwf	___aomod@dividend+6,w
  4358     02DF  1D03               	skipz
  4359     02E0  2AF7               	goto	u825
  4360     02E1  0825               	movf	___aomod@divisor+5,w
  4361     02E2  022D               	subwf	___aomod@dividend+5,w
  4362     02E3  1D03               	skipz
  4363     02E4  2AF7               	goto	u825
  4364     02E5  0824               	movf	___aomod@divisor+4,w
  4365     02E6  022C               	subwf	___aomod@dividend+4,w
  4366     02E7  1D03               	skipz
  4367     02E8  2AF7               	goto	u825
  4368     02E9  0823               	movf	___aomod@divisor+3,w
  4369     02EA  022B               	subwf	___aomod@dividend+3,w
  4370     02EB  1D03               	skipz
  4371     02EC  2AF7               	goto	u825
  4372     02ED  0822               	movf	___aomod@divisor+2,w
  4373     02EE  022A               	subwf	___aomod@dividend+2,w
  4374     02EF  1D03               	skipz
  4375     02F0  2AF7               	goto	u825
  4376     02F1  0821               	movf	___aomod@divisor+1,w
  4377     02F2  0229               	subwf	___aomod@dividend+1,w
  4378     02F3  1D03               	skipz
  4379     02F4  2AF7               	goto	u825
  4380     02F5  0820               	movf	___aomod@divisor,w
  4381     02F6  0228               	subwf	___aomod@dividend,w
  4382     02F7                     u825:
  4383     02F7  1C03               	skipc
  4384     02F8  2AFA               	goto	u821
  4385     02F9  2AFB               	goto	u820
  4386     02FA                     u821:
  4387     02FA  2B0B               	goto	l1415
  4388     02FB                     u820:
  4389     02FB                     l1413:
  4390     02FB  0820               	movf	___aomod@divisor,w
  4391     02FC  02A8               	subwf	___aomod@dividend,f
  4392     02FD  0821               	movf	___aomod@divisor+1,w
  4393     02FE  3BA9               	subwfb	___aomod@dividend+1,f
  4394     02FF  0822               	movf	___aomod@divisor+2,w
  4395     0300  3BAA               	subwfb	___aomod@dividend+2,f
  4396     0301  0823               	movf	___aomod@divisor+3,w
  4397     0302  3BAB               	subwfb	___aomod@dividend+3,f
  4398     0303  0824               	movf	___aomod@divisor+4,w
  4399     0304  3BAC               	subwfb	___aomod@dividend+4,f
  4400     0305  0825               	movf	___aomod@divisor+5,w
  4401     0306  3BAD               	subwfb	___aomod@dividend+5,f
  4402     0307  0826               	movf	___aomod@divisor+6,w
  4403     0308  3BAE               	subwfb	___aomod@dividend+6,f
  4404     0309  0827               	movf	___aomod@divisor+7,w
  4405     030A  3BAF               	subwfb	___aomod@dividend+7,f
  4406     030B                     l1415:
  4407     030B  36A7               	lsrf	___aomod@divisor+7,f
  4408     030C  0CA6               	rrf	___aomod@divisor+6,f
  4409     030D  0CA5               	rrf	___aomod@divisor+5,f
  4410     030E  0CA4               	rrf	___aomod@divisor+4,f
  4411     030F  0CA3               	rrf	___aomod@divisor+3,f
  4412     0310  0CA2               	rrf	___aomod@divisor+2,f
  4413     0311  0CA1               	rrf	___aomod@divisor+1,f
  4414     0312  0CA0               	rrf	___aomod@divisor,f
  4415     0313  3001               	movlw	1
  4416     0314  02F1               	subwf	___aomod@counter,f
  4417     0315  1D03               	btfss	3,2
  4418     0316  2B18               	goto	u831
  4419     0317  2B19               	goto	u830
  4420     0318                     u831:
  4421     0318  2AD9               	goto	l1411
  4422     0319                     u830:
  4423     0319                     l1417:
  4424     0319  0872               	movf	___aomod@sign,w
  4425     031A  1903               	btfsc	3,2
  4426     031B  2B1D               	goto	u841
  4427     031C  2B1E               	goto	u840
  4428     031D                     u841:
  4429     031D  2B3C               	goto	l459
  4430     031E                     u840:
  4431     031E                     l1419:
  4432     031E  09A8               	comf	___aomod@dividend,f
  4433     031F  09A9               	comf	___aomod@dividend+1,f
  4434     0320  09AA               	comf	___aomod@dividend+2,f
  4435     0321  09AB               	comf	___aomod@dividend+3,f
  4436     0322  09AC               	comf	___aomod@dividend+4,f
  4437     0323  09AD               	comf	___aomod@dividend+5,f
  4438     0324  09AE               	comf	___aomod@dividend+6,f
  4439     0325  09AF               	comf	___aomod@dividend+7,f
  4440     0326  0AA8               	incf	___aomod@dividend,f
  4441     0327  1D03               	skipz
  4442     0328  2B3C               	goto	u85lld
  4443     0329  0AA9               	incf	___aomod@dividend+1,f
  4444     032A  1D03               	skipz
  4445     032B  2B3C               	goto	u85lld
  4446     032C  0AAA               	incf	___aomod@dividend+2,f
  4447     032D  1D03               	skipz
  4448     032E  2B3C               	goto	u85lld
  4449     032F  0AAB               	incf	___aomod@dividend+3,f
  4450     0330  1D03               	skipz
  4451     0331  2B3C               	goto	u85lld
  4452     0332  0AAC               	incf	___aomod@dividend+4,f
  4453     0333  1D03               	skipz
  4454     0334  2B3C               	goto	u85lld
  4455     0335  0AAD               	incf	___aomod@dividend+5,f
  4456     0336  1D03               	skipz
  4457     0337  2B3C               	goto	u85lld
  4458     0338  0AAE               	incf	___aomod@dividend+6,f
  4459     0339  1D03               	skipz
  4460     033A  2B3C               	goto	u85lld
  4461     033B  0AAF               	incf	___aomod@dividend+7,f
  4462     033C                     u85lld:
  4463     033C                     l459:
  4464     033C  0020               	movlb	0	; select bank0
  4465     033D  0828               	movf	___aomod@dividend,w
  4466     033E  00A0               	movwf	?___aomod
  4467     033F  0829               	movf	___aomod@dividend+1,w
  4468     0340  00A1               	movwf	?___aomod+1
  4469     0341  082A               	movf	___aomod@dividend+2,w
  4470     0342  00A2               	movwf	?___aomod+2
  4471     0343  082B               	movf	___aomod@dividend+3,w
  4472     0344  00A3               	movwf	?___aomod+3
  4473     0345  082C               	movf	___aomod@dividend+4,w
  4474     0346  00A4               	movwf	?___aomod+4
  4475     0347  082D               	movf	___aomod@dividend+5,w
  4476     0348  00A5               	movwf	?___aomod+5
  4477     0349  082E               	movf	___aomod@dividend+6,w
  4478     034A  00A6               	movwf	?___aomod+6
  4479     034B  082F               	movf	___aomod@dividend+7,w
  4480     034C  00A7               	movwf	?___aomod+7
  4481     034D                     l460:
  4482     034D  0008               	return
  4483     034E                     __end_of___aomod:
  4484                           
  4485                           	psect	text11
  4486     0163                     __ptext11:	
  4487 ;; *************** function ___aodiv *****************
  4488 ;; Defined at:
  4489 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  divisor         8    0[BANK0 ] long long 
  4492 ;;  dividend        8    8[BANK0 ] long long 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  quotient        8    3[COMMON] long long 
  4495 ;;  sign            1    2[COMMON] unsigned char 
  4496 ;;  counter         1    1[COMMON] unsigned char 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  8    0[BANK0 ] long long 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4506 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;Total ram usage:       27 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; Hardware stack levels required when called: 1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_dtoa
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520     0163                     ___aodiv:	
  4521                           ;psect for function ___aodiv
  4522                           
  4523     0163                     l1353:	
  4524                           ;incstack = 0
  4525                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4526                           
  4527     0163  01F2               	clrf	___aodiv@sign
  4528     0164                     l1355:
  4529     0164  3020               	movlw	low ___aodiv@divisor
  4530     0165  0086               	movwf	6
  4531     0166  3000               	movlw	high ___aodiv@divisor
  4532     0167  0087               	movwf	7
  4533     0168  3F47               	moviw [7]fsr1
  4534     0169  00F0               	movwf	??___aodiv
  4535     016A  1FF0               	btfss	??___aodiv,7
  4536     016B  296D               	goto	u651
  4537     016C  296E               	goto	u650
  4538     016D                     u651:
  4539     016D  298F               	goto	l1359
  4540     016E                     u650:
  4541     016E                     l1357:
  4542     016E  0020               	movlb	0	; select bank0
  4543     016F  09A0               	comf	___aodiv@divisor,f
  4544     0170  09A1               	comf	___aodiv@divisor+1,f
  4545     0171  09A2               	comf	___aodiv@divisor+2,f
  4546     0172  09A3               	comf	___aodiv@divisor+3,f
  4547     0173  09A4               	comf	___aodiv@divisor+4,f
  4548     0174  09A5               	comf	___aodiv@divisor+5,f
  4549     0175  09A6               	comf	___aodiv@divisor+6,f
  4550     0176  09A7               	comf	___aodiv@divisor+7,f
  4551     0177  0AA0               	incf	___aodiv@divisor,f
  4552     0178  1D03               	skipz
  4553     0179  298D               	goto	u66lld
  4554     017A  0AA1               	incf	___aodiv@divisor+1,f
  4555     017B  1D03               	skipz
  4556     017C  298D               	goto	u66lld
  4557     017D  0AA2               	incf	___aodiv@divisor+2,f
  4558     017E  1D03               	skipz
  4559     017F  298D               	goto	u66lld
  4560     0180  0AA3               	incf	___aodiv@divisor+3,f
  4561     0181  1D03               	skipz
  4562     0182  298D               	goto	u66lld
  4563     0183  0AA4               	incf	___aodiv@divisor+4,f
  4564     0184  1D03               	skipz
  4565     0185  298D               	goto	u66lld
  4566     0186  0AA5               	incf	___aodiv@divisor+5,f
  4567     0187  1D03               	skipz
  4568     0188  298D               	goto	u66lld
  4569     0189  0AA6               	incf	___aodiv@divisor+6,f
  4570     018A  1D03               	skipz
  4571     018B  298D               	goto	u66lld
  4572     018C  0AA7               	incf	___aodiv@divisor+7,f
  4573     018D                     u66lld:
  4574     018D  01F2               	clrf	___aodiv@sign
  4575     018E  0AF2               	incf	___aodiv@sign,f
  4576     018F                     l1359:
  4577     018F  3028               	movlw	low ___aodiv@dividend
  4578     0190  0086               	movwf	6
  4579     0191  3000               	movlw	high ___aodiv@dividend
  4580     0192  0087               	movwf	7
  4581     0193  3F47               	moviw [7]fsr1
  4582     0194  00F0               	movwf	??___aodiv
  4583     0195  1FF0               	btfss	??___aodiv,7
  4584     0196  2998               	goto	u671
  4585     0197  2999               	goto	u670
  4586     0198                     u671:
  4587     0198  29BC               	goto	l1365
  4588     0199                     u670:
  4589     0199                     l1361:
  4590     0199  0020               	movlb	0	; select bank0
  4591     019A  09A8               	comf	___aodiv@dividend,f
  4592     019B  09A9               	comf	___aodiv@dividend+1,f
  4593     019C  09AA               	comf	___aodiv@dividend+2,f
  4594     019D  09AB               	comf	___aodiv@dividend+3,f
  4595     019E  09AC               	comf	___aodiv@dividend+4,f
  4596     019F  09AD               	comf	___aodiv@dividend+5,f
  4597     01A0  09AE               	comf	___aodiv@dividend+6,f
  4598     01A1  09AF               	comf	___aodiv@dividend+7,f
  4599     01A2  0AA8               	incf	___aodiv@dividend,f
  4600     01A3  1D03               	skipz
  4601     01A4  29B8               	goto	u68lld
  4602     01A5  0AA9               	incf	___aodiv@dividend+1,f
  4603     01A6  1D03               	skipz
  4604     01A7  29B8               	goto	u68lld
  4605     01A8  0AAA               	incf	___aodiv@dividend+2,f
  4606     01A9  1D03               	skipz
  4607     01AA  29B8               	goto	u68lld
  4608     01AB  0AAB               	incf	___aodiv@dividend+3,f
  4609     01AC  1D03               	skipz
  4610     01AD  29B8               	goto	u68lld
  4611     01AE  0AAC               	incf	___aodiv@dividend+4,f
  4612     01AF  1D03               	skipz
  4613     01B0  29B8               	goto	u68lld
  4614     01B1  0AAD               	incf	___aodiv@dividend+5,f
  4615     01B2  1D03               	skipz
  4616     01B3  29B8               	goto	u68lld
  4617     01B4  0AAE               	incf	___aodiv@dividend+6,f
  4618     01B5  1D03               	skipz
  4619     01B6  29B8               	goto	u68lld
  4620     01B7  0AAF               	incf	___aodiv@dividend+7,f
  4621     01B8                     u68lld:
  4622     01B8                     l1363:
  4623     01B8  3001               	movlw	1
  4624     01B9  00F0               	movwf	??___aodiv
  4625     01BA  0870               	movf	??___aodiv,w
  4626     01BB  06F2               	xorwf	___aodiv@sign,f
  4627     01BC                     l1365:
  4628     01BC  3073               	movlw	low ___aodiv@quotient
  4629     01BD  0086               	movwf	6
  4630     01BE  3000               	movlw	high ___aodiv@quotient
  4631     01BF  0087               	movwf	7
  4632     01C0  3008               	movlw	8
  4633     01C1  00F0               	movwf	??___aodiv
  4634     01C2  3000               	movlw	0
  4635     01C3                     u690:
  4636     01C3  001E               	movwi fsr1++
  4637     01C4  0BF0               	decfsz	??___aodiv,f
  4638     01C5  29C3               	goto	u690
  4639     01C6                     l1367:
  4640     01C6  0020               	movlb	0	; select bank0
  4641     01C7  0820               	movf	___aodiv@divisor,w
  4642     01C8  0421               	iorwf	___aodiv@divisor+1,w
  4643     01C9  0422               	iorwf	___aodiv@divisor+2,w
  4644     01CA  0423               	iorwf	___aodiv@divisor+3,w
  4645     01CB  0424               	iorwf	___aodiv@divisor+4,w
  4646     01CC  0425               	iorwf	___aodiv@divisor+5,w
  4647     01CD  0426               	iorwf	___aodiv@divisor+6,w
  4648     01CE  0427               	iorwf	___aodiv@divisor+7,w
  4649     01CF  1903               	skipnz
  4650     01D0  29D2               	goto	u701
  4651     01D1  29D3               	goto	u700
  4652     01D2                     u701:
  4653     01D2  2A2F               	goto	l1387
  4654     01D3                     u700:
  4655     01D3                     l1369:
  4656     01D3  01F1               	clrf	___aodiv@counter
  4657     01D4  0AF1               	incf	___aodiv@counter,f
  4658     01D5  29E2               	goto	l1375
  4659     01D6                     l1371:
  4660     01D6  35A0               	lslf	___aodiv@divisor,f
  4661     01D7  0DA1               	rlf	___aodiv@divisor+1,f
  4662     01D8  0DA2               	rlf	___aodiv@divisor+2,f
  4663     01D9  0DA3               	rlf	___aodiv@divisor+3,f
  4664     01DA  0DA4               	rlf	___aodiv@divisor+4,f
  4665     01DB  0DA5               	rlf	___aodiv@divisor+5,f
  4666     01DC  0DA6               	rlf	___aodiv@divisor+6,f
  4667     01DD  0DA7               	rlf	___aodiv@divisor+7,f
  4668     01DE                     l1373:
  4669     01DE  3001               	movlw	1
  4670     01DF  00F0               	movwf	??___aodiv
  4671     01E0  0870               	movf	??___aodiv,w
  4672     01E1  07F1               	addwf	___aodiv@counter,f
  4673     01E2                     l1375:
  4674     01E2  1FA7               	btfss	___aodiv@divisor+7,7
  4675     01E3  29E5               	goto	u711
  4676     01E4  29E6               	goto	u710
  4677     01E5                     u711:
  4678     01E5  29D6               	goto	l1371
  4679     01E6                     u710:
  4680     01E6                     l1377:
  4681     01E6  35F3               	lslf	___aodiv@quotient,f
  4682     01E7  0DF4               	rlf	___aodiv@quotient+1,f
  4683     01E8  0DF5               	rlf	___aodiv@quotient+2,f
  4684     01E9  0DF6               	rlf	___aodiv@quotient+3,f
  4685     01EA  0DF7               	rlf	___aodiv@quotient+4,f
  4686     01EB  0DF8               	rlf	___aodiv@quotient+5,f
  4687     01EC  0DF9               	rlf	___aodiv@quotient+6,f
  4688     01ED  0DFA               	rlf	___aodiv@quotient+7,f
  4689     01EE                     l1379:
  4690     01EE  0827               	movf	___aodiv@divisor+7,w
  4691     01EF  022F               	subwf	___aodiv@dividend+7,w
  4692     01F0  1D03               	skipz
  4693     01F1  2A0C               	goto	u725
  4694     01F2  0826               	movf	___aodiv@divisor+6,w
  4695     01F3  022E               	subwf	___aodiv@dividend+6,w
  4696     01F4  1D03               	skipz
  4697     01F5  2A0C               	goto	u725
  4698     01F6  0825               	movf	___aodiv@divisor+5,w
  4699     01F7  022D               	subwf	___aodiv@dividend+5,w
  4700     01F8  1D03               	skipz
  4701     01F9  2A0C               	goto	u725
  4702     01FA  0824               	movf	___aodiv@divisor+4,w
  4703     01FB  022C               	subwf	___aodiv@dividend+4,w
  4704     01FC  1D03               	skipz
  4705     01FD  2A0C               	goto	u725
  4706     01FE  0823               	movf	___aodiv@divisor+3,w
  4707     01FF  022B               	subwf	___aodiv@dividend+3,w
  4708     0200  1D03               	skipz
  4709     0201  2A0C               	goto	u725
  4710     0202  0822               	movf	___aodiv@divisor+2,w
  4711     0203  022A               	subwf	___aodiv@dividend+2,w
  4712     0204  1D03               	skipz
  4713     0205  2A0C               	goto	u725
  4714     0206  0821               	movf	___aodiv@divisor+1,w
  4715     0207  0229               	subwf	___aodiv@dividend+1,w
  4716     0208  1D03               	skipz
  4717     0209  2A0C               	goto	u725
  4718     020A  0820               	movf	___aodiv@divisor,w
  4719     020B  0228               	subwf	___aodiv@dividend,w
  4720     020C                     u725:
  4721     020C  1C03               	skipc
  4722     020D  2A0F               	goto	u721
  4723     020E  2A10               	goto	u720
  4724     020F                     u721:
  4725     020F  2A21               	goto	l1385
  4726     0210                     u720:
  4727     0210                     l1381:
  4728     0210  0820               	movf	___aodiv@divisor,w
  4729     0211  02A8               	subwf	___aodiv@dividend,f
  4730     0212  0821               	movf	___aodiv@divisor+1,w
  4731     0213  3BA9               	subwfb	___aodiv@dividend+1,f
  4732     0214  0822               	movf	___aodiv@divisor+2,w
  4733     0215  3BAA               	subwfb	___aodiv@dividend+2,f
  4734     0216  0823               	movf	___aodiv@divisor+3,w
  4735     0217  3BAB               	subwfb	___aodiv@dividend+3,f
  4736     0218  0824               	movf	___aodiv@divisor+4,w
  4737     0219  3BAC               	subwfb	___aodiv@dividend+4,f
  4738     021A  0825               	movf	___aodiv@divisor+5,w
  4739     021B  3BAD               	subwfb	___aodiv@dividend+5,f
  4740     021C  0826               	movf	___aodiv@divisor+6,w
  4741     021D  3BAE               	subwfb	___aodiv@dividend+6,f
  4742     021E  0827               	movf	___aodiv@divisor+7,w
  4743     021F  3BAF               	subwfb	___aodiv@dividend+7,f
  4744     0220                     l1383:
  4745     0220  1473               	bsf	___aodiv@quotient,0
  4746     0221                     l1385:
  4747     0221  36A7               	lsrf	___aodiv@divisor+7,f
  4748     0222  0CA6               	rrf	___aodiv@divisor+6,f
  4749     0223  0CA5               	rrf	___aodiv@divisor+5,f
  4750     0224  0CA4               	rrf	___aodiv@divisor+4,f
  4751     0225  0CA3               	rrf	___aodiv@divisor+3,f
  4752     0226  0CA2               	rrf	___aodiv@divisor+2,f
  4753     0227  0CA1               	rrf	___aodiv@divisor+1,f
  4754     0228  0CA0               	rrf	___aodiv@divisor,f
  4755     0229  3001               	movlw	1
  4756     022A  02F1               	subwf	___aodiv@counter,f
  4757     022B  1D03               	btfss	3,2
  4758     022C  2A2E               	goto	u731
  4759     022D  2A2F               	goto	u730
  4760     022E                     u731:
  4761     022E  29E6               	goto	l1377
  4762     022F                     u730:
  4763     022F                     l1387:
  4764     022F  0872               	movf	___aodiv@sign,w
  4765     0230  1903               	btfsc	3,2
  4766     0231  2A33               	goto	u741
  4767     0232  2A34               	goto	u740
  4768     0233                     u741:
  4769     0233  2A52               	goto	l446
  4770     0234                     u740:
  4771     0234                     l1389:
  4772     0234  09F3               	comf	___aodiv@quotient,f
  4773     0235  09F4               	comf	___aodiv@quotient+1,f
  4774     0236  09F5               	comf	___aodiv@quotient+2,f
  4775     0237  09F6               	comf	___aodiv@quotient+3,f
  4776     0238  09F7               	comf	___aodiv@quotient+4,f
  4777     0239  09F8               	comf	___aodiv@quotient+5,f
  4778     023A  09F9               	comf	___aodiv@quotient+6,f
  4779     023B  09FA               	comf	___aodiv@quotient+7,f
  4780     023C  0AF3               	incf	___aodiv@quotient,f
  4781     023D  1D03               	skipz
  4782     023E  2A52               	goto	u75lld
  4783     023F  0AF4               	incf	___aodiv@quotient+1,f
  4784     0240  1D03               	skipz
  4785     0241  2A52               	goto	u75lld
  4786     0242  0AF5               	incf	___aodiv@quotient+2,f
  4787     0243  1D03               	skipz
  4788     0244  2A52               	goto	u75lld
  4789     0245  0AF6               	incf	___aodiv@quotient+3,f
  4790     0246  1D03               	skipz
  4791     0247  2A52               	goto	u75lld
  4792     0248  0AF7               	incf	___aodiv@quotient+4,f
  4793     0249  1D03               	skipz
  4794     024A  2A52               	goto	u75lld
  4795     024B  0AF8               	incf	___aodiv@quotient+5,f
  4796     024C  1D03               	skipz
  4797     024D  2A52               	goto	u75lld
  4798     024E  0AF9               	incf	___aodiv@quotient+6,f
  4799     024F  1D03               	skipz
  4800     0250  2A52               	goto	u75lld
  4801     0251  0AFA               	incf	___aodiv@quotient+7,f
  4802     0252                     u75lld:
  4803     0252                     l446:
  4804     0252  0873               	movf	___aodiv@quotient,w
  4805     0253  0020               	movlb	0	; select bank0
  4806     0254  00A0               	movwf	?___aodiv
  4807     0255  0874               	movf	___aodiv@quotient+1,w
  4808     0256  00A1               	movwf	?___aodiv+1
  4809     0257  0875               	movf	___aodiv@quotient+2,w
  4810     0258  00A2               	movwf	?___aodiv+2
  4811     0259  0876               	movf	___aodiv@quotient+3,w
  4812     025A  00A3               	movwf	?___aodiv+3
  4813     025B  0877               	movf	___aodiv@quotient+4,w
  4814     025C  00A4               	movwf	?___aodiv+4
  4815     025D  0878               	movf	___aodiv@quotient+5,w
  4816     025E  00A5               	movwf	?___aodiv+5
  4817     025F  0879               	movf	___aodiv@quotient+6,w
  4818     0260  00A6               	movwf	?___aodiv+6
  4819     0261  087A               	movf	___aodiv@quotient+7,w
  4820     0262  00A7               	movwf	?___aodiv+7
  4821     0263                     l447:
  4822     0263  0008               	return
  4823     0264                     __end_of___aodiv:
  4824                           
  4825                           	psect	text12
  4826     06A1                     __ptext12:	
  4827 ;; *************** function _SYSTEM_Initialize *****************
  4828 ;; Defined at:
  4829 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0, pclath, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;Total ram usage:        0 bytes
  4848 ;; Hardware stack levels used: 1
  4849 ;; Hardware stack levels required when called: 2
  4850 ;; This function calls:
  4851 ;;		_OSCILLATOR_Initialize
  4852 ;;		_PIN_MANAGER_Initialize
  4853 ;;		_PMD_Initialize
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859     06A1                     _SYSTEM_Initialize:	
  4860                           ;psect for function _SYSTEM_Initialize
  4861                           
  4862     06A1                     l1615:	
  4863                           ;incstack = 0
  4864                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4865                           
  4866                           
  4867                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  4868     06A1  3186  26BD  3186   	fcall	_PMD_Initialize
  4869     06A4                     l1617:
  4870                           
  4871                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4872     06A4  3185  25A3  3186   	fcall	_PIN_MANAGER_Initialize
  4873     06A7                     l1619:
  4874                           
  4875                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4876     06A7  3186  26AB  3186   	fcall	_OSCILLATOR_Initialize
  4877     06AA                     l31:
  4878     06AA  0008               	return
  4879     06AB                     __end_of_SYSTEM_Initialize:
  4880                           
  4881                           	psect	text13
  4882     06BD                     __ptext13:	
  4883 ;; *************** function _PMD_Initialize *****************
  4884 ;; Defined at:
  4885 ;;		line 71 in file "mcc_generated_files/mcc.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		status,2
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; Hardware stack levels required when called: 1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_SYSTEM_Initialize
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913     06BD                     _PMD_Initialize:	
  4914                           ;psect for function _PMD_Initialize
  4915                           
  4916     06BD                     l1537:	
  4917                           ;incstack = 0
  4918                           ; Regs used in _PMD_Initialize: [status,2]
  4919                           
  4920                           
  4921                           ;mcc_generated_files/mcc.c: 74:     PMD0 = 0x00;
  4922     06BD  002F               	movlb	15	; select bank15
  4923     06BE  0196               	clrf	22	;volatile
  4924                           
  4925                           ;mcc_generated_files/mcc.c: 76:     PMD1 = 0x00;
  4926     06BF  0197               	clrf	23	;volatile
  4927                           
  4928                           ;mcc_generated_files/mcc.c: 78:     PMD2 = 0x00;
  4929     06C0  0198               	clrf	24	;volatile
  4930                           
  4931                           ;mcc_generated_files/mcc.c: 80:     PMD3 = 0x00;
  4932     06C1  0199               	clrf	25	;volatile
  4933                           
  4934                           ;mcc_generated_files/mcc.c: 82:     PMD4 = 0x00;
  4935     06C2  019A               	clrf	26	;volatile
  4936                           
  4937                           ;mcc_generated_files/mcc.c: 84:     PMD5 = 0x00;
  4938     06C3  019B               	clrf	27	;volatile
  4939     06C4                     l37:
  4940     06C4  0008               	return
  4941     06C5                     __end_of_PMD_Initialize:
  4942                           
  4943                           	psect	text14
  4944     05A3                     __ptext14:	
  4945 ;; *************** function _PIN_MANAGER_Initialize *****************
  4946 ;; Defined at:
  4947 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; Hardware stack levels required when called: 1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_SYSTEM_Initialize
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975     05A3                     _PIN_MANAGER_Initialize:	
  4976                           ;psect for function _PIN_MANAGER_Initialize
  4977                           
  4978     05A3                     l1539:	
  4979                           ;incstack = 0
  4980                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4981                           
  4982                           
  4983                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4984     05A3  0020               	movlb	0	; select bank0
  4985     05A4  0196               	clrf	22	;volatile
  4986                           
  4987                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4988     05A5  0197               	clrf	23	;volatile
  4989                           
  4990                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4991     05A6  0198               	clrf	24	;volatile
  4992     05A7                     l1541:
  4993                           
  4994                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4995     05A7  30FF               	movlw	255
  4996     05A8  0091               	movwf	17	;volatile
  4997     05A9                     l1543:
  4998                           
  4999                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5000     05A9  30FF               	movlw	255
  5001     05AA  0092               	movwf	18	;volatile
  5002     05AB                     l1545:
  5003                           
  5004                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  5005     05AB  30FF               	movlw	255
  5006     05AC  0093               	movwf	19	;volatile
  5007     05AD                     l1547:
  5008                           
  5009                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  5010     05AD  30FF               	movlw	255
  5011     05AE  003E               	movlb	30	; select bank30
  5012     05AF  00CE               	movwf	78	;volatile
  5013     05B0                     l1549:
  5014                           
  5015                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  5016     05B0  30FF               	movlw	255
  5017     05B1  00C3               	movwf	67	;volatile
  5018     05B2                     l1551:
  5019                           
  5020                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  5021     05B2  30FF               	movlw	255
  5022     05B3  00B8               	movwf	56	;volatile
  5023                           
  5024                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  5025     05B4  01E5               	clrf	101	;volatile
  5026                           
  5027                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  5028     05B5  01C4               	clrf	68	;volatile
  5029                           
  5030                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  5031     05B6  01B9               	clrf	57	;volatile
  5032                           
  5033                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  5034     05B7  01CF               	clrf	79	;volatile
  5035                           
  5036                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5037     05B8  01BA               	clrf	58	;volatile
  5038                           
  5039                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5040     05B9  01C5               	clrf	69	;volatile
  5041                           
  5042                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5043     05BA  01D0               	clrf	80	;volatile
  5044     05BB                     l1553:
  5045                           
  5046                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  5047     05BB  30FF               	movlw	255
  5048     05BC  00BB               	movwf	59	;volatile
  5049     05BD                     l1555:
  5050                           
  5051                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  5052     05BD  30FF               	movlw	255
  5053     05BE  00C6               	movwf	70	;volatile
  5054     05BF                     l1557:
  5055                           
  5056                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5057     05BF  30FF               	movlw	255
  5058     05C0  00D1               	movwf	81	;volatile
  5059     05C1                     l1559:
  5060                           
  5061                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  5062     05C1  30FF               	movlw	255
  5063     05C2  00BC               	movwf	60	;volatile
  5064     05C3                     l1561:
  5065                           
  5066                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  5067     05C3  30FF               	movlw	255
  5068     05C4  00C7               	movwf	71	;volatile
  5069     05C5                     l1563:
  5070                           
  5071                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5072     05C5  30FF               	movlw	255
  5073     05C6  00D2               	movwf	82	;volatile
  5074     05C7                     l1565:
  5075                           
  5076                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  5077     05C7  3008               	movlw	8
  5078     05C8  00E8               	movwf	104	;volatile
  5079     05C9                     l191:
  5080     05C9  0008               	return
  5081     05CA                     __end_of_PIN_MANAGER_Initialize:
  5082                           
  5083                           	psect	text15
  5084     06AB                     __ptext15:	
  5085 ;; *************** function _OSCILLATOR_Initialize *****************
  5086 ;; Defined at:
  5087 ;;		line 57 in file "mcc_generated_files/mcc.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; Hardware stack levels required when called: 1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_SYSTEM_Initialize
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115     06AB                     _OSCILLATOR_Initialize:	
  5116                           ;psect for function _OSCILLATOR_Initialize
  5117                           
  5118     06AB                     l1567:	
  5119                           ;incstack = 0
  5120                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5121                           
  5122                           
  5123                           ;mcc_generated_files/mcc.c: 60:     OSCCON1 = 0x62;
  5124     06AB  3062               	movlw	98
  5125     06AC  0031               	movlb	17	; select bank17
  5126     06AD  008D               	movwf	13	;volatile
  5127     06AE                     l1569:
  5128                           
  5129                           ;mcc_generated_files/mcc.c: 62:     OSCCON3 = 0x00;
  5130     06AE  018F               	clrf	15	;volatile
  5131     06AF                     l1571:
  5132                           
  5133                           ;mcc_generated_files/mcc.c: 64:     OSCEN = 0x00;
  5134     06AF  0191               	clrf	17	;volatile
  5135                           
  5136                           ;mcc_generated_files/mcc.c: 66:     OSCFRQ = 0x06;
  5137     06B0  3006               	movlw	6
  5138     06B1  0093               	movwf	19	;volatile
  5139     06B2                     l1573:
  5140                           
  5141                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  5142     06B2  0192               	clrf	18	;volatile
  5143     06B3                     l34:
  5144     06B3  0008               	return
  5145     06B4                     __end_of_OSCILLATOR_Initialize:
  5146                           
  5147                           	psect	text16
  5148     062D                     __ptext16:	
  5149 ;; *************** function _Lcd_Write_String *****************
  5150 ;; Defined at:
  5151 ;;		line 113 in file "./lcd.h"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  a               1    wreg     PTR unsigned char 
  5154 ;;		 -> aux(20), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  a               1    8[COMMON] PTR unsigned char 
  5157 ;;		 -> aux(20), 
  5158 ;;  i               2    6[COMMON] int 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;Total ram usage:        4 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 3
  5175 ;; This function calls:
  5176 ;;		_Lcd_Write_Char
  5177 ;; This function is called by:
  5178 ;;		_main
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182     062D                     _Lcd_Write_String:	
  5183                           ;psect for function _Lcd_Write_String
  5184                           
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _Lcd_Write_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5188                           ;Lcd_Write_String@a stored from wreg
  5189     062D  00F8               	movwf	Lcd_Write_String@a
  5190     062E                     l1673:
  5191                           
  5192                           ;./lcd.h: 113: void Lcd_Write_String(char *a);./lcd.h: 114: {;./lcd.h: 115:  int i;;./lc
      +                          d.h: 116:  for(i=0;a[i]!='\0';i++)
  5193     062E  01F6               	clrf	Lcd_Write_String@i
  5194     062F  01F7               	clrf	Lcd_Write_String@i+1
  5195     0630  2E3F               	goto	l1679
  5196     0631                     l1675:
  5197                           
  5198                           ;./lcd.h: 117:     Lcd_Write_Char(a[i]);
  5199     0631  0876               	movf	Lcd_Write_String@i,w
  5200     0632  0778               	addwf	Lcd_Write_String@a,w
  5201     0633  00F5               	movwf	??_Lcd_Write_String
  5202     0634  0875               	movf	??_Lcd_Write_String,w
  5203     0635  0086               	movwf	6
  5204     0636  0187               	clrf	7
  5205     0637  0801               	movf	1,w
  5206     0638  3185  257B  3186   	fcall	_Lcd_Write_Char
  5207     063B                     l1677:
  5208     063B  3001               	movlw	1
  5209     063C  07F6               	addwf	Lcd_Write_String@i,f
  5210     063D  3000               	movlw	0
  5211     063E  3DF7               	addwfc	Lcd_Write_String@i+1,f
  5212     063F                     l1679:
  5213     063F  0876               	movf	Lcd_Write_String@i,w
  5214     0640  0778               	addwf	Lcd_Write_String@a,w
  5215     0641  00F5               	movwf	??_Lcd_Write_String
  5216     0642  0875               	movf	??_Lcd_Write_String,w
  5217     0643  0086               	movwf	6
  5218     0644  0187               	clrf	7
  5219     0645  0801               	movf	1,w
  5220     0646  1D03               	btfss	3,2
  5221     0647  2E49               	goto	u1171
  5222     0648  2E4A               	goto	u1170
  5223     0649                     u1171:
  5224     0649  2E31               	goto	l1675
  5225     064A                     u1170:
  5226     064A                     l118:
  5227     064A  0008               	return
  5228     064B                     __end_of_Lcd_Write_String:
  5229                           
  5230                           	psect	text17
  5231     057B                     __ptext17:	
  5232 ;; *************** function _Lcd_Write_Char *****************
  5233 ;; Defined at:
  5234 ;;		line 97 in file "./lcd.h"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  a               1    wreg     unsigned char 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  a               1    4[COMMON] unsigned char 
  5239 ;;  y               1    3[COMMON] unsigned char 
  5240 ;;  temp            1    2[COMMON] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      void 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, pclath, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;Total ram usage:        4 bytes
  5255 ;; Hardware stack levels used: 1
  5256 ;; Hardware stack levels required when called: 2
  5257 ;; This function calls:
  5258 ;;		_Lcd_Port
  5259 ;; This function is called by:
  5260 ;;		_Lcd_Write_String
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264     057B                     _Lcd_Write_Char:	
  5265                           ;psect for function _Lcd_Write_Char
  5266                           
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5270                           ;Lcd_Write_Char@a stored from wreg
  5271     057B  00F4               	movwf	Lcd_Write_Char@a
  5272     057C                     l1585:
  5273                           
  5274                           ;./lcd.h: 97: void Lcd_Write_Char(char a);./lcd.h: 98: {;./lcd.h: 99:    char temp,y;;./
      +                          lcd.h: 100:    temp = a&0x0F;
  5275     057C  0874               	movf	Lcd_Write_Char@a,w
  5276     057D  390F               	andlw	15
  5277     057E  00F2               	movwf	Lcd_Write_Char@temp
  5278                           
  5279                           ;./lcd.h: 101:    y = a&0xF0;
  5280     057F  0874               	movf	Lcd_Write_Char@a,w
  5281     0580  39F0               	andlw	240
  5282     0581  00F3               	movwf	Lcd_Write_Char@y
  5283     0582                     l1587:
  5284                           
  5285                           ;./lcd.h: 102:    LATBbits.LATB0 = 1;
  5286     0582  0020               	movlb	0	; select bank0
  5287     0583  1417               	bsf	23,0	;volatile
  5288     0584                     l1589:
  5289                           
  5290                           ;./lcd.h: 103:    Lcd_Port(y>>4);
  5291     0584  0873               	movf	Lcd_Write_Char@y,w
  5292     0585  00F1               	movwf	??_Lcd_Write_Char
  5293     0586  3004               	movlw	4
  5294     0587                     u1075:
  5295     0587  36F1               	lsrf	??_Lcd_Write_Char,f
  5296     0588  0B89               	decfsz	9,f
  5297     0589  2D87               	goto	u1075
  5298     058A  0871               	movf	??_Lcd_Write_Char,w
  5299     058B  3185  25EE  3185   	fcall	_Lcd_Port
  5300     058E                     l1591:
  5301                           
  5302                           ;./lcd.h: 104:    LATBbits.LATB1 = 1;
  5303     058E  0020               	movlb	0	; select bank0
  5304     058F  1497               	bsf	23,1	;volatile
  5305     0590                     l1593:
  5306                           
  5307                           ;./lcd.h: 105:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5308     0590  301A               	movlw	26
  5309     0591                     u1217:
  5310     0591  0B89               	decfsz	9,f
  5311     0592  2D91               	goto	u1217
  5312     0593  3200               	nop2
  5313     0594                     l1595:
  5314                           
  5315                           ;./lcd.h: 106:    LATBbits.LATB1 = 0;
  5316     0594  0020               	movlb	0	; select bank0
  5317     0595  1097               	bcf	23,1	;volatile
  5318     0596                     l1597:
  5319                           
  5320                           ;./lcd.h: 107:    Lcd_Port(temp);
  5321     0596  0872               	movf	Lcd_Write_Char@temp,w
  5322     0597  3185  25EE  3185   	fcall	_Lcd_Port
  5323     059A                     l1599:
  5324                           
  5325                           ;./lcd.h: 108:    LATBbits.LATB1 = 1;
  5326     059A  0020               	movlb	0	; select bank0
  5327     059B  1497               	bsf	23,1	;volatile
  5328     059C                     l1601:
  5329                           
  5330                           ;./lcd.h: 109:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  5331     059C  301A               	movlw	26
  5332     059D                     u1227:
  5333     059D  0B89               	decfsz	9,f
  5334     059E  2D9D               	goto	u1227
  5335     059F  3200               	nop2
  5336     05A0                     l1603:
  5337                           
  5338                           ;./lcd.h: 110:    LATBbits.LATB1 = 0;
  5339     05A0  0020               	movlb	0	; select bank0
  5340     05A1  1097               	bcf	23,1	;volatile
  5341     05A2                     l112:
  5342     05A2  0008               	return
  5343     05A3                     __end_of_Lcd_Write_Char:
  5344                           
  5345                           	psect	text18
  5346     03EF                     __ptext18:	
  5347 ;; *************** function _Lcd_Set_Cursor *****************
  5348 ;; Defined at:
  5349 ;;		line 41 in file "./lcd.h"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  a               1    wreg     unsigned char 
  5352 ;;  b               1    3[COMMON] unsigned char 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  a               1    5[COMMON] unsigned char 
  5355 ;;  temp            1    8[COMMON] unsigned char 
  5356 ;;  y               1    7[COMMON] unsigned char 
  5357 ;;  z               1    6[COMMON] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;Total ram usage:        6 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 3
  5374 ;; This function calls:
  5375 ;;		_Lcd_Cmd
  5376 ;; This function is called by:
  5377 ;;		_main
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381     03EF                     _Lcd_Set_Cursor:	
  5382                           ;psect for function _Lcd_Set_Cursor
  5383                           
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5387                           ;Lcd_Set_Cursor@a stored from wreg
  5388     03EF  00F5               	movwf	Lcd_Set_Cursor@a
  5389     03F0                     l1623:
  5390                           
  5391                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  5392     03F0  0375               	decf	Lcd_Set_Cursor@a,w
  5393     03F1  1D03               	btfss	3,2
  5394     03F2  2BF4               	goto	u1091
  5395     03F3  2BF5               	goto	u1090
  5396     03F4                     u1091:
  5397     03F4  2C0C               	goto	l1633
  5398     03F5                     u1090:
  5399     03F5                     l1625:
  5400                           
  5401                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  5402     03F5  0873               	movf	Lcd_Set_Cursor@b,w
  5403     03F6  3E7F               	addlw	127
  5404     03F7  00F8               	movwf	Lcd_Set_Cursor@temp
  5405                           
  5406                           ;./lcd.h: 47:   z = temp>>4;
  5407     03F8  0878               	movf	Lcd_Set_Cursor@temp,w
  5408     03F9  00F4               	movwf	??_Lcd_Set_Cursor
  5409     03FA  3004               	movlw	4
  5410     03FB                     u1105:
  5411     03FB  36F4               	lsrf	??_Lcd_Set_Cursor,f
  5412     03FC  0B89               	decfsz	9,f
  5413     03FD  2BFB               	goto	u1105
  5414     03FE  0874               	movf	??_Lcd_Set_Cursor,w
  5415     03FF  00F6               	movwf	Lcd_Set_Cursor@z
  5416     0400                     l1627:
  5417                           
  5418                           ;./lcd.h: 48:   y = temp & 0x0F;
  5419     0400  0878               	movf	Lcd_Set_Cursor@temp,w
  5420     0401  390F               	andlw	15
  5421     0402  00F7               	movwf	Lcd_Set_Cursor@y
  5422     0403                     l1629:
  5423                           
  5424                           ;./lcd.h: 49:   Lcd_Cmd(z);
  5425     0403  0876               	movf	Lcd_Set_Cursor@z,w
  5426     0404  3186  2681  3183   	fcall	_Lcd_Cmd
  5427     0407                     l1631:
  5428                           
  5429                           ;./lcd.h: 50:   Lcd_Cmd(y);
  5430     0407  0877               	movf	Lcd_Set_Cursor@y,w
  5431     0408  3186  2681  3183   	fcall	_Lcd_Cmd
  5432                           
  5433                           ;./lcd.h: 51:  }
  5434     040B  2C63               	goto	l106
  5435     040C                     l1633:
  5436     040C  3002               	movlw	2
  5437     040D  0675               	xorwf	Lcd_Set_Cursor@a,w
  5438     040E  1D03               	btfss	3,2
  5439     040F  2C11               	goto	u1111
  5440     0410  2C12               	goto	u1110
  5441     0411                     u1111:
  5442     0411  2C29               	goto	l1643
  5443     0412                     u1110:
  5444     0412                     l1635:
  5445                           
  5446                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  5447     0412  0873               	movf	Lcd_Set_Cursor@b,w
  5448     0413  3EBF               	addlw	191
  5449     0414  00F8               	movwf	Lcd_Set_Cursor@temp
  5450                           
  5451                           ;./lcd.h: 55:   z = temp>>4;
  5452     0415  0878               	movf	Lcd_Set_Cursor@temp,w
  5453     0416  00F4               	movwf	??_Lcd_Set_Cursor
  5454     0417  3004               	movlw	4
  5455     0418                     u1125:
  5456     0418  36F4               	lsrf	??_Lcd_Set_Cursor,f
  5457     0419  0B89               	decfsz	9,f
  5458     041A  2C18               	goto	u1125
  5459     041B  0874               	movf	??_Lcd_Set_Cursor,w
  5460     041C  00F6               	movwf	Lcd_Set_Cursor@z
  5461     041D                     l1637:
  5462                           
  5463                           ;./lcd.h: 56:   y = temp & 0x0F;
  5464     041D  0878               	movf	Lcd_Set_Cursor@temp,w
  5465     041E  390F               	andlw	15
  5466     041F  00F7               	movwf	Lcd_Set_Cursor@y
  5467     0420                     l1639:
  5468                           
  5469                           ;./lcd.h: 57:   Lcd_Cmd(z);
  5470     0420  0876               	movf	Lcd_Set_Cursor@z,w
  5471     0421  3186  2681  3183   	fcall	_Lcd_Cmd
  5472     0424                     l1641:
  5473                           
  5474                           ;./lcd.h: 58:   Lcd_Cmd(y);
  5475     0424  0877               	movf	Lcd_Set_Cursor@y,w
  5476     0425  3186  2681  3183   	fcall	_Lcd_Cmd
  5477                           
  5478                           ;./lcd.h: 59:  }
  5479     0428  2C63               	goto	l106
  5480     0429                     l1643:
  5481     0429  3003               	movlw	3
  5482     042A  0675               	xorwf	Lcd_Set_Cursor@a,w
  5483     042B  1D03               	btfss	3,2
  5484     042C  2C2E               	goto	u1131
  5485     042D  2C2F               	goto	u1130
  5486     042E                     u1131:
  5487     042E  2C46               	goto	l1653
  5488     042F                     u1130:
  5489     042F                     l1645:
  5490                           
  5491                           ;./lcd.h: 61:  {;./lcd.h: 62:   temp = 0x94 + b - 1;
  5492     042F  0873               	movf	Lcd_Set_Cursor@b,w
  5493     0430  3E93               	addlw	147
  5494     0431  00F8               	movwf	Lcd_Set_Cursor@temp
  5495                           
  5496                           ;./lcd.h: 63:   z = temp>>4;
  5497     0432  0878               	movf	Lcd_Set_Cursor@temp,w
  5498     0433  00F4               	movwf	??_Lcd_Set_Cursor
  5499     0434  3004               	movlw	4
  5500     0435                     u1145:
  5501     0435  36F4               	lsrf	??_Lcd_Set_Cursor,f
  5502     0436  0B89               	decfsz	9,f
  5503     0437  2C35               	goto	u1145
  5504     0438  0874               	movf	??_Lcd_Set_Cursor,w
  5505     0439  00F6               	movwf	Lcd_Set_Cursor@z
  5506     043A                     l1647:
  5507                           
  5508                           ;./lcd.h: 64:   y = temp & 0x0F;
  5509     043A  0878               	movf	Lcd_Set_Cursor@temp,w
  5510     043B  390F               	andlw	15
  5511     043C  00F7               	movwf	Lcd_Set_Cursor@y
  5512     043D                     l1649:
  5513                           
  5514                           ;./lcd.h: 65:   Lcd_Cmd(z);
  5515     043D  0876               	movf	Lcd_Set_Cursor@z,w
  5516     043E  3186  2681  3183   	fcall	_Lcd_Cmd
  5517     0441                     l1651:
  5518                           
  5519                           ;./lcd.h: 66:   Lcd_Cmd(y);
  5520     0441  0877               	movf	Lcd_Set_Cursor@y,w
  5521     0442  3186  2681  3183   	fcall	_Lcd_Cmd
  5522                           
  5523                           ;./lcd.h: 67:  }
  5524     0445  2C63               	goto	l106
  5525     0446                     l1653:
  5526     0446  3004               	movlw	4
  5527     0447  0675               	xorwf	Lcd_Set_Cursor@a,w
  5528     0448  1D03               	btfss	3,2
  5529     0449  2C4B               	goto	u1151
  5530     044A  2C4C               	goto	u1150
  5531     044B                     u1151:
  5532     044B  2C63               	goto	l102
  5533     044C                     u1150:
  5534     044C                     l1655:
  5535                           
  5536                           ;./lcd.h: 69:  {;./lcd.h: 70:   temp = 0xD4 + b - 1;
  5537     044C  0873               	movf	Lcd_Set_Cursor@b,w
  5538     044D  3ED3               	addlw	211
  5539     044E  00F8               	movwf	Lcd_Set_Cursor@temp
  5540                           
  5541                           ;./lcd.h: 71:   z = temp>>4;
  5542     044F  0878               	movf	Lcd_Set_Cursor@temp,w
  5543     0450  00F4               	movwf	??_Lcd_Set_Cursor
  5544     0451  3004               	movlw	4
  5545     0452                     u1165:
  5546     0452  36F4               	lsrf	??_Lcd_Set_Cursor,f
  5547     0453  0B89               	decfsz	9,f
  5548     0454  2C52               	goto	u1165
  5549     0455  0874               	movf	??_Lcd_Set_Cursor,w
  5550     0456  00F6               	movwf	Lcd_Set_Cursor@z
  5551     0457                     l1657:
  5552                           
  5553                           ;./lcd.h: 72:   y = temp & 0x0F;
  5554     0457  0878               	movf	Lcd_Set_Cursor@temp,w
  5555     0458  390F               	andlw	15
  5556     0459  00F7               	movwf	Lcd_Set_Cursor@y
  5557     045A                     l1659:
  5558                           
  5559                           ;./lcd.h: 73:   Lcd_Cmd(z);
  5560     045A  0876               	movf	Lcd_Set_Cursor@z,w
  5561     045B  3186  2681  3183   	fcall	_Lcd_Cmd
  5562     045E                     l1661:
  5563                           
  5564                           ;./lcd.h: 74:   Lcd_Cmd(y);
  5565     045E  0877               	movf	Lcd_Set_Cursor@y,w
  5566     045F  3186  2681  3183   	fcall	_Lcd_Cmd
  5567     0462  2C63               	goto	l106
  5568     0463                     l102:
  5569     0463                     l106:
  5570     0463  0008               	return
  5571     0464                     __end_of_Lcd_Set_Cursor:
  5572                           
  5573                           	psect	text19
  5574     0503                     __ptext19:	
  5575 ;; *************** function _Lcd_Init *****************
  5576 ;; Defined at:
  5577 ;;		line 78 in file "./lcd.h"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;		None
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;		None
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      void 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0, pclath, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;Total ram usage:        1 bytes
  5596 ;; Hardware stack levels used: 1
  5597 ;; Hardware stack levels required when called: 3
  5598 ;; This function calls:
  5599 ;;		_Lcd_Cmd
  5600 ;;		_Lcd_Port
  5601 ;; This function is called by:
  5602 ;;		_main
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606     0503                     _Lcd_Init:	
  5607                           ;psect for function _Lcd_Init
  5608                           
  5609     0503                     l1663:	
  5610                           ;incstack = 0
  5611                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5612                           
  5613                           
  5614                           ;./lcd.h: 80:   Lcd_Port(0x00);
  5615     0503  3000               	movlw	0
  5616     0504  3185  25EE  3185   	fcall	_Lcd_Port
  5617     0507                     l1665:
  5618                           
  5619                           ;./lcd.h: 81:    _delay((unsigned long)((20)*(8000000/4000.0)));
  5620     0507  3034               	movlw	52
  5621     0508  00F3               	movwf	??_Lcd_Init
  5622     0509  30F2               	movlw	242
  5623     050A                     u1237:
  5624     050A  0B89               	decfsz	9,f
  5625     050B  2D0A               	goto	u1237
  5626     050C  0BF3               	decfsz	??_Lcd_Init,f
  5627     050D  2D0A               	goto	u1237
  5628     050E                     l1667:
  5629                           
  5630                           ;./lcd.h: 82:   Lcd_Cmd(0x03);
  5631     050E  3003               	movlw	3
  5632     050F  3186  2681  3185   	fcall	_Lcd_Cmd
  5633                           
  5634                           ;./lcd.h: 83:  _delay((unsigned long)((5)*(8000000/4000.0)));
  5635     0512  300D               	movlw	13
  5636     0513  00F3               	movwf	??_Lcd_Init
  5637     0514  30FC               	movlw	252
  5638     0515                     u1247:
  5639     0515  0B89               	decfsz	9,f
  5640     0516  2D15               	goto	u1247
  5641     0517  0BF3               	decfsz	??_Lcd_Init,f
  5642     0518  2D15               	goto	u1247
  5643     0519                     l1669:
  5644                           
  5645                           ;./lcd.h: 84:   Lcd_Cmd(0x03);
  5646     0519  3003               	movlw	3
  5647     051A  3186  2681  3185   	fcall	_Lcd_Cmd
  5648     051D                     l1671:
  5649                           
  5650                           ;./lcd.h: 85:  _delay((unsigned long)((11)*(8000000/4000.0)));
  5651     051D  301D               	movlw	29
  5652     051E  00F3               	movwf	??_Lcd_Init
  5653     051F  3091               	movlw	145
  5654     0520                     u1257:
  5655     0520  0B89               	decfsz	9,f
  5656     0521  2D20               	goto	u1257
  5657     0522  0BF3               	decfsz	??_Lcd_Init,f
  5658     0523  2D20               	goto	u1257
  5659     0524  0000               	nop
  5660                           
  5661                           ;./lcd.h: 86:   Lcd_Cmd(0x03);
  5662     0525  3003               	movlw	3
  5663     0526  3186  2681  3185   	fcall	_Lcd_Cmd
  5664                           
  5665                           ;./lcd.h: 88:   Lcd_Cmd(0x02);
  5666     0529  3002               	movlw	2
  5667     052A  3186  2681  3185   	fcall	_Lcd_Cmd
  5668                           
  5669                           ;./lcd.h: 89:   Lcd_Cmd(0x02);
  5670     052D  3002               	movlw	2
  5671     052E  3186  2681  3185   	fcall	_Lcd_Cmd
  5672                           
  5673                           ;./lcd.h: 90:   Lcd_Cmd(0x08);
  5674     0531  3008               	movlw	8
  5675     0532  3186  2681  3185   	fcall	_Lcd_Cmd
  5676                           
  5677                           ;./lcd.h: 91:   Lcd_Cmd(0x00);
  5678     0535  3000               	movlw	0
  5679     0536  3186  2681  3185   	fcall	_Lcd_Cmd
  5680                           
  5681                           ;./lcd.h: 92:   Lcd_Cmd(0x0C);
  5682     0539  300C               	movlw	12
  5683     053A  3186  2681  3185   	fcall	_Lcd_Cmd
  5684                           
  5685                           ;./lcd.h: 93:   Lcd_Cmd(0x00);
  5686     053D  3000               	movlw	0
  5687     053E  3186  2681  3185   	fcall	_Lcd_Cmd
  5688                           
  5689                           ;./lcd.h: 94:   Lcd_Cmd(0x06);
  5690     0541  3006               	movlw	6
  5691     0542  3186  2681  3185   	fcall	_Lcd_Cmd
  5692     0545                     l109:
  5693     0545  0008               	return
  5694     0546                     __end_of_Lcd_Init:
  5695                           
  5696                           	psect	text20
  5697     06B4                     __ptext20:	
  5698 ;; *************** function _Lcd_Clear *****************
  5699 ;; Defined at:
  5700 ;;		line 35 in file "./lcd.h"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  2   95[None  ] int 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 3
  5721 ;; This function calls:
  5722 ;;		_Lcd_Cmd
  5723 ;; This function is called by:
  5724 ;;		_main
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728     06B4                     _Lcd_Clear:	
  5729                           ;psect for function _Lcd_Clear
  5730                           
  5731     06B4                     l1621:	
  5732                           ;incstack = 0
  5733                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5734                           
  5735                           
  5736                           ;./lcd.h: 37:  Lcd_Cmd(0);
  5737     06B4  3000               	movlw	0
  5738     06B5  3186  2681  3186   	fcall	_Lcd_Cmd
  5739                           
  5740                           ;./lcd.h: 38:  Lcd_Cmd(1);
  5741     06B8  3001               	movlw	1
  5742     06B9  3186  2681  3186   	fcall	_Lcd_Cmd
  5743     06BC                     l96:
  5744     06BC  0008               	return
  5745     06BD                     __end_of_Lcd_Clear:
  5746                           
  5747                           	psect	text21
  5748     0681                     __ptext21:	
  5749 ;; *************** function _Lcd_Cmd *****************
  5750 ;; Defined at:
  5751 ;;		line 26 in file "./lcd.h"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  a               1    wreg     unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  a               1    2[COMMON] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0, pclath, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:        2 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; Hardware stack levels required when called: 2
  5772 ;; This function calls:
  5773 ;;		_Lcd_Port
  5774 ;; This function is called by:
  5775 ;;		_Lcd_Clear
  5776 ;;		_Lcd_Set_Cursor
  5777 ;;		_Lcd_Init
  5778 ;;		_Lcd_Shift_Right
  5779 ;;		_Lcd_Shift_Left
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783     0681                     _Lcd_Cmd:	
  5784                           ;psect for function _Lcd_Cmd
  5785                           
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5789                           ;Lcd_Cmd@a stored from wreg
  5790     0681  00F2               	movwf	Lcd_Cmd@a
  5791     0682                     l1575:
  5792                           
  5793                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  LATBbits.LATB0 = 0;
  5794     0682  0020               	movlb	0	; select bank0
  5795     0683  1017               	bcf	23,0	;volatile
  5796     0684                     l1577:
  5797                           
  5798                           ;./lcd.h: 29:  Lcd_Port(a);
  5799     0684  0872               	movf	Lcd_Cmd@a,w
  5800     0685  3185  25EE  3186   	fcall	_Lcd_Port
  5801     0688                     l1579:
  5802                           
  5803                           ;./lcd.h: 30:  LATBbits.LATB1 = 1;
  5804     0688  0020               	movlb	0	; select bank0
  5805     0689  1497               	bsf	23,1	;volatile
  5806     068A                     l1581:
  5807                           
  5808                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(8000000/4000.0)));
  5809     068A  300B               	movlw	11
  5810     068B  00F1               	movwf	??_Lcd_Cmd
  5811     068C  3062               	movlw	98
  5812     068D                     u1267:
  5813     068D  0B89               	decfsz	9,f
  5814     068E  2E8D               	goto	u1267
  5815     068F  0BF1               	decfsz	??_Lcd_Cmd,f
  5816     0690  2E8D               	goto	u1267
  5817     0691  3200               	nop2
  5818     0692                     l1583:
  5819                           
  5820                           ;./lcd.h: 32:         LATBbits.LATB1 = 0;
  5821     0692  0020               	movlb	0	; select bank0
  5822     0693  1097               	bcf	23,1	;volatile
  5823     0694                     l93:
  5824     0694  0008               	return
  5825     0695                     __end_of_Lcd_Cmd:
  5826                           
  5827                           	psect	text22
  5828     05EE                     __ptext22:	
  5829 ;; *************** function _Lcd_Port *****************
  5830 ;; Defined at:
  5831 ;;		line 4 in file "./lcd.h"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  a               1    wreg     unsigned char 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  a               1    0[COMMON] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;Total ram usage:        1 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_Lcd_Cmd
  5856 ;;		_Lcd_Init
  5857 ;;		_Lcd_Write_Char
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861     05EE                     _Lcd_Port:	
  5862                           ;psect for function _Lcd_Port
  5863                           
  5864                           
  5865                           ;incstack = 0
  5866                           ; Regs used in _Lcd_Port: [wreg]
  5867                           ;Lcd_Port@a stored from wreg
  5868     05EE  00F0               	movwf	Lcd_Port@a
  5869     05EF                     l1489:
  5870                           
  5871                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  5872     05EF  1C70               	btfss	Lcd_Port@a,0
  5873     05F0  2DF2               	goto	u1001
  5874     05F1  2DF3               	goto	u1000
  5875     05F2                     u1001:
  5876     05F2  2DF6               	goto	l82
  5877     05F3                     u1000:
  5878     05F3                     l1491:
  5879                           
  5880                           ;./lcd.h: 7:   LATBbits.LATB2 = 1;
  5881     05F3  0020               	movlb	0	; select bank0
  5882     05F4  1517               	bsf	23,2	;volatile
  5883     05F5  2DF8               	goto	l1493
  5884     05F6                     l82:	
  5885                           ;./lcd.h: 8:  else
  5886                           
  5887                           
  5888                           ;./lcd.h: 9:   LATBbits.LATB2 = 0;
  5889     05F6  0020               	movlb	0	; select bank0
  5890     05F7  1117               	bcf	23,2	;volatile
  5891     05F8                     l1493:
  5892                           
  5893                           ;./lcd.h: 11:  if(a & 2)
  5894     05F8  1CF0               	btfss	Lcd_Port@a,1
  5895     05F9  2DFB               	goto	u1011
  5896     05FA  2DFC               	goto	u1010
  5897     05FB                     u1011:
  5898     05FB  2DFE               	goto	l84
  5899     05FC                     u1010:
  5900     05FC                     l1495:
  5901                           
  5902                           ;./lcd.h: 12:   LATBbits.LATB3 = 1;
  5903     05FC  1597               	bsf	23,3	;volatile
  5904     05FD  2DFF               	goto	l1497
  5905     05FE                     l84:	
  5906                           ;./lcd.h: 13:  else
  5907                           
  5908                           
  5909                           ;./lcd.h: 14:   LATBbits.LATB3 = 0;
  5910     05FE  1197               	bcf	23,3	;volatile
  5911     05FF                     l1497:
  5912                           
  5913                           ;./lcd.h: 16:  if(a & 4)
  5914     05FF  1D70               	btfss	Lcd_Port@a,2
  5915     0600  2E02               	goto	u1021
  5916     0601  2E03               	goto	u1020
  5917     0602                     u1021:
  5918     0602  2E05               	goto	l86
  5919     0603                     u1020:
  5920     0603                     l1499:
  5921                           
  5922                           ;./lcd.h: 17:   LATBbits.LATB4 = 1;
  5923     0603  1617               	bsf	23,4	;volatile
  5924     0604  2E06               	goto	l1501
  5925     0605                     l86:	
  5926                           ;./lcd.h: 18:  else
  5927                           
  5928                           
  5929                           ;./lcd.h: 19:   LATBbits.LATB4 = 0;
  5930     0605  1217               	bcf	23,4	;volatile
  5931     0606                     l1501:
  5932                           
  5933                           ;./lcd.h: 21:  if(a & 8)
  5934     0606  1DF0               	btfss	Lcd_Port@a,3
  5935     0607  2E09               	goto	u1031
  5936     0608  2E0A               	goto	u1030
  5937     0609                     u1031:
  5938     0609  2E0C               	goto	l88
  5939     060A                     u1030:
  5940     060A                     l1503:
  5941                           
  5942                           ;./lcd.h: 22:   LATBbits.LATB5 = 1;
  5943     060A  1697               	bsf	23,5	;volatile
  5944     060B  2E0D               	goto	l90
  5945     060C                     l88:	
  5946                           ;./lcd.h: 23:  else
  5947                           
  5948                           
  5949                           ;./lcd.h: 24:   LATBbits.LATB5 = 0;
  5950     060C  1297               	bcf	23,5	;volatile
  5951     060D                     l90:
  5952     060D  0008               	return
  5953     060E                     __end_of_Lcd_Port:
  5954                           
  5955                           	psect	intentry
  5956     0004                     __pintentry:	
  5957 ;; *************** function _adc *****************
  5958 ;; Defined at:
  5959 ;;		line 122 in file "main.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;Total ram usage:        0 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		Interrupt level 1
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986     0004                     _adc:
  5987                           
  5988                           ;incstack = 0
  5989     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5990                           
  5991                           ; Regs used in _adc: [wreg]
  5992     0005  3180               	pagesel	$
  5993     0006                     i1l1747:
  5994                           
  5995                           ;main.c: 123:     if(PIR1bits.ADIF == 1){
  5996     0006  002E               	movlb	14	; select bank14
  5997     0007  1C0D               	btfss	13,0	;volatile
  5998     0008  280A               	goto	u118_21
  5999     0009  280B               	goto	u118_20
  6000     000A                     u118_21:
  6001     000A  281D               	goto	i1l142
  6002     000B                     u118_20:
  6003     000B                     i1l1749:
  6004                           
  6005                           ;main.c: 124:         ADCON0bits.ADON = 0;
  6006     000B  0021               	movlb	1	; select bank1
  6007     000C  1393               	bcf	19,7	;volatile
  6008     000D                     i1l1751:
  6009                           
  6010                           ;main.c: 125:         valorADC = (ADRESH << 8) + ADRESL;
  6011     000D  080D               	movf	13,w	;volatile
  6012     000E  0020               	movlb	0	; select bank0
  6013     000F  00ED               	movwf	_valorADC+1
  6014     0010  0021               	movlb	1	; select bank1
  6015     0011  080C               	movf	12,w	;volatile
  6016     0012  0020               	movlb	0	; select bank0
  6017     0013  00EC               	movwf	_valorADC
  6018     0014                     i1l1753:
  6019                           
  6020                           ;main.c: 126:         ADCON0bits.ADON = 1;
  6021     0014  0021               	movlb	1	; select bank1
  6022     0015  1793               	bsf	19,7	;volatile
  6023                           
  6024                           ;main.c: 127:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  6025     0016  3014               	movlw	20
  6026     0017                     u127_27:
  6027     0017  0B89               	decfsz	9,f
  6028     0018  2817               	goto	u127_27
  6029     0019                     i1l1755:
  6030                           
  6031                           ;main.c: 128:         ADCON0bits.ADGO = 1;
  6032     0019  0021               	movlb	1	; select bank1
  6033     001A  1413               	bsf	19,0	;volatile
  6034     001B                     i1l1757:
  6035                           
  6036                           ;main.c: 129:         PIR1bits.ADIF = 0;
  6037     001B  002E               	movlb	14	; select bank14
  6038     001C  100D               	bcf	13,0	;volatile
  6039     001D                     i1l142:
  6040     001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6041     001E  0009               	retfie
  6042     001F                     __end_of_adc:
  6043     007E                     btemp	set	126	;btemp
  6044     007E                     int$flags	set	126
  6045     007E                     wtemp0	set	126
  6046                           
  6047                           	psect	idloc
  6048                           
  6049                           ;Config register IDLOC0 @ 0x8000
  6050                           ;	unspecified, using default values
  6051     8000                     	org	32768
  6052     8000  3FFF               	dw	16383
  6053                           
  6054                           ;Config register IDLOC1 @ 0x8001
  6055                           ;	unspecified, using default values
  6056     8001                     	org	32769
  6057     8001  3FFF               	dw	16383
  6058                           
  6059                           ;Config register IDLOC2 @ 0x8002
  6060                           ;	unspecified, using default values
  6061     8002                     	org	32770
  6062     8002  3FFF               	dw	16383
  6063                           
  6064                           ;Config register IDLOC3 @ 0x8003
  6065                           ;	unspecified, using default values
  6066     8003                     	org	32771
  6067     8003  3FFF               	dw	16383
  6068                           
  6069                           	psect	config
  6070                           
  6071                           ;Config register CONFIG1 @ 0x8007
  6072                           ;	External Oscillator mode selection bits
  6073                           ;	FEXTOSC = OFF, Oscillator not enabled
  6074                           ;	Power-up default value for COSC bits
  6075                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  6076                           ;	Clock Out Enable bit
  6077                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  6078                           ;	Clock Switch Enable bit
  6079                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6080                           ;	Fail-Safe Clock Monitor Enable bit
  6081                           ;	FCMEN = ON, FSCM timer enabled
  6082     8007                     	org	32775
  6083     8007  3FEC               	dw	16364
  6084                           
  6085                           ;Config register CONFIG2 @ 0x8008
  6086                           ;	Master Clear Enable bit
  6087                           ;	MCLRE = ON, MCLR pin is Master Clear function
  6088                           ;	Power-up Timer Enable bit
  6089                           ;	PWRTE = OFF, PWRT disabled
  6090                           ;	Low-Power BOR enable bit
  6091                           ;	LPBOREN = OFF, ULPBOR disabled
  6092                           ;	Brown-out reset enable bits
  6093                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6094                           ;	Brown-out Reset Voltage Selection
  6095                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  6096                           ;	Zero-cross detect disable
  6097                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  6098                           ;	Peripheral Pin Select one-way control
  6099                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  6100                           ;	Stack Overflow/Underflow Reset Enable bit
  6101                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6102                           ;	Background Debugger
  6103                           ;	DEBUG = OFF, Background Debugger disabled
  6104     8008                     	org	32776
  6105     8008  3FFF               	dw	16383
  6106                           
  6107                           ;Config register CONFIG3 @ 0x8009
  6108                           ;	WDT Period Select bits
  6109                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6110                           ;	WDT operating mode
  6111                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  6112                           ;	WDT Window Select bits
  6113                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6114                           ;	WDT input clock selector
  6115                           ;	WDTCCS = SC, Software Control
  6116     8009                     	org	32777
  6117     8009  3F9F               	dw	16287
  6118                           
  6119                           ;Config register CONFIG4 @ 0x800A
  6120                           ;	UserNVM self-write protection bits
  6121                           ;	WRT = OFF, Write protection off
  6122                           ;	Scanner Enable bit
  6123                           ;	SCANE = available, Scanner module is available for use
  6124                           ;	Low Voltage Programming Enable bit
  6125                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  6126     800A                     	org	32778
  6127     800A  3FFF               	dw	16383
  6128                           
  6129                           ;Config register CONFIG5 @ 0x800B
  6130                           ;	UserNVM Program memory code protection bit
  6131                           ;	CP = OFF, Program Memory code protection disabled
  6132                           ;	DataNVM code protection bit
  6133                           ;	CPD = OFF, Data EEPROM code protection disabled
  6134     800B                     	org	32779
  6135     800B  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         59
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     12      66
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S774$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> aux(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S721$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S721$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> aux(BANK1[20]), 


Critical Paths under _main in COMMON

    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _adc in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _adc in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _adc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _adc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _adc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _adc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _adc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _adc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _adc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _adc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _adc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _adc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _adc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _adc in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6647
                                             72 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    5312
                                             67 BANK0      5     1      4
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5004
                                             60 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           22    20      2    4697
                                             43 BANK0     17    15      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                27    19      8    3520
                                             16 BANK0     27    19      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    1913
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     301
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     726
                                              3 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _adc                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _adc (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 15:38:55 2023

                            l31 06AA                              l34 06B3                              l37 06C4  
                            l90 060D                              l82 05F6                              l84 05FE  
                            l93 0694                              l86 0605                              l88 060C  
                            l96 06BC                             l102 0463                             l112 05A2  
                           l106 0463                             l109 0545                             l118 064A  
                           l191 05C9                             l460 034D                             l446 0252  
                           l447 0263                             l459 033C                             l831 0553  
                           l809 062C                             l842 008F                             l835 057A  
                           l843 00B0                             l861 03EE                             l854 0162  
                           l871 0680                             l847 00AE                             l848 011F  
                           l874 0680                             l867 0666                             l886 04B3  
                           l894 05ED                             l897 06CB                             u600 0469  
                           u601 0468                             u610 046E                             u611 046D  
                           u700 01D3                             u620 047D                             u701 01D2  
                           u621 047C                             u710 01E6                             u630 049B  
                           u711 01E5                             u631 049A                             u720 0210  
                           u800 02C6                             u640 05ED                             u721 020F  
                           u801 02C5                             u641 05EC                             u730 022F  
                           u650 016E                             u810 02D9                             u731 022E  
                           u651 016D                             u811 02D8                             u635 0497  
                           u740 0234                             u820 02FB                             u900 0051  
                           u741 0233                             u725 020C                             u821 02FA  
                           u670 0199                             u830 0319                             u910 0058  
                           u671 0198                             u831 0318                             u911 0057  
                           u840 031E                             u760 026F                             u841 031D  
                           u825 02F7                             u761 026E                             u690 01C3  
                           u930 0084                             u931 0083                             u780 029A  
                           u860 054C                             u940 009C                             u781 0299  
                           u861 054B                             u941 009B                             u870 0573  
                           u950 00A5                             u871 0572                             u951 00A4  
                           u935 0080                             u880 0674                             u960 012D  
                           u881 0673                             u961 012C                             u970 013A  
                           u890 0050                             u875 056F                             u971 0139  
                           u891 004E                             u980 0147                             u885 0670  
                           u981 0146                             u965 0129                             u990 014D  
                           u991 014C                             u985 0143                             _adc 0004  
                           _abs 0667                             _aux 00C2                             _pad 0546  
                           wreg 0009                            ?_adc 0070                            ?_abs 0073  
                          l1401 02B9                            l1411 02D9                            l1403 02C6  
                          l1331 0469                            l1501 0606                            l1413 02FB  
                          l1405 02C9                            l1341 04AA                            l1333 046E  
                          l1421 0548                            l1503 060A                            l1415 030B  
                          l1407 02D1                            l1335 0473                            l1351 05E0  
                          l1431 0565                            l1423 054C                            l1511 0372  
                          l1601 059C                            l1361 0199                            l1353 0163  
                          l1409 02D5                            l1417 0319                            l1337 047D  
                          l1329 0464                            l1345 05CC                            l1433 0573  
                          l1425 0551                            l1441 0045                            l1521 03AA  
                          l1513 0376                            l1505 0350                            l1603 05A0  
                          l1371 01D6                            l1363 01B8                            l1355 0164  
                          l1419 031E                            l1435 0667                            l1339 049B  
                          l1347 05CF                            l1427 0556                            l1451 008A  
                          l1443 0053                            l1523 03B7                            l1515 037D  
                          l1507 0361                            l1531 03D6                            l1611 0664  
                          l1621 06B4                            l1541 05A7                            l1381 0210  
                          l1373 01DE                            l1365 01BC                            l1357 016E  
                          l1437 0674                            l1349 05DB                            l1429 0560  
                          l1461 00AA                            l1453 0097                            l1445 0058  
                          l1517 0387                            l1509 0369                            l1605 064D  
                          l1701 04B8                            l1631 0407                            l1623 03F0  
                          l1551 05B2                            l1543 05A9                            l1615 06A1  
                          l1383 0220                            l1375 01E2                            l1367 01C6  
                          l1359 018F                            l1391 0264                            l1471 00EE  
                          l1463 00B4                            l1455 009C                            l1447 0076  
                          l1439 0035                            l1527 03CC                            l1519 0391  
                          l1607 0652                            l1711 04C0                            l1703 04B9  
                          l1641 0424                            l1625 03F5                            l1633 040C  
                          l1561 05C3                            l1553 05BB                            l1545 05AB  
                          l1537 06BD                            l1617 06A4                            l1385 0221  
                          l1377 01E6                            l1369 01D3                            l1393 0265  
                          l1481 014D                            l1473 00F2                            l1465 00B7  
                          l1457 00A0                            l1449 0084                            l1609 065A  
                          l1721 04C7                            l1713 04C1                            l1705 04BB  
                          l1491 05F3                            l1651 0441                            l1635 0412  
                          l1643 0429                            l1627 0400                            l1571 06AF  
                          l1563 05C5                            l1555 05BD                            l1547 05AD  
                          l1539 05A3                            l1619 06A7                            l1379 01EE  
                          l1387 022F                            l1395 026F                            l1483 0151  
                          l1475 012D                            l1467 00BC                            l1459 00A5  
                          l1731 04D1                            l1723 04C9                            l1715 04C2  
                          l1707 04BC                            l1493 05F8                            l1581 068A  
                          l1661 045E                            l1645 042F                            l1653 0446  
                          l1637 041D                            l1629 0403                            l1573 06B2  
                          l1565 05C7                            l1557 05BF                            l1549 05B0  
                          l1389 0234                            l1397 0290                            l1485 0157  
                          l1477 013A                            l1469 00EA                            l1741 04E2  
                          l1733 04D4                            l1725 04CB                            l1717 04C4  
                          l1709 04BF                            l1495 05FC                            l1583 0692  
                          l1575 0682                            l1671 051D                            l1663 0503  
                          l1655 044C                            l1647 043A                            l1639 0420  
                          l1591 058E                            l1567 06AB                            l1559 05C1  
                          l1399 029A                            l1479 0147                            l1743 04EF  
                          l1735 04D6                            l1727 04CD                            l1719 04C5  
                          l1497 05FF                            l1489 05EF                            l1577 0684  
                          l1665 0507                            l1657 0457                            l1649 043D  
                          l1593 0590                            l1585 057C                            l1673 062E  
                          l1569 06AE                            l1681 0610                            l1745 04F3  
                          l1737 04D9                            l1729 04CF                            l1499 0603  
                          l1579 0688                            l1667 050E                            l1659 045A  
                          l1595 0594                            l1587 0582                            l1675 0631  
                          l1683 0614                            l1739 04DC                            l1669 0519  
                          l1597 0596                            l1589 0584                            l1677 063B  
                          l1685 0616                            l1599 059A                            l1679 063F  
                          l1687 0618                            l1689 0623                            l1697 04B4  
                          l1699 04B7                            ?_pad 007B                            STR_1 0695  
                          u1000 05F3                            u1001 05F2                            u1010 05FC  
                          u1011 05FB                            u1020 0603                            u1021 0602  
                          u1030 060A                            u1110 0412                            u1031 0609  
                          u1111 0411                            u1040 0361                            u1105 03FB  
                          u1041 0360                            u1130 042F                            u1050 0387  
                          u1131 042E                            u1051 0386                            u1060 0391  
                          u1125 0418                            u1061 0390                            u1150 044C  
                          u1151 044B                            u1207 04F9                            u1080 0664  
                          u1145 0435                            u1217 0591                            u1081 0663  
                          u1090 03F5                            u1170 064A                            u1091 03F4  
                          u1227 059D                            u1075 0587                            u1171 0649  
                          u1237 050A                            u1165 0452                            _LATA 0016  
                          _LATB 0017                            u1247 0515                            _LATC 0018  
                          u1257 0520                            u1267 068D                            u1197 04D2  
                          _PMD0 0796                            _PMD1 0797                            _PMD2 0798  
                          _PMD3 0799                            _PMD4 079A                            _PMD5 079B  
                          _WPUA 0F39                            _WPUB 0F44                            _WPUC 0F4F  
                          _WPUE 0F65                            abs@a 0073               ?_Lcd_Write_String 0070  
                          _dbuf 00A2                            _main 04B4                            _dtoa 0033  
                          _prec 006A                            pad@i 0025                            pad@p 007C  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          pad@w 0027                            btemp 007E                            start 001F  
            ??_Lcd_Write_String 0075                 __end_of_Lcd_Cmd 0695                           ??_adc 0070  
                         ??_abs 0075                           ??_pad 0024   __end_of_OSCILLATOR_Initialize 06B4  
               __end_of___aodiv 0264                           _ADACQ 009D                           ?_main 0070  
                         ?_dtoa 0030                           _ADCLK 0098                 __end_of___aomod 034E  
                         _ADPCH 009E                           _ADREF 009A                           i1l142 001D  
                         _OSCEN 0891                    vfpfcnvrt@fmt 004B                           _TRISA 0011  
                         _TRISB 0012                           _TRISC 0013                           u66lld 018D  
                         u75lld 0252                           u68lld 01B8                           u92lld 0076  
                         u85lld 033C                           u77lld 028E                           u79lld 02B9  
                         _flags 006E                           _fputc 0464                           _fputs 05CA  
                         pad@fp 0029                           _width 00A0                           _putch 06CB  
                         dtoa@d 0030                           dtoa@i 0048                           dtoa@n 0040  
                         dtoa@p 003C                           dtoa@s 004A                           dtoa@w 003E  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 062D  
              __end_of_Lcd_Init 0546                __end_of_Lcd_Port 060E                 __initialization 0021  
                  __end_of_main 0503                    __end_of_dtoa 0163                          ??_main 0068  
                        ??_dtoa 0038                          _ADCON0 0093                          _ADCON1 0094  
                        _ADCON2 0095                          _ADCON3 0096                          ?_fputc 0070  
                        ?_fputs 0078                          _ADRESH 008D                          _ADRESL 008C  
                        _ANSELA 0F38                          ?_putch 0070                          _ANSELB 0F43  
                        _ANSELC 0F4E                          _ODCONA 0F3A                          _ODCONB 0F45  
                        _ODCONC 0F50                          i1l1751 000D                          i1l1753 0014  
                        i1l1755 0019                          i1l1747 0006                          i1l1757 001B  
                        i1l1749 000B                          u118_20 000B                          u118_21 000A  
                        u127_27 0017                          _INLVLA 0F3C                          _INLVLB 0F47  
                        _INLVLC 0F52                          _INLVLE 0F68                          _OSCFRQ 0893  
                     ??_Lcd_Cmd 0071                    vfprintf@cfmt 0061                       ??___aodiv 0070  
                     ??___aomod 0070                          pad@buf 007B                          dtoa@fp 003B  
                        fputc@c 0070                  _PMD_Initialize 06BD                          fputs@c 0020  
                        fputs@i 0021                          fputs@s 0023                          putch@c 0070  
              __end_of_vfprintf 0667                       ??_sprintf 0067                 Lcd_Set_Cursor@a 0075  
               Lcd_Set_Cursor@b 0073                 Lcd_Set_Cursor@y 0077                 Lcd_Set_Cursor@z 0076  
             _SYSTEM_Initialize 06A1         __end_of__initialization 002F              ?_SYSTEM_Initialize 0070  
             __end_of_Lcd_Clear 06BD                  __pcstackCOMMON 0070             ??_SYSTEM_Initialize 0070  
                 __end_of_fputc 04B4                   __end_of_fputs 05EE                   __end_of_putch 06CC  
        __end_of_PMD_Initialize 06C5                  _Lcd_Set_Cursor 03EF                       ?_Lcd_Init 0070  
                     ?_Lcd_Port 0070                         ??_fputc 0073       __end_of_SYSTEM_Initialize 06AB  
                       ??_fputs 0079                         ??_putch 0070                      __pbssBANK0 006A  
                    __pbssBANK1 00A0                      __pmaintext 04B4                      __pintentry 0004  
        __end_of_Lcd_Set_Cursor 0464                 ?_PMD_Initialize 0070                         _OSCCON1 088D  
                       _OSCCON3 088F                         _OSCTUNE 0892                      ??_Lcd_Init 0073  
                       _SLRCONA 0F3B                         _SLRCONB 0F46                         _SLRCONC 0F51  
                    ??_Lcd_Port 0070                  _Lcd_Write_Char 057B                         _Lcd_Cmd 0681  
                       ___aodiv 0163                         ___aomod 0264                       ?_vfprintf 005C  
               ?_Lcd_Set_Cursor 0073                         __ptext1 060E                         __ptext2 064B  
                       __ptext3 034E                         __ptext4 0033                         __ptext5 0546  
                       __ptext6 05CA                         __ptext7 0464                         __ptext8 06CB  
                       __ptext9 0667           _OSCILLATOR_Initialize 06AB        ??_PIN_MANAGER_Initialize 0070  
                       _sprintf 060E                         clrloop0 06C6          __end_of_Lcd_Write_Char 05A3  
          end_of_initialization 002F                         fputc@fp 0072                         fputs@fp 0078  
             __end_of_vfpfcnvrt 03EF                vfpfcnvrt@convarg 0051                       Lcd_Port@a 0070  
                    ??_vfprintf 005F                 ?_Lcd_Write_Char 0070               Lcd_Write_String@a 0078  
             Lcd_Write_String@i 0076                       _Lcd_Clear 06B4                     vfpfcnvrt@ap 004C  
                   vfpfcnvrt@cp 005A                     vfpfcnvrt@fp 0059                _Lcd_Write_String 062D  
        ?_OSCILLATOR_Initialize 0070             start_initialization 0021                     __end_of_adc 001F  
                   __end_of_abs 0681                     __end_of_pad 057B                     vfprintf@fmt 005C  
                    ?_Lcd_Clear 0070                ??_PMD_Initialize 0070                 Lcd_Write_Char@a 0074  
               Lcd_Write_Char@y 0073                       ___latbits 0002                   __pcstackBANK0 0020  
                 __pcstackBANK1 00D6                ___aodiv@dividend 0028                        ?_Lcd_Cmd 0070  
        _PIN_MANAGER_Initialize 05A3                ??_Lcd_Set_Cursor 0074                        ?___aodiv 0020  
                      ?___aomod 0020                ___aodiv@quotient 0073                        ?_sprintf 0063  
                      _LATBbits 0017                       clear_ram0 06C5                        _PIE1bits 0717  
                      Lcd_Cmd@a 0072                        _PIR1bits 070D                     ??_Lcd_Clear 0073  
                     _vfpfcnvrt 034E                      _ADCON0bits 0093                ??_Lcd_Write_Char 0071  
                      _Lcd_Init 0503                        _Lcd_Port 05EE        __end_of_Lcd_Write_String 064B  
                    vfprintf@ap 005E                      vfprintf@fp 0060         ??_OSCILLATOR_Initialize 0070  
                    ?_vfpfcnvrt 004B                 ___aodiv@divisor 0020                 ___aodiv@counter 0071  
                    sprintf@fmt 0063                        _dtoa$802 0039                        __ptext10 0264  
                      __ptext11 0163                        __ptext20 06B4                        __ptext12 06A1  
                      __ptext21 0681                        __ptext13 06BD                        __ptext22 05EE  
                      __ptext14 05A3                        __ptext15 06AB                        __ptext16 062D  
                      __ptext17 057B                        __ptext18 03EF                        __ptext19 0503  
                      _valorADC 006C                        int$flags 007E                        _vfprintf 064B  
              ___aomod@dividend 0028                      _INTCONbits 000B              Lcd_Write_Char@temp 0072  
                      intlevel1 0000                       sprintf@ap 00D6         ?_PIN_MANAGER_Initialize 0070  
               ___aomod@divisor 0020                     ??_vfpfcnvrt 004D                 ___aomod@counter 0071  
            Lcd_Set_Cursor@temp 0078                   __pstringtext1 0695                   __pstringtext2 0000  
                      sprintf@f 00D8                        sprintf@s 00D7                    ___aodiv@sign 0072  
__end_of_PIN_MANAGER_Initialize 05CA                    ___aomod@sign 0072  
